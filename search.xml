<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux简单入门</title>
      <link href="/2022/08/20/categories/linux/linux-jian-dan-ru-men/"/>
      <url>/2022/08/20/categories/linux/linux-jian-dan-ru-men/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux简单入门"><a href="#Linux简单入门" class="headerlink" title="Linux简单入门"></a>Linux简单入门</h1><h2 id="1-Linux简介"><a href="#1-Linux简介" class="headerlink" title="1 Linux简介"></a>1 Linux简介</h2><ul><li>Linux不是一个具体的操作系统，而是一类操作系统的总称。具体版本称为发行版<ul><li><code>Red Hat</code>：目前被IBM收购，收费版，目前全球最大的Linux供应商</li><li><code>CentOS</code>：Red Hat推出的免费版</li><li><code>Ubuntu</code>：界面比较友好</li></ul></li></ul><hr><h2 id="2-Linux的目录结构"><a href="#2-Linux的目录结构" class="headerlink" title="2 Linux的目录结构"></a>2 Linux的目录结构</h2><table><thead><tr><th>目录结构</th><th>描述</th></tr></thead><tbody><tr><td>&#x2F;</td><td>根目录（Unix和Linux中没有盘符的概念）一个硬盘一个根</td></tr><tr><td>&#x2F;bin</td><td>系统的常用命令目录。包括控制台命令、系统可执行文件、系统的核心二进制文件等</td></tr><tr><td>&#x2F;etc</td><td>发布目录。保存系统中所有的核心内容，要求控制权限高，建议不要随便读写</td></tr><tr><td>&#x2F;usr</td><td>用户目录。相当于Windows系统中的program files 目录。常用于安装系统所有用户共用的软件、资源的</td></tr><tr><td>&#x2F;root 或 ~ 表示</td><td>root根用户的用户目录，相当于windows系统中的c:&#x2F;users&#x2F;administrator目录</td></tr><tr><td>&#x2F;home</td><td>保存其他用户主目录的目录。 &#x2F;home&#x2F;yangshujuan</td></tr><tr><td>&#x2F;var</td><td>系统运行过程的数据目录</td></tr></tbody></table><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829215651806.png" alt="目录结构" style="zoom: 67%;" /><ul><li>各种路径的解释</li></ul><table><thead><tr><th>路径</th><th>描述</th><th>写法</th></tr></thead><tbody><tr><td>全路径</td><td>从filesystem根目录开始寻找文件(绝对路径)</td><td>以&#x2F;开头。举例:找 usr下local中的内容。写法为 &#x2F;usr&#x2F;local</td></tr><tr><td>相对路径</td><td>从当前资料路径开始寻找，找到其他资源路径的过程</td><td>找当前资源的子目录直接写子目录名称，找上一级文件写法为   ..&#x2F;</td></tr><tr><td>特殊路径</td><td>&#x2F;表示磁盘根<br>**~**表示&#x2F;root （root用户的根目录），root文件夹的根目录</td><td></td></tr></tbody></table><hr><h2 id="3-Linux中的常用命令"><a href="#3-Linux中的常用命令" class="headerlink" title="3 Linux中的常用命令"></a>3 Linux中的常用命令</h2><ul><li><code>Linux中的命令严格区分大小写</code></li></ul><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>pwd</td><td>print working directory ：输出当前工作目录，光标所有位置的目录(绝对路径)</td></tr><tr><td>cd</td><td>change directory :’切换目录 ‘.’表示当前目当 ‘..’上一级目录（父目录)</td></tr><tr><td>ls</td><td>List : 列表目录中的内容。默认显示当前目录下的文件列表</td></tr><tr><td>clear</td><td>清空屏幕</td></tr><tr><td>touch</td><td>创建空白文件</td></tr><tr><td>cat</td><td>查看文件的全部内容，一次性显示文件中所有内容</td></tr><tr><td>more</td><td>多屏显示文件内容，显示后，使用空格显示下一屏，回车显示下一行，q退出分屏显示, ctrl+c 退出命令</td></tr><tr><td>head</td><td>显示文件的前多少行，默认显示前10行<br/>head –number filename 显示文件中的前多少行</td></tr><tr><td>tail</td><td>显示文件末尾多少行，默认显示末尾10行<br/>tail –number filename</td></tr><tr><td>mkdir</td><td>make directory 创建目录</td></tr><tr><td>cp</td><td>copy : 复制命令</td></tr><tr><td>rm</td><td>remove :删除</td></tr><tr><td>mv</td><td>Move 移动或重命名，相当于剪切和重命名</td></tr><tr><td>vi | vim</td><td>启动Linux中的文本编辑器，vim是vi增强命令，不代表所有的Linux都支持<br/>编辑模式 （编辑文件内容）<br/>a  追加方式进行编辑模式<br/>i   插入方式进行编辑模式<br/>o  在光标所在位置之下，新增一行<br/>O  在光标所在位置之上，新增一行<br/>命令模式 （控制文件的状态<br/>dd 删除指定行，默认1行<br/>:w  write保存    :q quit退出vi编辑器  :wq 保存并退出<br/>:q! 强制退出不保存  :set nu 显示行号  &#x2F;keywords 搜索<br/>G 光标跳转到文件尾  gg光标跳转到文件头</td></tr><tr><td>reboot</td><td>用来重启Linux系统和Windows系统中的restart一样，但是重启必须是root用户才有权限</td></tr><tr><td>halt</td><td>用来关闭正在运行Linux操作系统 (关机)</td></tr></tbody></table><hr><h2 id="4-Linux中的常用配置"><a href="#4-Linux中的常用配置" class="headerlink" title="4 Linux中的常用配置"></a>4 Linux中的常用配置</h2><h3 id="4-1-设置系统时间"><a href="#4-1-设置系统时间" class="headerlink" title="4.1 设置系统时间"></a>4.1 设置系统时间</h3><ul><li><code>查看当前时间 date</code><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220830084658883.png" alt="查看当前时间" style="zoom: 67%;" /></li></ul></li><li><code>设置系统日期和时间 date -s </code><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220830085034062.png" alt="设置时间" style="zoom:67%;" /></li></ul></li></ul><hr><h3 id="4-2-启动网络"><a href="#4-2-启动网络" class="headerlink" title="4.2 启动网络"></a>4.2 启动网络</h3><ul><li>nmcli c up ens33 启动网卡(只针对当次使用)</li><li>修改配置文件（永久可用）<ul><li>#vim &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33</li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220830090316481.png" alt="启动网络"></li></ul></li></ul><hr><h3 id="4-3-NAT模式"><a href="#4-3-NAT模式" class="headerlink" title="4.3 NAT模式"></a>4.3 NAT模式</h3><ul><li><code>在VMWare中默认使用的NAT模式</code></li><li><code>NAT模式</code>：Network Address Translation，网络地址转换，允许一个整体机构以一个公用IP地址出现在Internet上，顾名思义，它是一种把内部私有网络地址（IP地址）通过NAT转发成合法公有网络IP地址的技术</li><li><code>优点</code>：可以节省IP资源 (不会占用局域网的Ip地址，因为是新分配的网段)</li><li><code>缺点</code>：由于网段不同，局域网内其他设备无法访问虚拟机中的操作系统</li></ul><hr><h4 id="4-4-快照与克隆"><a href="#4-4-快照与克隆" class="headerlink" title="4.4 快照与克隆"></a>4.4 快照与克隆</h4><ul><li><code>快照</code>：类似于Windows的还原点<ul><li>拍摄快照</li><li>恢复快照</li><li>快照管理 -&gt; 删除快照等操作</li></ul></li><li><code>克隆</code>： 快速的生成一个与当前系统完全一样的虚拟机</li></ul><hr><h2 id="5-Xshell与Xftp"><a href="#5-Xshell与Xftp" class="headerlink" title="5 Xshell与Xftp"></a>5 Xshell与Xftp</h2><h3 id="5-1-无法通过root连接远程服务器"><a href="#5-1-无法通过root连接远程服务器" class="headerlink" title="5.1 无法通过root连接远程服务器"></a>5.1 无法通过root连接远程服务器</h3><ol><li><p>先在服务器的平台上<code>使用非root用户登录，然后再获得root权限</code></p><ul><li><p>如果是第一次登录root用户，则需要设置root密码</p><ul><li><blockquote><p>sudo passwd root</p></blockquote></li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829100213042.png" alt="设置root密码" style="zoom:50%;" /></li></ul></li><li><p>如果是第二次登录root用户，则直接通过 <code>su</code> 命令获得root权限</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829100409070.png" alt="直接登录" style="zoom:67%;" /></li></ul></li></ul></li><li><p>获得root权限之后，修改ssh配置，位置在&#x2F;etc&#x2F;ssh&#x2F;sshd_config，修改内容如下</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829100842382.png" alt="原内容" style="zoom:50%;" /></li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829100929978.png" alt="修改后" style="zoom:50%;" /></li><li>插入命令为a，保存(写入)命令为 :w，退出命令为 :q，插入后记得按esc切回输入命令</li></ul></li><li><p>重启ssh服务</p><ul><li><blockquote><p>service ssh restart</p></blockquote></li></ul></li><li><p>测试使用远程直接登录root账户</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829101335272.png" alt="root用户登录" style="zoom:50%;" /></li></ul></li></ol><hr><h2 id="6-Linux中文件的压缩与解压缩"><a href="#6-Linux中文件的压缩与解压缩" class="headerlink" title="6 Linux中文件的压缩与解压缩"></a>6 Linux中文件的压缩与解压缩</h2><h3 id="6-1-tar-gz格式"><a href="#6-1-tar-gz格式" class="headerlink" title="6.1 *.tar.gz格式"></a>6.1 *.tar.gz格式</h3><ul><li>tar.gz是Linux中的一种文件压缩格式。使用tar命令实现对文件的压缩与解压处理</li></ul><hr><h4 id="6-1-1-tar命令的相关参数"><a href="#6-1-1-tar命令的相关参数" class="headerlink" title="6.1.1 tar命令的相关参数"></a>6.1.1 tar命令的相关参数</h4><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>-c</td><td>创建压缩文件</td></tr><tr><td>-C</td><td>指定解压文件存放的位置</td></tr><tr><td>-x</td><td>解压</td></tr><tr><td>-t</td><td>查看内容</td></tr><tr><td>-z</td><td>有gzip属性</td></tr><tr><td>-v</td><td>显示所有过程</td></tr><tr><td>-f</td><td>使用压缩或解压缩文件的名字，这个参数是最后一个参数，后面只能接文件名</td></tr></tbody></table><hr><h4 id="6-1-2-创建-tar-gz-压缩文件"><a href="#6-1-2-创建-tar-gz-压缩文件" class="headerlink" title="6.1.2 创建 tar.gz 压缩文件"></a>6.1.2 创建 tar.gz 压缩文件</h4><ul><li><code>语法</code><ul><li>tar -czvf 压缩文件的名称.tar.gz 源文件或目录名称</li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220830092630214.png" alt="创建压缩文件"></li></ul></li></ul><hr><h4 id="6-1-3-解压-tar-gz-文件"><a href="#6-1-3-解压-tar-gz-文件" class="headerlink" title="6.1.3 解压 tar.gz 文件"></a>6.1.3 解压 tar.gz 文件</h4><ul><li><code>语法</code><ul><li>tar -zxvf 解压名</li><li>tar -zxvf 解压文件名 -C 指定目录</li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220830093012414.png" alt="解压"></li></ul></li></ul><hr><h3 id="6-2-zip格式"><a href="#6-2-zip格式" class="headerlink" title="6.2 *.zip格式"></a>6.2 *.zip格式</h3><ul><li>如果压缩文件格式为zip，那么需要使用unzip命令解压.zip压缩包</li></ul><hr><h4 id="6-2-1-unzip命令的相关参数"><a href="#6-2-1-unzip命令的相关参数" class="headerlink" title="6.2.1 unzip命令的相关参数"></a>6.2.1 unzip命令的相关参数</h4><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>-n</td><td>解压缩时不要覆盖原有的文件</td></tr><tr><td>-d</td><td>指定文件解压后所要存储的目录</td></tr><tr><td>-v</td><td>执行时显示详细信息</td></tr></tbody></table><hr><h4 id="6-2-2-解压-zip-文件"><a href="#6-2-2-解压-zip-文件" class="headerlink" title="6.2.2 解压 zip 文件"></a>6.2.2 解压 zip 文件</h4><ul><li><code>语法</code><ul><li>unzip 压缩文件名.zip</li><li>unzip 压缩文件名.zip -d 解压到指定目录</li></ul></li></ul><hr><h2 id="7-安装-jdk"><a href="#7-安装-jdk" class="headerlink" title="7 安装 jdk"></a>7 安装 jdk</h2><ol><li><p><code>下载Linux对应版本的jdk</code></p><ul><li>查看Linux操作系统的位数 getconf LONG_BIT<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829152608716.png" alt="查看位数" style="zoom:80%;" /></li></ul></li><li>下载压缩文件</li></ul></li><li><p><code>解压压缩文件</code></p><ul><li><blockquote><p>tar -xvf jdk-xxxxxxxx</p></blockquote></li><li><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829154519401.png" alt="解压文件"></p></li></ul></li><li><p><code>配置环境变量</code></p></li></ol><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">export</span> <span class="token value attr-value">JAVA_HOME=/usr/local/jdk/jdk1.8.0_341</span><span class="token key attr-name">export</span> <span class="token value attr-value">CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><span class="token key attr-name">export</span> <span class="token value attr-value">PATH=$PATH:$JAVA_HOME/bin</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829155158396.png" alt="配置环境变量" style="zoom: 67%;" /><ol start="4"><li><p><code>使用环境变量生效</code></p><ul><li><blockquote><p>source &#x2F;etc&#x2F;profile</p></blockquote></li><li><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829154845677.png" alt="环境变量生效"></p></li></ul></li><li><p><code>测试jdk是否安装成功</code></p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829155037209.png" alt="jdk安装成功"></li></ul></li><li><p><code>编写测试代码</code></p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829155529246.png" alt="测试"></li></ul></li></ol><hr><h2 id="8-安装-tomcat"><a href="#8-安装-tomcat" class="headerlink" title="8 安装 tomcat"></a>8 安装 tomcat</h2><ol><li><code>下载Linux对应版本（步骤同上）</code></li><li><code>解压tomcat压缩文件（步骤同上）</code></li><li><code>配置环境变量</code></li></ol><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">export</span> <span class="token value attr-value">CATALINA_BASE=/usr/local/tomcat/apache-tomcat-8.5.82/</span><span class="token key attr-name">export</span> <span class="token value attr-value">PATH=$CATALINA_BASE/bin:$PATH</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829163053287.png" alt="配置环境变量"></p><ol start="4"><li><p><code>使用环境变量生效（步骤同上）</code></p></li><li><p><code>启动Tomcat服务</code></p><ul><li>启动Tomcat服务：<code>./startup.sh</code><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829163541751.png" alt="启动服务" style="zoom:50%;" /></li></ul></li><li>启动并输出日志：<code>./startup.sh &amp; tail -f ../logs/catalina.out</code><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829164030066.png" alt="输出日志" style="zoom:50%;" /></li></ul></li></ul></li><li><p><code>测试服务是否启动成功</code></p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829164312941.png" alt="成功启动"></li></ul></li><li><p><code>关闭防火墙（额外）</code></p><ul><li>关闭防火墙，重启失效(Linux系统一旦重启，Linux中防火墙又会被开启)<ul><li>service Firewalld stop</li></ul></li><li>禁用防火墙，永久有效<ul><li>systemctl disable firewalld</li></ul></li><li>启动防火墙（对禁用防火墙进行启动）<ul><li>systemctl enable firewalld</li></ul></li></ul></li></ol><hr><h2 id="9-安装MySQL"><a href="#9-安装MySQL" class="headerlink" title="9 安装MySQL"></a>9 安装MySQL</h2><ol><li><code>使用apt安装mysql服务</code><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829182437775.png" alt="安装mysql"></li></ul></li><li><code>检查是否已经设置为开机启动MySQL</code><ul><li>systemctl list-unit-files | grep mysqld</li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829182941984.png" alt="检查开机自启"></li></ul></li><li><code>设置开机启动</code><ul><li>systemctl enable mysqld.service</li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829183053211.png" alt="设置开机自启"></li></ul></li><li><code>启动MySQL服务</code><ul><li>systemctl start mysqld.service</li></ul></li><li><code>测试是否安装成功</code><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/linux/image-20220829183222435.png" alt="安装成功"></li></ul></li></ol><hr>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android学习</title>
      <link href="/2022/07/21/categories/android-studio/androidstudio/"/>
      <url>/2022/07/21/categories/android-studio/androidstudio/</url>
      
        <content type="html"><![CDATA[<h1 id="AndroidStudio"><a href="#AndroidStudio" class="headerlink" title="AndroidStudio"></a>AndroidStudio</h1><h2 id="1-创建项目"><a href="#1-创建项目" class="headerlink" title="1 创建项目"></a>1 创建项目</h2><ol><li>点击 <code>file-&gt;new project</code> 新建项目<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/AndroidStudio/image-20220906110801561.png" alt="图1.1 新建项目"></li></ul></li><li>选择 <code>empty Activity</code><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/AndroidStudio/image-20220906110844430.png" alt="图1.2 选择模板"></li></ul></li><li>根据需求设置相关属性<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/AndroidStudio/image-20220906111024189.png" alt="图1.3 设置项目的属性"></li></ul></li><li>点击finish，新建项目结束，后面需要等待很久gradle的加载，当然这里可以设置本地gradle</li><li>设置Android模拟器<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/AndroidStudio/image-20220906111342597.png" alt="图1.4 创建模拟器"></li></ul></li><li>设置system image，这里如果出现问题可以看“遇到的问题”模块<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/AndroidStudio/image-20220906111437871.png" alt="图1.5 选择模拟器的操作系统版本"></li></ul></li><li>设置AVD，这里可以直接使用默认设置<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/AndroidStudio/image-20220906111642764.png" alt="图1.6 确认模拟器配置"></li></ul></li><li>启动模拟器<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/AndroidStudio/image-20220906111833480.png" alt="图1.7 启动模拟器"></li></ul></li><li>运行默认的程序<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/AndroidStudio/image-20220906112045601.png" alt="图1.8 启动程序"></li></ul></li></ol><hr><h2 id="2-项目结构"><a href="#2-项目结构" class="headerlink" title="2 项目结构"></a>2 项目结构</h2><h3 id="2-1-修改项目结构为project"><a href="#2-1-修改项目结构为project" class="headerlink" title="2.1 修改项目结构为project"></a>2.1 修改项目结构为project</h3><ul><li>任何一个新建的项目都会默认使用Android模式的项目结构，但这并不是项目真实的目录结构，而是被Android Studio转换过的。这种项目结构简洁明了，适合进行快速开发，但是可能并不易于理解<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/AndroidStudio/image-20220906115234406.png" alt="图2.1 Android模式"></li></ul></li><li>根据图示，修改项目结构<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/AndroidStudio/image-20220906115404319.png" alt="图2.2 修改项目结构"></li></ul></li><li>这里我们将项目结构模式切换成Project，这就是项目真实的目录结构了，如图所示<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/AndroidStudio/image-20220906115504471.png" alt="图2.3 project模式的项目结构"></li></ul></li></ul><hr><h3 id="2-2-项目结构解析"><a href="#2-2-项目结构解析" class="headerlink" title="2.2 项目结构解析"></a>2.2 项目结构解析</h3><h4 id="2-2-1-Project项目结构解析"><a href="#2-2-1-Project项目结构解析" class="headerlink" title="2.2.1 Project项目结构解析"></a>2.2.1 Project项目结构解析</h4><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/AndroidStudio/image-20220906115504471.png" alt="图2.3 project模式的项目结构"></p><table><thead><tr><th>名称</th><th>作用</th></tr></thead><tbody><tr><td><strong>.gradle和.idea</strong></td><td>这两个目录下放置的都是Android Studio自动生成的一些文件，无须关心，也不要去手动编辑</td></tr><tr><td><strong>app</strong></td><td>项目中的代码、资源等内容几乎都是放置在这个目录下的，我们后面的开发工作也基本都是在这个目录下进行的</td></tr><tr><td><strong>build</strong></td><td>主要包含了一些在编译时自动生成的文件</td></tr><tr><td><strong>gradle</strong></td><td>这个目录下包含了gradle wrapper的配置文件，使用gradle wrapper的方式不需要提前将gradle下载好，而是会自动根据本地的缓存情况决定是否需要联网下载gradle。Android Studio默认没有启用gradle wrapper的方式，如果需要打开，可以点击Android Studio导航栏→File→Settings→Build, Execution, Deployment→Gradle，进行配置更改</td></tr><tr><td><strong>.gitignore</strong></td><td>用来将指定的目录或文件排除在版本控制之外</td></tr><tr><td><strong>build.gradle</strong></td><td>项目全局的gradle构建脚本，通常这个文件中的内容是不需要修改的</td></tr><tr><td><strong>gradle.properties</strong></td><td>全局的gradle配置文件，在这里配置的属性将会影响到项目中所有的gradle编译脚本</td></tr><tr><td><strong>gradlew和gradlew.bat</strong></td><td>这两个文件是用来在命令行界面中执行gradle命令的，其中gradlew是在Linux或Mac系统中使用的，gradlew.bat是在Windows系统中使用的</td></tr><tr><td><strong>local.properties</strong></td><td>这个文件用于指定本机中的Android SDK路径，通常内容都是自动生成的，我们并不需要修改。除非你本机中的Android SDK位置发生了变化，那么就将这个文件中的路径改成新的位置即可</td></tr><tr><td><strong>settings.gradle</strong></td><td>这个文件用于指定项目中所有引入的模块。由于HelloWorld项目中就只有一个app模块，因此该文件中也就只引入了app这一个模块。通常情况下模块的引入都是自动完成的，需要我们手动去修改这个文件的场景可能比较少</td></tr></tbody></table><ul><li>除了app目录之外，大多数的文件和目录都是自动生成的，我们并不需要进行修改，app目录下的内容才是重点</li></ul><hr><h4 id="2-2-2-app目录结构解析"><a href="#2-2-2-app目录结构解析" class="headerlink" title="2.2.2 app目录结构解析"></a>2.2.2 app目录结构解析</h4><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/AndroidStudio/image-20220906133949253.png" alt="app目录结构"></p><table><thead><tr><th>名称</th><th>作用</th></tr></thead><tbody><tr><td><strong>build</strong></td><td>这个目录和外层的build目录类似，主要也是包含了一些在编译时自动生成的文件，不过它里面的内容会更多更杂，不需要过多关心</td></tr><tr><td><strong>libs</strong></td><td>如果项目中使用到了第三方jar包，就需要把这些jar包都放在libs目录下，放在这个目录下的jar包都会被自动添加到构建路径里去</td></tr><tr><td><strong>androidTest</strong></td><td>用来编写Android Test测试用例的，可以对项目进行一些自动化测试</td></tr><tr><td><strong>java</strong></td><td>放置Java代码的地方</td></tr><tr><td><strong>res</strong></td><td>这个目录下的内容就有点多了。简单点说，就是你在项目中使用到的所有图片、布局、字符串等资源都要存放在这个目录下。当然这个目录下还有很多子目录，图片放在drawable目录下，布局放在layout目录下，字符串放在values目录下</td></tr><tr><td><strong>AndroidManifest.xml</strong></td><td>Android项目的配置文件，在程序中定义的所有四大组件都需要在这个文件里注册，另外还可以在这个文件中给应用程序添加权限声明</td></tr><tr><td><strong>test</strong></td><td>编写Unit Test测试用例</td></tr><tr><td><strong>.gitignore</strong></td><td>这个文件用于将app模块内的指定的目录或文件排除在版本控制之外，作用和外层的.gitignore文件类似</td></tr><tr><td><strong>build.gradle</strong></td><td>这是app模块的gradle构建脚本，这个文件中会指定很多项目构建相关的配置</td></tr><tr><td><strong>proguard-rules.pro</strong></td><td>这个文件用于指定项目代码的混淆规则，当代码开发完成后打成安装包文件，如果不希望代码被别人破解，通常会将代码进行混淆，从而让破解者难以阅读</td></tr></tbody></table><hr><h3 id="2-3-分析项目是如何被运行的"><a href="#2-3-分析项目是如何被运行的" class="headerlink" title="2.3 分析项目是如何被运行的"></a>2.3 <code>分析项目是如何被运行的</code></h3><p>首先，查看 <code>AndroidManifest.xml</code> 文件，可以看到如下代码</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>    <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.HelloWorldActivity<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.action.MAIN<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.LAUNCHER<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activity</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>这里是在对HelloWorldActivity这个活动进行注册，没有在AndroidManifest.xml里注册的活动是不能使用的</code>，</p><ul><li>其中 <code>intent-filter</code> 标签里的两行代码很重要：</li><li>&lt;action android:name&#x3D;”android.intent.action.MAIN” &#x2F;&gt;和&lt;category android:name&#x3D;”android.intent.category.LAUNCHER” &#x2F;&gt;<code>表示MainActivity是这个项目的主活动，在手机上点击应用图标，首先启动的就是这个活动</code></li></ul></li><li><p><code>HelloWorldActivity的作用</code>：</p><ul><li>HelloWorldActivity是一个 <code>活动</code>，<code>活动是Android应用程序的门面</code>，凡是能在应用中能看到的东西，都是放在活动中的</li><li>代码如下：</li></ul>  <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorldActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>hello_world_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>分析HelloWorldActivity</code></p><ul><li><code>继承自AppCompatActivity，AppCompatActivity又继承Activity</code><ul><li>这是一种向下兼容的Activity，可以将Activity在各个系统版本中增加的特性和功能最低兼容到Android 2.1系统</li><li>Activity是Android系统提供的一个活动基类，我们项目中所有的活动都必须继承它或者它的子类才能拥有活动的特性</li></ul></li><li><code>存在一个onCreate() 方法</code><ul><li>这个方法是一个活动被创建时必定要执行的方法</li><li>第一行是调用了父类的 onCreate 方法</li><li>第二行setContentView引用了对应的布局</li></ul></li></ul></li><li><p><code>Android程序的设计讲究逻辑与视图分离</code></p><ul><li>在前面可以看到，HelloWorldActivity并没有任何关于helloworld的输出，分析代码可知，页面的显示不在活动代码块，而在其他地方（当然，也可以通过java代码来实现页面）</li></ul></li><li><p><code>分析hello_world_layout布局</code></p><ul><li>布局文件都是定义在 <code>res/layout</code> 目录下，所以在对应目录下找到 <code>hello_world_layout.xml</code> 文件，文件内容如下：</li></ul>  <pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/hello_world_layout<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>paddingBottom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@dimen/activity_vertical_margin<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>paddingLeft</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@dimen/activity_horizontal_margin<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>paddingRight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@dimen/activity_horizontal_margin<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>paddingTop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@dimen/activity_vertical_margin<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">tools:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.helloworld.HelloWorldActivity<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Hello World!<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在上面的代码中可以看到，在 <code>&lt;TextView&gt;</code> 标签中有 Hello World！ 的字样，那么可以确定，应用程序显示的helloworld是在这里被定义的，也就是被 <code>android:text</code> 定义的</li></ul></li></ul><hr><h3 id="2-4-详解项目中的res资源"><a href="#2-4-详解项目中的res资源" class="headerlink" title="2.4 详解项目中的res资源"></a>2.4 详解项目中的res资源</h3><ul><li><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/AndroidStudio/image-20220911104157617.png" alt="res目录下的结构"></p></li><li><p>有这么多mipmap开头的文件夹是为了让程序更好的兼容各种设备，因为各个设备的分辨率很可能会不一样</p></li></ul><hr><h3 id="2-5-使用res目录下的资源"><a href="#2-5-使用res目录下的资源" class="headerlink" title="2.5 使用res目录下的资源"></a>2.5 使用res目录下的资源</h3><ul><li>打开 res&#x2F;values&#x2F;strings.xml 文件，内容如下：</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app_name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>HelloWorld<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><p>可以看到，这里定义了一个字符串，然后可以在其他地方引用它</p></li><li><p><code>引用res中资源的两种方式（重要）</code></p><ol><li><code>在代码中通过 R.标签.name（或者id）</code><ul><li>比如引用上面的字符串就是：R.string.app_name</li></ul></li><li><code>在XML通过 @标签/name（或者id）</code><ul><li>比如引用上面的字符串就是：@string&#x2F;app_name</li></ul></li><li>引用示例</li></ol>  <pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span>    <span class="token attr-name"><span class="token namespace">android:</span>allowBackup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@mipmap/ic_launcher<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@string/app_name<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>supportsRtl</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@style/AppTheme<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><h3 id="2-6-详解build-gradle文件"><a href="#2-6-详解build-gradle文件" class="headerlink" title="2.6 详解build.gradle文件"></a>2.6 详解build.gradle文件</h3><ul><li><p>Android Studio采用 <code>Gradle</code> 来构建项目</p></li><li><p>它使用了一种基于Groovy的领域特定语言（DSL）来声明项目设置，<code>摒弃了传统基于XML（如Ant和Maven）的各种烦琐配置</code></p></li><li><p>在2.2中我们可以看到，<code>项目中有两个 build.gradle 文件，一个是在最外层目录，另一个是在app目录下</code></p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/AndroidStudio/image-20220911125512710.png" alt="不同目录的gralde文件"></li></ul></li><li><p>外层build.gradle文件</p><ul><li>代码：</li></ul>  <pre class="line-numbers language-gradle" data-language="gradle"><code class="language-gradle">buildscript &#123;    repositories &#123;        jcenter()    &#125;    dependencies &#123;        classpath &#39;com.android.tools.build:gradle:2.2.0&#39;    &#125;&#125;allprojects &#123;    repositories &#123;        jcenter()    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>解析</li></ul></li></ul><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h3 id="1-创建device时出现-“A-system-image-must-be-selected-to-continue”"><a href="#1-创建device时出现-“A-system-image-must-be-selected-to-continue”" class="headerlink" title="1 创建device时出现 “A system image must be selected to continue”"></a>1 创建device时出现 “A system image must be selected to continue”</h3><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/AndroidStudio/image-20220906095113992.png" alt="发生错误"></p><ul><li>这里很明显能看出是缺少了systemImage，解决方案如下：</li><li>打开SDK MANAGER，这里可以打开Show package Details，然后下载对应的system image即可</li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/AndroidStudio/image-20220906100409482.png" alt="下载对应jdk"></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ajax学习</title>
      <link href="/2022/07/21/categories/java/ajax/"/>
      <url>/2022/07/21/categories/java/ajax/</url>
      
        <content type="html"><![CDATA[<h1 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h1><h2 id="1-同步和异步交互的概念"><a href="#1-同步和异步交互的概念" class="headerlink" title="1 同步和异步交互的概念"></a>1 同步和异步交互的概念</h2><h3 id="1-1-同步交互"><a href="#1-1-同步交互" class="headerlink" title="1.1 同步交互"></a>1.1 同步交互</h3><ul><li>首先用户向HTTP服务器提交一个处理请求</li><li>接着服务器端接收到请求后，按照预先编写好的程序中的业务逻辑进行处理，比如和数据库服务器进行数据信息交换</li><li>最后，服务器对请求进行响应，将结果返回给客户端，返回一个HTML在浏览器中显示，通常会有CSS样式丰富页面的显示效果</li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/JavaWeb/Ajax/Ajax_01.png" alt="同步交互流程"></li></ul><hr><h4 id="1-1-1-优点"><a href="#1-1-1-优点" class="headerlink" title="1.1.1 优点"></a>1.1.1 优点</h4><ul><li>可以保留<strong>浏览器后退按钮</strong>的正常功能。</li><li>在动态更新页面的情况下，用户可以回到前一个页面状态，浏览器能记下历史记录中的静态页面,<strong>用户通常都希望单击后退按钮时，就能够取消他们的前一次操作</strong>，同步交互可以实现这个需求</li></ul><hr><h4 id="1-1-2-缺点"><a href="#1-1-2-缺点" class="headerlink" title="1.1.2 缺点"></a>1.1.2 缺点</h4><ol><li><p>同步交互的不足之处，会给用户一种不连贯的体验，当服务器处理请求时，用户只能<strong>等待</strong>状态，页面中的显示内容只能是空白。</p></li><li><p>因为已经跳转到新的页面,原本在页面上的信息<strong>无法保存</strong>,好多信息需要重新填写</p></li></ol><hr><h3 id="2-1-异步交互"><a href="#2-1-异步交互" class="headerlink" title="2.1 异步交互"></a>2.1 异步交互</h3><ul><li>指发送一个请求,不需要等待返回,随时可以再发送下一个请求，即<strong>不需要等待</strong></li><li>在部分情况下，我们的项目开发中都会优先选择不需要等待的异步交互方式</li><li>将用户请求放入<strong>消息队列</strong>，并反馈给用户，系统迁移程序已经启动，你可以关闭浏览器了</li><li>然后程序再慢慢地去写入数据库去，这就是异步</li><li>异步不用等所有操作等做完，就响应用户请求，即先响应用户请求，然后慢慢去写数据库，用户体验较好<strong>（及时响应）</strong></li></ul><hr><h4 id="2-1-1-优点"><a href="#2-1-1-优点" class="headerlink" title="2.1.1 优点"></a>2.1.1 优点</h4><ol><li><p>前端用户操作和后台服务器运算可以<strong>同时进行</strong>,可以充分利用用户操作的间隔时间完成运算</p></li><li><p>页面没有跳转,响应回来的数据直接就在原页面上,<strong>页面原有信息得以保留</strong></p></li></ol><hr><h4 id="2-1-2-缺点"><a href="#2-1-2-缺点" class="headerlink" title="2.1.2 缺点"></a>2.1.2 缺点</h4><ul><li>可能破坏浏览器后退按钮的正常行为。在动态更新页面的情况下，用户无法回到前一个页面状态，这是因为浏览器仅能记录的始终是当前一个的静态页面</li><li><code>用户通常都希望单击后退按钮，就能够取消他们的前一次操作，但是在AJAX这样异步的程序，却无法这样做</code></li></ul><hr><h2 id="3-Ajax介绍"><a href="#3-Ajax介绍" class="headerlink" title="3 Ajax介绍"></a>3 Ajax介绍</h2><h3 id="3-1-概念"><a href="#3-1-概念" class="headerlink" title="3.1 概念"></a>3.1 概念</h3><ul><li><code>Ajax</code>：”Asynchronous Javascript And XML”（异步 JavaScript和 XML）<ul><li>是指一种创建交互式、快速动态网页应用的网页开发技术，无需重新加载整个网页的情况下，能够更新部分网页的技术</li><li>通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新</li></ul></li><li><code>特点</code>：<strong>异步访问,局部刷新</strong></li></ul><hr><h3 id="3-2-关键技术"><a href="#3-2-关键技术" class="headerlink" title="3.2 关键技术"></a>3.2 关键技术</h3><ul><li>使用 <code>CSS</code> 构建用户界面样式,负责页面排版和美工</li><li>使用 <code>DOM</code> 进行动态显示和交互,对页面进行局部修改</li><li>使用 <code>XMLHttpRequest</code> 异步获取数据</li><li>使用 <code>JavaScript</code> 将所有的元素绑定在一起</li></ul><hr><h2 id="4-案例：验证用户名是否存在"><a href="#4-案例：验证用户名是否存在" class="headerlink" title="4 案例：验证用户名是否存在"></a>4 案例：验证用户名是否存在</h2><ul><li><p><code>项目结构</code>：</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/JavaWeb/Ajax/Ajax_02.png" alt="项目结构"></li></ul></li><li><p><code>MyServlet</code> 代码</p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>mikevane<span class="token punctuation">.</span>servlet</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">WebServlet</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServlet</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">"/myServlet1.do"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 接收参数</span>        <span class="token class-name">String</span> uname <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"uname"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> pwd <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"pwd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 作出响应</span>        resp<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>UnameCheckServlet</code> 代码</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>mikevane<span class="token punctuation">.</span>servlet</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">WebServlet</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServlet</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">"/unameCheckServlet.do"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UnameCheckServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> uname <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"uname"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> info<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"mikevane"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>uname<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            info<span class="token operator">=</span><span class="token string">"用户名已经占用"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            info<span class="token operator">=</span><span class="token string">"用户名可用"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 向浏览器响应数据</span>        resp<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>index.jsp</code> 代码</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">  <span class="token operator">&lt;</span><span class="token operator">%</span>@ page contentType<span class="token operator">=</span><span class="token string">"text/html;charset=UTF-8"</span> language<span class="token operator">=</span><span class="token string">"java"</span> <span class="token operator">%</span><span class="token operator">></span><span class="token generics"><span class="token punctuation">&lt;</span>html<span class="token punctuation">></span></span>  <span class="token generics"><span class="token punctuation">&lt;</span>head<span class="token punctuation">></span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>title<span class="token punctuation">></span></span>$<span class="token class-name">Title</span>$<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>script<span class="token punctuation">></span></span>      <span class="token keyword">var</span> xhr <span class="token punctuation">;</span>      function <span class="token function">checkUname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 获取输入框中的内容</span>        <span class="token keyword">var</span> unameDOM<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"unameI"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> unameText <span class="token operator">=</span>unameDOM<span class="token punctuation">.</span>value<span class="token punctuation">;</span>        <span class="token keyword">var</span> unameInfoDom <span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"unameInfo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> unameText <span class="token operator">||</span> unameText <span class="token operator">==</span> ''<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          unameInfoDom<span class="token punctuation">.</span>innerText<span class="token operator">=</span><span class="token string">"用户名不能为空"</span><span class="token punctuation">;</span>          <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        unameInfoDom<span class="token punctuation">.</span>innerText<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>        <span class="token comment">// 发送异步请求</span>        <span class="token comment">// 获取一个 XMLHttpRequest对象 ,对象可以帮助我们发送异步请求</span>        xhr <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 使用xhr对象设置打开链接,设置请求方式和参数xhr.open("请求方式","请求的URL",是否使用异步方式);</span>        xhr<span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token string">"unameCheckServlet.do?uname="</span><span class="token operator">+</span>unameText<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 设置回调函数</span>        xhr<span class="token punctuation">.</span>onreadystatechange<span class="token operator">=</span>showReturnInfo<span class="token punctuation">;</span>        <span class="token comment">// 正式发送请求</span>        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      function <span class="token function">showReturnInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState<span class="token operator">==</span><span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status<span class="token operator">==</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          <span class="token keyword">var</span> returnInfo <span class="token operator">=</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>          <span class="token keyword">var</span> unameInfoDom <span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"unameInfo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          unameInfoDom<span class="token punctuation">.</span>innerText<span class="token operator">=</span>returnInfo<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span>  <span class="token generics"><span class="token punctuation">&lt;</span>body<span class="token punctuation">></span></span>  <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"myServlet1.do"</span> <span class="token operator">></span>    用户名<span class="token operator">:</span><span class="token operator">&lt;</span>input id<span class="token operator">=</span><span class="token string">"unameI"</span> type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"uname"</span> onblur<span class="token operator">=</span><span class="token string">"checkUname()"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"unameInfo"</span> style<span class="token operator">=</span><span class="token string">"color: red"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">></span>    密码<span class="token operator">:</span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"password"</span> name<span class="token operator">=</span><span class="token string">"pwd"</span><span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>实现效果：</code></p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/JavaWeb/Ajax/Ajax_03.png" alt="效果"></li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/JavaWeb/Ajax/Ajax_04.png" alt="效果"></li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/JavaWeb/Ajax/Ajax_05.png" alt="效果"></li></ul></li></ul><h2 id="5-Ajax异步请求步骤"><a href="#5-Ajax异步请求步骤" class="headerlink" title="5 Ajax异步请求步骤"></a>5 Ajax异步请求步骤</h2><ol><li>获取 <code>XMLHTTPRequest</code> 对象 <ul><li>xhr&#x3D;new XMLHttpRequest();</li></ul></li><li>打开链接<ul><li>xhr.open(“GET”,”loginServlet?uname&#x3D;”+uname,true);</li></ul></li><li>设置回调函数<ul><li>xhr.onreadystatechange&#x3D;showRnturnInfo;</li></ul></li><li>提交数据<ul><li>xhr.send(data)</li></ul></li></ol><hr><h2 id="6-JSON"><a href="#6-JSON" class="headerlink" title="6 JSON"></a>6 JSON</h2><h3 id="6-1-概念"><a href="#6-1-概念" class="headerlink" title="6.1 概念"></a>6.1 概念</h3><ul><li>JSON（JavaScript Object Notation, JS对象简谱）是一种轻量级的<code>数据交换格式</code>。它采用完全独立于编程语言的文本格式来存储和表示数据。</li><li>简洁和清晰的层次结构使得 JSON 成为理想的数据交换语言。 <code>易于人阅读和编写</code>，同时也<code>易于机器解析和生成</code>，并有效地提升网络传输效率</li></ul><hr><h3 id="6-2-优点"><a href="#6-2-优点" class="headerlink" title="6.2 优点"></a>6.2 优点</h3><ol><li>轻量级,在这里用它不是为了厉害的功能代码,而是为了<code>实现数据转换</code></li><li><code>JSON</code> 格式既能考虑到前端对象的特点 同时也能兼顾后台对象信息的特点</li><li><code>JSON</code> 格式可以被前端直接识别并解析成对象</li><li><code>jQuery</code> 形式实现 <code>Ajax</code> 默认前后端传递数据的格式就是 <code>JSON</code></li></ol><hr><h3 id="6-3-使用JSON创建对象"><a href="#6-3-使用JSON创建对象" class="headerlink" title="6.3 使用JSON创建对象"></a>6.3 使用JSON创建对象</h3><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"属性名"</span><span class="token operator">:</span><span class="token string">"属性值"</span><span class="token punctuation">,</span><span class="token property">"属性名"</span><span class="token operator">:</span>属性值 ... ... <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-jsp" data-language="jsp"><code class="language-jsp">var person &#x3D;&#123;&quot;name&quot;:&quot;zhangsan&quot;,&quot;age&quot;:10&#125;        alert(person.name)        alert(person.age)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h4 id="6-4-JSON-数组"><a href="#6-4-JSON-数组" class="headerlink" title="6.4 JSON 数组"></a>6.4 JSON 数组</h4><pre class="line-numbers language-jsp" data-language="jsp"><code class="language-jsp">var persons &#x3D;[&#123;&quot;name&quot;:&quot;zhangsan&quot;,&quot;age&quot;:10&#125;,&#123;&quot;name&quot;:&quot;lisi&quot;,&quot;age&quot;:10&#125;,&#123;&quot;name&quot;:&quot;wangwu&quot;,&quot;age&quot;:10&#125;];for (var i &#x3D; 0; i &lt;persons.length ; i++) &#123;    var person &#x3D;persons[i];    console.log(person.name)    console.log(person.age)&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="6-5-字符串转-JSON-对象"><a href="#6-5-字符串转-JSON-对象" class="headerlink" title="6.5 字符串转 JSON 对象"></a>6.5 字符串转 JSON 对象</h4><pre class="line-numbers language-jsp" data-language="jsp"><code class="language-jsp">var personStr&#x3D;&#39;&#123;&quot;name&quot;:&quot;zhangsan&quot;,&quot;age&quot;:10&#125;&#39;;&#x2F;&#x2F; 是一个字符串&#x2F;&#x2F; 可以直接把上面这种格式的字符串直接转换成对象var p &#x3D;JSON.parse(personStr);console.log(p.name)console.log(p.age)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>用处</code>：将后端的对象，按照上面的格式拼接成字符串，再用 <strong>AJAX</strong> 相应给浏览器，浏览器就可以根据这种格式直接获得后端的某个对象的信息</p></li><li><p><code>注意</code>：在大括号中的属性名必须用双引号包裹，否则会出错</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/JavaWeb/Ajax/Ajax_06.png" alt="注意大括号"></li></ul></li></ul><hr><h3 id="6-6-示例"><a href="#6-6-示例" class="headerlink" title="6.6 示例"></a>6.6 示例</h3><ul><li><p><code>项目结构</code>：</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/JavaWeb/Ajax/Ajax_07.png" alt="项目结构"></li></ul></li><li><p><code>TestServlet</code> 代码</p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>mikevane<span class="token punctuation">.</span>servlet</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>gson<span class="token punctuation">.</span></span><span class="token class-name">Gson</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>gson<span class="token punctuation">.</span></span><span class="token class-name">GsonBuilder</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">top<span class="token punctuation">.</span>mikevane<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">WebServlet</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServlet</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ConcurrentHashMap</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">"/testServlet.do"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">User</span> user1 <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">"mikevane"</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">"男"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">User</span> user2 <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">"mike"</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">"男"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> list <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span>user1<span class="token punctuation">,</span>user2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 响应普通文本数据</span>        resp<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">GsonBuilder</span> gsonBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GsonBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Gson</span> gson <span class="token operator">=</span> gsonBuilder<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> str <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>index.jsp</code> 代码</li></ul><pre class="line-numbers language-jsp" data-language="jsp"><code class="language-jsp">  &lt;%@ page contentType&#x3D;&quot;text&#x2F;html;charset&#x3D;UTF-8&quot; language&#x3D;&quot;java&quot; %&gt;&lt;html&gt;  &lt;head&gt;    &lt;title&gt;$Title$&lt;&#x2F;title&gt;    &lt;script&gt;      var xhr ;      function testData()&#123;        xhr &#x3D;new XMLHttpRequest();        xhr.open(&quot;GET&quot;,&quot;testServlet.do&quot;,true);        xhr.onreadystatechange&#x3D;showReturnInfo;        xhr.send(null);      &#125;      function showReturnInfo()&#123;        if(xhr.readyState&#x3D;&#x3D;4 &amp;&amp; xhr.status&#x3D;&#x3D;200)&#123;          var info &#x3D;xhr.responseText;          var users&#x3D;JSON.parse(info)          for (var i &#x3D; 0; i &lt;users.length ; i++) &#123;            var user &#x3D;users[i];            console.log(user.uname)            console.log(user.age)            console.log(user.gender)            console.log(user.birthday)          &#125;        &#125;      &#125;    &lt;&#x2F;script&gt;  &lt;&#x2F;head&gt;  &lt;body&gt;  &lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;测试&quot; onclick&#x3D;&quot;testData()&quot;&gt;  &lt;&#x2F;body&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>测试结果</code>：</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/JavaWeb/Ajax/Ajax_08.png" alt="测试结果"></li></ul></li></ul><hr><h2 id="7-jQuery-Ajax"><a href="#7-jQuery-Ajax" class="headerlink" title="7 jQuery+Ajax"></a>7 jQuery+Ajax</h2><h3 id="7-1-jQuery-实现异步校验用户名"><a href="#7-1-jQuery-实现异步校验用户名" class="headerlink" title="7.1 jQuery 实现异步校验用户名"></a>7.1 jQuery 实现异步校验用户名</h3><ul><li><p><code>要点</code>：</p><ul><li><blockquote><p>$.ajax(属性名:属性值,属性名:属性值,方法名:方法)</p></blockquote></li></ul></li><li><p><code>项目结构</code>:</p></li><li><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/JavaWeb/Ajax/Ajax_09.png" alt="项目结构"></p></li><li><p>MyServlet 与 Uname… 都已经在之前存在，不再书写</p></li><li><p><code>index.html</code> 代码</p></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>$Title$<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> xhr <span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">checkUname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token comment">// 获取输入框中的内容</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#unameI"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#unameI"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#unameInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">"用户名不能为空"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#unameInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 用户名发送到后台</span>      <span class="token comment">// 通过JQuery.ajax() 发送异步请求</span>      <span class="token comment">// $.ajax(属性名:属性值,属性名:属性值,方法名:方法)</span>      $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span>              <span class="token punctuation">&#123;</span>                <span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token comment">// 请求的方式</span>                <span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">"unameCheckServlet.do"</span><span class="token punctuation">,</span> <span class="token comment">//请求的后台服务的路径</span>                <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token string">"uame="</span> <span class="token operator">+</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#unameI"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//提交的参数</span>                <span class="token function-variable function">success</span><span class="token operator">:</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//相应成功执行的函数</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#unameInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myServlet1.do<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>  用户名:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>unameI<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uname<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onblur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">checkUname</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>unameInfo<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> red</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>  密码:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>验证结果</code>：</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/JavaWeb/Ajax/Ajax_10.png" alt="结果"></li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/JavaWeb/Ajax/Ajax_11.png" alt="结果"></li></ul></li></ul><hr><h3 id="7-2-JSON格式处理"><a href="#7-2-JSON格式处理" class="headerlink" title="7.2 JSON格式处理"></a>7.2 JSON格式处理</h3><hr><h4 id="7-2-1-前端传入后端"><a href="#7-2-1-前端传入后端" class="headerlink" title="7.2.1 前端传入后端"></a>7.2.1 前端传入后端</h4><ul><li>ajax传入后端数据的格式有两种<ol><li>key&#x3D;value&amp;key&#x3D;value</li><li>{“属性名”:属性值, “属性名”:属性值}（JSON）</li></ol></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">function</span> <span class="token function">testAjax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span>                <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">"GET"</span><span class="token punctuation">,</span>                    <span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">"servlet1.do"</span><span class="token punctuation">,</span>                    <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token string-property property">"username"</span><span class="token operator">:</span><span class="token string">"zhangsan"</span><span class="token punctuation">,</span> <span class="token string-property property">"password"</span><span class="token operator">:</span><span class="token string">"123"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token comment">//key=value&amp;key=value &#123;"属性名":属性值, "属性名":属性值&#125;</span>                    <span class="token function-variable function">success</span><span class="token operator">:</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token function">alert</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testAjax</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>input</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="7-2-2-后端传入前端"><a href="#7-2-2-后端传入前端" class="headerlink" title="7.2.2 后端传入前端"></a>7.2.2 后端传入前端</h4><ul><li><code>后端</code>：</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>mikevane<span class="token punctuation">.</span>servlet</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">WebServlet</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServlet</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">"/servlet1.do"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> username <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> password <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> stu <span class="token operator">=</span> <span class="token string">"&#123;\"stuname\":\"mikevane\", \"stugender\":\"男\"&#125;"</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>stu<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>前端</code>：</p><ul><li><code>第一种方式</code>：将后端字符串转为 JSON 对象</li></ul></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">function</span> <span class="token function">testAjax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span>                <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">"GET"</span><span class="token punctuation">,</span>                    <span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">"servlet1.do"</span><span class="token punctuation">,</span>                    <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token string-property property">"username"</span><span class="token operator">:</span><span class="token string">"zhangsan"</span><span class="token punctuation">,</span> <span class="token string-property property">"password"</span><span class="token operator">:</span><span class="token string">"123"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token comment">//key=value&amp;key=value &#123;"属性名":属性值, "属性名":属性值&#125;</span>                    <span class="token function-variable function">success</span><span class="token operator">:</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token keyword">var</span> stu <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span>                        <span class="token function">alert</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span>stuname<span class="token punctuation">)</span>                        <span class="token function">alert</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span>stugender<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testAjax</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>input</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>第二种方式</code>： 直接在 ajax 属性中加上 dataType</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">testAjax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span>                <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">"GET"</span><span class="token punctuation">,</span>                    <span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">"servlet1.do"</span><span class="token punctuation">,</span>                    <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token string-property property">"username"</span><span class="token operator">:</span><span class="token string">"zhangsan"</span><span class="token punctuation">,</span> <span class="token string-property property">"password"</span><span class="token operator">:</span><span class="token string">"123"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token comment">//key=value&amp;key=value &#123;"属性名":属性值, "属性名":属性值&#125;</span>                    <span class="token literal-property property">dataType</span><span class="token operator">:</span><span class="token string">"json"</span><span class="token punctuation">,</span> <span class="token comment">//以什么格式接收后端响应给前端的数据</span>                    <span class="token function-variable function">success</span><span class="token operator">:</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token function">alert</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>stuname<span class="token punctuation">)</span>                        <span class="token function">alert</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>stugender<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>效果</code>：</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/JavaWeb/Ajax/Ajax_12.png" alt="效果"></li></ul></li></ul><hr><h4 id="7-2-3-利用第三方包简化拼接JSON"><a href="#7-2-3-利用第三方包简化拼接JSON" class="headerlink" title="7.2.3 利用第三方包简化拼接JSON"></a>7.2.3 利用第三方包简化拼接JSON</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">"/servlet1.do"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> username <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> password <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Student</span> stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"mikevane"</span><span class="token punctuation">,</span><span class="token string">"男"</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Gson</span> gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> toJson <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>stu<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将对象里的属性转换为JSON格式</span>        resp<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>toJson<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="7-3-ajax-属性介绍"><a href="#7-3-ajax-属性介绍" class="headerlink" title="7.3.ajax()属性介绍"></a>7.3<code>.ajax()</code>属性介绍</h3><ol><li><code>url</code>:</li></ol><ul><li>要求为String类型的参数，（默认为当前页地址）发送请求的地址。</li></ul><ol start="2"><li><code>type</code>:</li></ol><ul><li>要求为String类型的参数，请求方式（post或get）默认为get。注意其他http请求方法，例如put和delete也可以使用，但仅部分浏览器支持。</li></ul><ol start="3"><li><code>timeout</code>:</li></ol><ul><li>要求为Number类型的参数，设置请求超时时间（毫秒）。此设置将覆盖$.ajaxSetup()方法的全局设置。</li></ul><ol start="4"><li><p><code>async</code>:</p><ul><li>要求为Boolean类型的参数，默认设置为true，所有请求均为异步请求。如果需要发送同步请求，请将此选项设置为false。注意，同步请求将锁住浏览器，用户其他操作必须等待请求完成才可以执行。</li></ul></li><li><p><code>cache</code>:</p><ul><li>要求为Boolean类型的参数，默认为true（当dataType为script时，默认为false），设置为false将不会从浏览器缓存中加载请求信息。</li></ul></li><li><p><code>data</code>:</p><ul><li>要求为Object或String类型的参数，发送到服务器的数据。如果已经不是字符串，将自动转换为字符串格式。get请求中将附加在url后。防止这种自动转换，可以查看　　processData选项。对象必须为key&#x2F;value格式，例如{foo1:”bar1”,foo2:”bar2”}转换为&amp;foo1&#x3D;bar1&amp;foo2&#x3D;bar2。如果是数组，JQuery将自动为不同值对应同一个名称。例如{foo:[“bar1”,”bar2”]}转换为&amp;foo&#x3D;bar1&amp;foo&#x3D;bar2。</li></ul></li><li><p><code>dataType</code>:</p><ul><li><p>要求为String类型的参数，预期服务器返回的数据类型。如果不指定，JQuery将自动根据http包mime信息返回responseXML或responseText，并作为回调函数参数传递。可用的类型如下：</p></li><li><p>xml：返回XML文档，可用JQuery处理。</p></li><li><p>html：返回纯文本HTML信息；包含的script标签会在插入DOM时执行。</p></li><li><p>script：返回纯文本JavaScript代码。不会自动缓存结果。除非设置了cache参数。注意在远程请求时（不在同一个域下），所有post请求都将转为get请求。</p></li><li><p>json：返回JSON数据。</p></li><li><p>jsonp：JSONP格式。使用JSONP形式调用函数时，例如myurl?callback&#x3D;?，JQuery将自动替换后一个“?”为正确的函数名，以执行回调函数。</p></li><li><p>text：返回纯文本字符串。</p></li></ul></li><li><p><code>beforeSend</code>：</p><ul><li><p>要求为Function类型的参数，发送请求前可以修改XMLHttpRequest对象的函数，例如添加自定义HTTP头。在beforeSend中如果返回false可以取消本次ajax请求。</p></li><li><p>XMLHttpRequest对象是惟一的参数。</p><ul><li>&#96;&#96;&#96;&#96;javascript<br>  function(XMLHttpRequest){<br>    this; &#x2F;&#x2F;调用本次ajax请求时传递的options参数<br>   }  <pre class="line-numbers language-none"><code class="language-none">9. &#96;complete&#96;：    - 要求为Function类型的参数，请求完成后调用的回调函数（请求成功或失败时均调用）。参数：XMLHttpRequest对象和一个描述成功请求类型的字符串。    - &#96;&#96;&#96;&#96;javascript        function(XMLHttpRequest, textStatus)&#123;          this; &#x2F;&#x2F;调用本次ajax请求时传递的options参数        &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul></li><li><p><code>success</code>：</p><ul><li><p>要求为Function类型的参数，请求成功后调用的回调函数，有两个参数。</p><ol><li><p>由服务器返回，并根据dataType参数进行处理后的数据。</p></li><li><p>描述状态的字符串。</p></li><li><p>&#96;&#96;&#96;&#96;javascript<br> function(data, textStatus){<br>   &#x2F;&#x2F;data可能是xmlDoc、jsonObj、html、text等等<br>   this; &#x2F;&#x2F;调用本次ajax请求时传递的options参数<br> }</p> <pre class="line-numbers language-none"><code class="language-none">11. &#96;error&#96;:    - 要求为Function类型的参数，请求失败时被调用的函数。该函数有3个参数，即XMLHttpRequest对象、错误信息、捕获的错误对象(可选)。ajax事件函数如下：    - &#96;&#96;&#96;&#96;javascript        function(XMLHttpRequest, textStatus, errorThrown)&#123;          &#x2F;&#x2F;通常情况下textStatus和errorThrown只有其中一个包含信息          this; &#x2F;&#x2F;调用本次ajax请求时传递的options参数        &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol></li></ul></li><li><p><code>contentType</code>：</p><ul><li>要求为String类型的参数，当发送信息至服务器时，内容编码类型默认为”application&#x2F;x-www-form-urlencoded”。</li><li>该默认值适合大多数应用场合。</li></ul></li><li><p><code>dataFilter</code>：</p><ul><li><p>要求为Function类型的参数，给Ajax返回的原始数据进行预处理的函数。提供data和type两个参数。</p></li><li><p>data是Ajax返回的原始数据，type是调用jQuery.ajax时提供的dataType参数。</p></li><li><p>函数返回的值将由jQuery进一步处理</p></li><li><p>&#96;&#96;&#96;&#96;javascript<br>  function(data, type){<br>&#x2F;&#x2F;返回处理后的数据<br> return data;<br>}</p>  <pre class="line-numbers language-none"><code class="language-none">14. &#96;global&#96;：    - 要求为Boolean类型的参数，默认为true。表示是否触发全局ajax事件    - 设置为false将不会触发全局ajax事件，ajaxStart或ajaxStop可用于控制各种ajax事件15. &#96;ifModified&#96;：    - 要求为Boolean类型的参数，默认为false。仅在服务器数据改变时获取新数据    - 服务器数据改变判断的依据是Last-Modified头信息。默认值是false，即忽略头信息16. &#96;jsonp&#96;：    - 要求为String类型的参数，在一个jsonp请求中重写回调函数的名字    - 该值用来替代在&quot;callback&#x3D;?&quot;这种GET或POST请求中URL参数里的&quot;callback&quot;部分，例如&#123;jsonp:&#39;onJsonPLoad&#39;&#125;会导致将&quot;onJsonPLoad&#x3D;?&quot;传给服务器17. &#96;username&#96;：    - 要求为String类型的参数，用于响应HTTP访问认证请求的用户名。18. &#96;password&#96;：    - 要求为String类型的参数，用于响应HTTP访问认证请求的密码。19. &#96;processData&#96;：    - 要求为Boolean类型的参数，默认为true。默认情况下，发送的数据将被转换为对象（从技术角度来讲并非字符串）以配合默认内容类型&quot;application&#x2F;x-www-form-urlencoded&quot;    - 如果要发送DOM树信息或者其他不希望转换的信息，请设置为false。20. &#96;scriptCharset&#96;：    - 要求为String类型的参数，只有当请求时dataType为&quot;jsonp&quot;或者&quot;script&quot;，并且type是GET时才会用于强制修改字符集(charset)    - 通常在本地和远程的内容编码不同时使用。- &gt; 一个ajax方法中,可用的属性和方法大致如下&#96;&#96;&#96;javascript  function testAjax()&#123;     $.ajax(&#123;         url:&quot;servlet1&quot;,         &#x2F;*post get  部分浏览器可使用put delete*&#x2F;         type:&quot;get&quot;,         &#x2F;*请求超时的时间设置*&#x2F;         timeout:2000,         &#x2F;*是否发送异步请求,默认值为true,如需同步请求,改为false*&#x2F;         async:true,         &#x2F;*是否从浏览器的缓存中加载信息,默认为true,false则不读取浏览器缓存*&#x2F;         cache:true,         &#x2F;*向服务器发送的数据,可以是key&#x2F;value格式,也可以是对象格式         * get方式下,会将信息附加在url后,如果数据不是字符串,会转换成字符串格式         * *&#x2F;         data:&#123;username:&quot;bjmsb&quot;,password:&quot;bjmsb&quot;&#125;,         &#x2F;*         * 默认值为true 默认情况下,发送的数据将被转换为对象以配合         *   content-type:application&#x2F;x-www-form-urlencoded         * 如果发送信息不希望被转换,设置为false即可         * *&#x2F;         proccessData:true,         &#x2F;*发送到服务器的数据为String类型时,默认值为         *   application&#x2F;x-www-form-urlencoded         * 该值适合大多数应用场景         * *&#x2F;         contentType:&quot;application&#x2F;x-www-form-urlencoded&quot;,          &#x2F;*          * 预期服务器返回值类型,          * 如果不指定 jQuery根据http响应mime信息返回xml或者text          * 并作为返回值传递,可选类型如下          * xml 返回xml数据(基本淘汰)          * html:返回纯文本HTML信息          * script:返回JS脚本,          * json:返回json数据          * jsonp:jsonp格式          * text:返回纯文本,也是默认格式          * *&#x2F;         dataType:&quot;json&quot;,         &#x2F;*         * 指定跨域回调函数名         * *&#x2F;         &#x2F;&#x2F;jsonp:&quot;fun1&quot;,           &#x2F;*只有当请求参数为dataType为jsonp或者script,并且是get方式请求时         * 才能强制修改字符集,通常在跨域编码不同时使用         * *&#x2F;        &#x2F;&#x2F;  scriptCharset:&quot;utf-8&quot;,           beforeSend:function(XMLHttpRequest)&#123;           &#x2F;*            * 请求发送前可以通过该方法修改XMLHttpRequest对象函数            * 如听见请求头            * 如果该方法返回false,则会取消ajax请求            * *&#x2F;         &#125;,         success:function(data,textStatus)&#123;             &#x2F;*             *一般请求成功后会调用的函数,有两个可选参数             * data,数据 根据dataType的配置处理之后的数据 可能是xml text json 等             * testStatus ,描述响应状态的字符串             *  *&#x2F;         &#125;,         error:function(XMLHttpRequest,textStatus,errorThrown)&#123;             &#x2F;*             * 请求失败时调用的函数,可选参数有             * XMLHttpRequest对象             * 错误信息             * 捕获的异常对象             * *&#x2F;         &#125;,         complete:function(XMLHttpRequest,textStatus)&#123;             &#x2F;*             * 无论请求是否成功都睡调用的回调函数             * 可选参数有             * XMLHttpRequest对象             * textStatus 描述成功请求的类型的字符串             * *&#x2F;         &#125;,         dataFilter:function(data,type)&#123;             &#x2F;*             * 数据过滤方法             * 给Ajax返回的原始数据进行预处理的函数。             * 提供data和type两个参数。             * data是Ajax返回的原始数据，             * type是调用jQuery.ajax时提供的dataType参数。             * 函数返回的值将由jQuery进一步处理             * *&#x2F;         &#125;       &#125;)  &#125;&#96;&#96;&#96;&gt; 注意:&gt;&gt; - ajax异步提交的可选属性和方法较多,实际研发我们没必要写这么多,一般可以使用默认值的属性就可以省略不写,一些业务逻辑或者功能上不需要的方法也可以省略不写,由于属性太多,针对于一些特殊情况,jQuery也给我们提供了一些专用的方法,这样可以简化$.ajax的写法,每一种简化写法都相当于已经指定了$.ajax一些属性的值.----## 8 三种简化Ajax请求的方法### 8.1 $.load()- jQuery load() 方法是简单但强大的 AJAX 方法，load() 方法从服务器加载数据，并把返回的数据放入被选元素中。默认使用 GET 方式 - 传递附加参数时自动转换为 POST 方式- &#96;语法&#96;为:    - $(selector).load(URL,data,callback);- &#96;参数含义&#96;为:    - &#96;url&#96;: URL地址    - &#96;data&#96;:待发送参数。    - &#96;callback&#96;:载入成功时回调函数---### 8.2 $.get()- 这是一个简单的 GET 请求功能以取代复杂 \$.ajax 。请求成功时可调用回调函数。如果需要在出错时执行函数，请使用\$.ajax- &#96;语法&#96;为：    - $.get(url,[data],[callback],[type])- &#96;参数含义&#96;为:    - &#96;url&#96;: URL地址    - &#96;data&#96;:待发送参数。    - &#96;callback&#96;:载入成功时回调函数。    - &#96;type&#96;:返回内容格式，xml, html, script, json, text, _default- &#96;等价于&#96;:&#96;&#96;&#96;&#96;javascript  $.ajax(&#123; type:   &#39;GET&#39;,  url: url,  data: data,  success: success,  dataType: dataType&#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ol><hr><h3 id="8-3-getJSON"><a href="#8-3-getJSON" class="headerlink" title="8.3 $.getJSON()"></a>8.3 $.getJSON()</h3><ul><li><p>JSON是一种较为理想的数据传输格式，它能够很好的融合与JavaScript或其他宿主语言，并且可以被JS直接使用</p></li><li><p>使用JSON相比传统的通过 GET、POST直接发送“裸体”数据，在结构上更为合理，也更为安全</p></li><li><p>至于jQuery的getJSON()函数，只是设置了JSON参数的ajax()函数的一个简化版本。</p></li><li><p><code>语法</code>:</p></li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">$<span class="token punctuation">.</span><span class="token function">getJSON</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>             <span class="token comment">//请求URL</span><span class="token punctuation">[</span>data<span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token comment">//传参，可选参数</span><span class="token punctuation">[</span>callback<span class="token punctuation">]</span>       <span class="token comment">//回调函数，可选参数</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>等价于</code>:</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">url</span><span class="token operator">:</span> url<span class="token punctuation">,</span>  <span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">,</span>  <span class="token literal-property property">success</span><span class="token operator">:</span> callback<span class="token punctuation">,</span>  <span class="token literal-property property">dataType</span><span class="token operator">:</span> json<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="8-4-post"><a href="#8-4-post" class="headerlink" title="8.4 $.post()"></a>8.4 $.post()</h3><ul><li><p>这是一个简单的 POST 请求功能以取代复杂 $.ajax 。请求成功时可调用回调函数。如果需要在出错时执行函数，请使用$.ajax</p></li><li><p><code>语法</code>：</p><ul><li>$.post(url,[data],[callback],[type])</li></ul></li><li><p><code>参数含义</code>：</p></li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token constant">URL</span>地址<span class="token literal-property property">data</span><span class="token operator">:</span>待发送参数。<span class="token literal-property property">callback</span><span class="token operator">:</span>载入成功时回调函数。<span class="token literal-property property">type</span><span class="token operator">:</span>返回内容格式，xml<span class="token punctuation">,</span> html<span class="token punctuation">,</span> script<span class="token punctuation">,</span> json<span class="token punctuation">,</span> text<span class="token punctuation">,</span> _default<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>等价于</code>：</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">type</span><span class="token operator">:</span>   <span class="token string">'POST'</span><span class="token punctuation">,</span>  <span class="token literal-property property">url</span><span class="token operator">:</span> url<span class="token punctuation">,</span>  <span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">,</span>  <span class="token literal-property property">success</span><span class="token operator">:</span> success<span class="token punctuation">,</span>  <span class="token literal-property property">dataType</span><span class="token operator">:</span> dataType<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="9-jsonp-跨域处理"><a href="#9-jsonp-跨域处理" class="headerlink" title="9 jsonp 跨域处理"></a>9 jsonp 跨域处理</h2><ul><li><code>同源策略</code>：<ol><li>协议一致</li><li>IP一致</li><li>端口一致</li></ol></li><li>出于浏览器的同源策略限制。同源策略（Sameoriginpolicy）是一种约定，它是浏览器最核心也最基本的安全功能，如果缺少了同源策略，则浏览器的正常功能可能都会受到影响</li><li>可以说Web是构建在同源策略基础之上的，浏览器只是针对同源策略的一种实现</li><li>同源策略会阻止一个域的javascript脚本和另外一个域的内容进行交互。</li></ul><hr><h3 id="9-1-实现跨域的原理"><a href="#9-1-实现跨域的原理" class="headerlink" title="9.1 实现跨域的原理"></a>9.1 实现跨域的原理</h3><ul><li>可以测试得到：<ul><li>Web 页面上调用 <strong>js</strong> 文件时则不受是否跨域的影响,拥有 <code>src</code> 这个属性的标签都却拥有跨域的能力，比如<code>&lt;\script&gt;、&lt;\img&gt;、&lt;\iframe&gt;</code></li><li>那么跨域访问数据就有了一种可能，那就是在远程服务器上设法把数据装进 <code>js</code> 格式的文件里，供客户端调用和进一步处理</li><li>就好比使用一个<code>&lt;script&gt;</code>,让其 <code>src</code> 属性指向我们要访问的跨域资源,然后以接收 <code>js</code> 文件的形式接收数据</li></ul></li></ul><hr><h3 id="9-2-通过-dataType-’jsonp’属性实现跨域请求"><a href="#9-2-通过-dataType-’jsonp’属性实现跨域请求" class="headerlink" title="9.2 通过:dataType:’jsonp’属性实现跨域请求"></a>9.2 通过:dataType:’jsonp’属性实现跨域请求</h3><h3 id="9-3-通过-jsonp-’callback’-属性简化回调函数处理"><a href="#9-3-通过-jsonp-’callback’-属性简化回调函数处理" class="headerlink" title="9.3 通过 jsonp:’callback’,属性简化回调函数处理"></a>9.3 通过 jsonp:’callback’,属性简化回调函数处理</h3><ul><li><p>通过 jsonp:’callback’,实现自动处理回调函数名,相当于在url地址栏最后后拼接一个callback&#x3D;函数名</p></li><li><p>后台自动根据这个函数名处理JS脚本,jQuery也会根据这函数名自动在前端处理回调函数</p></li><li><p>这样我们直接在success方法中接收返回的数据即可,可以不用自己去自己定义回调函数</p></li><li><p>后台获取参数时,参数名要要和jsonp:后面的函数名保持一致</p></li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 通过jQuery.ajax() 发送异步请求</span>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>       <span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token comment">// 请求的方式 GET  POST</span>       <span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">"http://localhost:8080/ajaxDemo3_war_exploded/unameCheckServlet.do?"</span><span class="token punctuation">,</span> <span class="token comment">// 请求的后台服务的路径</span>       <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token literal-property property">uname</span><span class="token operator">:</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#unameI"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 提交的参数</span>       <span class="token literal-property property">dataType</span><span class="token operator">:</span><span class="token string">"jsonp"</span><span class="token punctuation">,</span>       <span class="token literal-property property">jsonp</span><span class="token operator">:</span><span class="token string">"aaa"</span><span class="token punctuation">,</span>       <span class="token function-variable function">success</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#unameInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span>       <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="9-4-通过getJson方实现跨域请求"><a href="#9-4-通过getJson方实现跨域请求" class="headerlink" title="9.4 通过getJson方实现跨域请求"></a>9.4 通过getJson方实现跨域请求</h3><ul><li>getJSON方法是可以实现跨域请求的,在用该方法实现跨域请求时,在传递参数上应该注意在url后拼接一个jsoncallback&#x3D;?,jQuery会自动替换?为正确的回调函数名,我们就可以不用单独定义回调函数了</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">$<span class="token punctuation">.</span><span class="token function">getJSON</span><span class="token punctuation">(</span>           <span class="token string">"http://localhost:8080/ajaxDemo3_war_exploded/unameCheckServlet.do?jsoncallback=?"</span><span class="token punctuation">,</span>           <span class="token punctuation">&#123;</span><span class="token literal-property property">uname</span><span class="token operator">:</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#unameI"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>           <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#unameInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span>           <span class="token punctuation">&#125;</span>           <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="10-案例-三级联动"><a href="#10-案例-三级联动" class="headerlink" title="10 案例 三级联动"></a>10 案例 三级联动</h2><h3 id="10-1-数据准备"><a href="#10-1-数据准备" class="headerlink" title="10.1 数据准备"></a>10.1 数据准备</h3><ul><li>将数据导入到mysql数据库中</li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/JavaWeb/Ajax/202207101708965.png" alt="表结构"></li></ul><hr><h3 id="10-2-项目结构"><a href="#10-2-项目结构" class="headerlink" title="10.2 项目结构"></a>10.2 项目结构</h3><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/JavaWeb/Ajax/202207101709009.png" alt="项目结构"></li></ul><hr><h3 id="10-3-前端代码"><a href="#10-3-前端代码" class="headerlink" title="10.3 前端代码"></a>10.3 前端代码</h3><ul><li><code>JSP</code>代码</li></ul><pre class="line-numbers language-jsp" data-language="jsp"><code class="language-jsp">  &lt;%@ page contentType&#x3D;&quot;text&#x2F;html;charset&#x3D;UTF-8&quot; language&#x3D;&quot;java&quot; %&gt;&lt;html&gt;  &lt;head&gt;    &lt;title&gt;$Title$&lt;&#x2F;title&gt;    &lt;script src&#x3D;&quot;js&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;    &lt;script&gt;      $(function()&#123;        &#x2F;&#x2F; 获取所有的省份信息        showArea(0,&quot;#provience&quot;)      &#125;)      function showArea(val,selectID)&#123;        $.ajax(&#123;          type:&quot;GET&quot;,          url:&quot;areaController.do&quot;,          data:&#123;parentID:val&#125;,          dataType:&quot;json&quot;,          success:function(areas)&#123;            &#x2F;&#x2F; 清除上一次选择省份时,遗留的城市            $(selectID).html(&#39;&lt;option&gt;-请选择-&lt;&#x2F;option&gt;&#39;);            $.each(areas,function(i,e)&#123;              $(selectID).append(&#39;&lt;option value&#x3D;&quot;&#39;+e.areaid+&#39;&quot;&gt;&#39;+e.areaname+&#39;&lt;&#x2F;option&gt;&#39;)            &#125;)            if(selectID&#x3D;&#x3D; &quot;#city&quot;)&#123;              $(&quot;#qu&quot;).html(&#39;&lt;option&gt;-请选择-&lt;&#x2F;option&gt;&#39;);            &#125;          &#125;        &#125;)      &#125;    &lt;&#x2F;script&gt;  &lt;&#x2F;head&gt;  &lt;body&gt;  籍贯:  &lt;select id&#x3D;&quot;provience&quot; onchange&#x3D;&quot;showArea(this.value,&#39;#city&#39;)&quot;&gt;    &lt;option&gt;-请选择-&lt;&#x2F;option&gt;  &lt;&#x2F;select&gt;  &lt;select id&#x3D;&quot;city&quot; onchange&#x3D;&quot;showArea(this.value,&#39;#qu&#39;)&quot;&gt;    &lt;option&gt;-请选择-&lt;&#x2F;option&gt;  &lt;&#x2F;select&gt;  &lt;select id&#x3D;&quot;qu&quot;&gt;    &lt;option&gt;-请选择-&lt;&#x2F;option&gt;  &lt;&#x2F;select&gt;  &lt;&#x2F;body&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>根据hexo+Github搭建自己博客</title>
      <link href="/2022/07/01/blog/da-jian-hexo/"/>
      <url>/2022/07/01/blog/da-jian-hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="博客搭建步骤"><a href="#博客搭建步骤" class="headerlink" title="博客搭建步骤"></a>博客搭建步骤</h2><h3 id="绑定github-io域名到自己的域名"><a href="#绑定github-io域名到自己的域名" class="headerlink" title="绑定github.io域名到自己的域名"></a>绑定github.io域名到自己的域名</h3><ul><li>首先申请自己的域名(网上有很多教程)，我这里用的腾讯提供的域名提供商购买的域名</li><li>首先进入到域名解析界面，然后按照如下操作进行<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207021342883.png" alt="绑定域名"></li></ul></li><li>服务器ip地址可以通过ping获得<ul><li>进入cmd，输入ping 你自己的网站地址<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207021342647.png" alt="获取服务器地址"></li></ul></li></ul></li></ul><h3 id="设置域名后重新部署项目后出现404"><a href="#设置域名后重新部署项目后出现404" class="headerlink" title="设置域名后重新部署项目后出现404"></a>设置域名后重新部署项目后出现404</h3><ul><li><p>需要在博客的根目录下的source文件中加入CNAME文件</p></li><li><p>然后在CNAME里面写入自己的域名</p></li><li><blockquote><p><code>非常重要</code>：接着打开根目录的.config_yml文件，找到skip_render，在后面加上CNAME</p></blockquote></li></ul><hr><h3 id="通过阿里云OSS加速图片加载速度"><a href="#通过阿里云OSS加速图片加载速度" class="headerlink" title="通过阿里云OSS加速图片加载速度"></a>通过阿里云OSS加速图片加载速度</h3><ul><li><p>因为很多时候，网站无法显示是因为图片获取速度太慢的原因，所以既为了使用<strong>typora</strong>更方便的记笔记（利用<strong>阿里云OSS</strong>可以直接把图片托管到云端），也为了更快的访问，所以使用了付费的阿里云OSS</p></li><li><p><code>步骤</code>：</p><ol><li><p>首先下载typora与picgo（网上有教程，这里重点不在这）</p></li><li><p>阿里云官网购买OSS</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207021504614.png" alt="购买OSS"></li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207021505621.png" alt="购买OSS"></li></ul></li><li><p>设置OSS</p><ul><li><p>进入到控制台，点击对象存储OSS</p></li><li><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207021506162.png" alt="设置OSS"></p></li><li><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207021507881.png" alt="设置OSS"></p></li><li><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207021507331.png" alt="设置OSS"></p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207021510564.png" alt="设置Bucket"></li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207021511073.png" alt="设置Bucket"></li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207021512220.png" alt="设置Bucket"></li><li>点击你的Bucket名称，进入到下面这个页面</li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207021513798.png" alt="设置Bucket"></li></ul></li><li><p>进入到刚才新建的目录，点击 <strong>上传文件</strong> 选择你想上传的文件即可</p></li></ul></li><li><p>使用 <strong>picgo+typora</strong> 上传（不使用的可跳过）</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207021517785.png" alt="获取key"></li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207021517158.png" alt="获取key"></li><li>选择创建<strong>AccessKey</strong>，创建成功之后记住key</li><li>进入到 <strong>picgo</strong> 中</li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207021521728.png" alt="设置key"></li><li>进入到 <strong>typora</strong> 中，点击文件-&gt;偏好设置-&gt;图像</li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207021525688.png" alt="设置typora"></li><li>这样在把图片复制到typora后，typora会自动上传图片到你设置的目录中，并且picgo会自动将你图片对应的URL复制到你的粘贴板，你可以直接使用</li></ul></li><li><p>将博客的图片迁移到OSS中</p><ul><li>进入到本地博客根目录-&gt;themes-&gt;你的主题名-&gt;source</li><li>将里面的图片全部上传到OSS中</li><li>有些博客会使用yml文件进行配置图片地址，所以需要将里面配置的路径设置为你图片所对应的路径<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207021534893.png" alt="设置路径"></li></ul></li></ul></li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot的学习</title>
      <link href="/2022/05/24/categories/java/springboot/"/>
      <url>/2022/05/24/categories/java/springboot/</url>
      
        <content type="html"><![CDATA[<h1 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h1><h2 id="1-SpringBoot-介绍（熟悉）"><a href="#1-SpringBoot-介绍（熟悉）" class="headerlink" title="1. SpringBoot 介绍（熟悉）"></a>1. SpringBoot 介绍（熟悉）</h2><h3 id="1-1-原有Spring优缺点分析"><a href="#1-1-原有Spring优缺点分析" class="headerlink" title="1.1 原有Spring优缺点分析"></a>1.1 原有Spring优缺点分析</h3><ul><li><code>Spring的优点分析</code>：<ul><li>Spring是Java企业版（Java Enterprise Edition，JEE，也称J2EE）的轻量级代替品。无需开发重量级的Enterprise JavaBean（EJB），Spring为企业级Java开发提供了一种相对简单的方法，通过依赖注入和面向切面编程，用简单 的Java对象（Plain Old Java Object，POJO）实现了EJB的功能。</li></ul></li><li><code>Spring的缺点分析</code>：<ul><li>虽然Spring的组件代码是轻量级的，但它的配置却是重量级的</li><li>一开始，Spring用XML配置，而且是很多XML配 置。<code>Spring 2.5引入了基于注解的组件扫描</code>，这消除了大量针对应用程序自身组件的显式XML配置</li><li><code>Spring 3.0引入 了基于Java的配置，这是一种类型安全的可重构配置方式，可以代替XML</code></li><li>所有这些配置都代表了开发时的损耗。因为在思考Spring特性配置和解决业务问题之间需要进行思维切换，所以编 写配置挤占了编写应用程序逻辑的时间。和所有框架一样，Spring实用，但与此同时它要求的回报也不少</li><li>除此之外，项目的依赖管理也是一件耗时耗力的事情。在环境搭建时，需要分析要导入哪些库的坐标，而且还需要 分析导入与之有依赖关系的其他库的坐标，一旦选错了依赖的版本，随之而来的不兼容问题就会严重阻碍项目的开发进度。</li></ul></li></ul><hr><h3 id="1-2-SpringBoot概念简介"><a href="#1-2-SpringBoot概念简介" class="headerlink" title="1.2 SpringBoot概念简介"></a>1.2 SpringBoot概念简介</h3><ul><li>Spring Boot是Spring公司的一个顶级项目，和Spring Framework是一个级别的。</li><li>Spring Boot实际上是利用Spring Framework 4 自动配置特性完成。<code>编写项目时不需要编写xml文件</code>。发展到现在，Spring Boot已经具有很很大的生态圈，各种主流技术已经都提供了 <code>Spring Boot的启动器</code>。</li></ul><h3 id="1-3-什么是启动器"><a href="#1-3-什么是启动器" class="headerlink" title="1.3 什么是启动器"></a>1.3 什么是启动器</h3><ul><li>Spring框架在项目中作用是Spring整合各种其他技术，让其他技术使用更加方便。<code>Spring Boot的启动器实际上就是一个依赖</code></li><li>这个依赖中包含了整个这个技术的相关jar包，还包含了这个技术的自动配置，<code>以前绝大多数XML配置都不需要配置了</code></li><li>当然了，<code>启动器中自动配置无法实现所有内容的自动配置，在使用Spring Boot时还需要进行少量的配置</code>（这个配置不是在xml中了，而是在properties或yml中即可）</li><li>如果是Spring自己封装的启动器的artifact id名字满足：spring-boot-starter-xxxx，如果是第三方公司提供的启动满足：xxxx-spring-boot-starter。<code>以后每次使用Spring Boot整合其他技术时首先需要考虑导入启动器</code>。</li></ul><hr><h3 id="1-4-Spring-Boot优点"><a href="#1-4-Spring-Boot优点" class="headerlink" title="1.4 Spring Boot优点"></a>1.4 Spring Boot优点</h3><ol><li>使用Spring Boot可以<code>创建独立的Spring应用程序</code></li><li>在Spring Boot中直接<code>嵌入了Tomcat、Jetty、Undertow等 Web 容器</code>，在 <code>使用SpringBoot做Web开发时不需要部署WAR文件</code></li><li>通过 <code>提供自己的启动器(Starter)依赖</code>，简化项目构建配置</li><li>尽量的 <code>自动配置Spring和第三方库</code></li><li>绝对没有代码生成，也 <code>不需要XML配置文件</code></li></ol><hr><h3 id="1-5-Spring-Boot版本介绍"><a href="#1-5-Spring-Boot版本介绍" class="headerlink" title="1.5 Spring Boot版本介绍"></a>1.5 Spring Boot版本介绍</h3><ul><li><code>SNAPSHOT</code>：快照版，即开发版。</li><li><code>CURRENT</code>：最新版，但是不一定是稳定版。</li><li><code>GA</code>：General Availability，正式发布的版本。</li></ul><hr><h3 id="1-6-Spring-Boot的核心"><a href="#1-6-Spring-Boot的核心" class="headerlink" title="1.6 Spring Boot的核心"></a>1.6 Spring Boot的核心</h3><ul><li><code>起步依赖</code>：起步依赖本质上是一个Maven项目对象模型（Project Object Model，POM），定义了对其他库的传递依赖，这些东西加在一起即支持某项功能。 简单的说，起步依赖就是将具备某种功能的坐标打包到一起，并提供一些默认的功能。</li><li><code>自动配置</code>：Spring Boot的自动配置是一个运行时（更准确地说，是应用程序启动时）的过程，考虑了众多因素，才决定 Spring配置应该用哪个，不该用哪个。该过程是Spring自动完成的。</li></ul><hr><h2 id="2-项目搭建方式1（掌握）"><a href="#2-项目搭建方式1（掌握）" class="headerlink" title="2 项目搭建方式1（掌握）"></a>2 项目搭建方式1（掌握）</h2><h3 id="2-1-pom导入相关依赖与parent"><a href="#2-1-pom导入相关依赖与parent" class="headerlink" title="2.1 pom导入相关依赖与parent"></a>2.1 pom导入相关依赖与parent</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>top.mikevane<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>springboot01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--继承父项目方式--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.4.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--   springboot启动器     --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.4.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="2-2-依赖传递"><a href="#2-2-依赖传递" class="headerlink" title="2.2 依赖传递"></a>2.2 依赖传递</h3><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220816215312091.png" alt="依赖传递"></li></ul><hr><h3 id="2-3-新建Controller"><a href="#2-3-新建Controller" class="headerlink" title="2.3 新建Controller"></a>2.3 新建Controller</h3><ul><li>新建controller，作为测试用</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"firstController"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">firstController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello springboot"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="2-4-新建启动类"><a href="#2-4-新建启动类" class="headerlink" title="2.4 新建启动类"></a>2.4 新建启动类</h3><ul><li>Spring Boot的启动类的作用是启动Spring Boot项目，是基于Main方法来运行的。</li><li><code>注意</code>：<ul><li>启动类在启动时会做注解扫描(@Controller、@Service、@Repository……)，扫描位置为 <code>同包或者子包下的注解</code>，所以启动类的位置应放于包的根下</li><li>必须在包中新建这个类，不能直接放入到java文件夹</li><li><code>命名规范</code>：XXXXApplication，可以是项目上下文路径Application</li></ul></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Springboot01Application</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Springboot01Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="2-5-启动类与启动器区别"><a href="#2-5-启动类与启动器区别" class="headerlink" title="2.5 启动类与启动器区别"></a>2.5 启动类与启动器区别</h3><ul><li>启动类表示 <code>项目的启动入口</code></li><li>启动器表示 <code>jar包的坐标</code></li></ul><hr><h3 id="2-6-项目启动日志"><a href="#2-6-项目启动日志" class="headerlink" title="2.6 项目启动日志"></a>2.6 项目启动日志</h3><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220816222559247.png" alt="启动日志"></li><li>端口号默认8080</li><li>项目上下文路径默认为空</li></ul><hr><h3 id="2-7-测试访问"><a href="#2-7-测试访问" class="headerlink" title="2.7 测试访问"></a>2.7 测试访问</h3><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220816222656670.png" alt="测试"></li></ul><hr><h2 id="3-项目搭建方式2（掌握）"><a href="#3-项目搭建方式2（掌握）" class="headerlink" title="3 项目搭建方式2（掌握）"></a>3 项目搭建方式2（掌握）</h2><ul><li>在公司中可能会出现必须继承某个项目，如果Spring Boot用了继承就不能继承别的项目了。所以Spring Boot还提供了依赖的方式</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>top.mikevane<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>springboot02<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.4.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.4.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="3-1-使用idea自带springBoot项目初始化插件"><a href="#3-1-使用idea自带springBoot项目初始化插件" class="headerlink" title="3.1 使用idea自带springBoot项目初始化插件"></a>3.1 使用idea自带springBoot项目初始化插件</h3><ol><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220816235232780.png" alt="步骤1"></li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220816235501186.png" alt="步骤2"></li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220816235734917.png" alt="项目结构"></li></ol><hr><h2 id="4-SpringBoot启动原理（理解）"><a href="#4-SpringBoot启动原理（理解）" class="headerlink" title="4 SpringBoot启动原理（理解）"></a>4 SpringBoot启动原理（理解）</h2><h3 id="4-1-依赖导入原理"><a href="#4-1-依赖导入原理" class="headerlink" title="4.1 依赖导入原理"></a>4.1 依赖导入原理</h3><ul><li>父项目版本控制</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.7.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/></span></span> <span class="token comment">&lt;!-- lookup parent from repository --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>ctrl+鼠标左键点击进入 <code>spring-boot-starter-parent</code></li></ul><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220817092448372.png" alt="spring-boot-starter-parent"></p><ul><li>再次点击进入 <code>spring-boot-dependencies</code></li></ul><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220817092514006.png" alt="spring-boot-dependencies"></p><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220817092755954.png" alt="spring-boot-dependencies"></p><ul><li>这里管理着springboot中所有依赖的版本,版本控制中心,导入依赖如果不写版本就用这里的版本</li><li><code>spring-boot-starter-web</code>,也就是web启动器,导入和很多web的依赖</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="4-2-springboot-包扫描原理"><a href="#4-2-springboot-包扫描原理" class="headerlink" title="4.2 springboot 包扫描原理"></a>4.2 springboot 包扫描原理</h3><ul><li><p>进入<code>@SpringBootApplication</code> 注解</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220817094614272.png" alt="SpringBootApplication"></li></ul></li><li><p>进入 <code>@EnableAutoConfiguration（启动自动配置功能）</code></p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220817094836975.png" alt="EnableAutoConfiguration"></li></ul></li><li><p>进入 <code>@AutoConfigurationPackage</code></p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220817094942151.png" alt="AutoConfigurationPackage"></li></ul></li><li><p>可以看到，这里导入了 <code>Registrar类</code>，包扫描应该就是在这个类中，进入这个类</p></li><li><p>@Import是spring的 底层注解,给容器导入一个组件</p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Registrar</span> <span class="token keyword">implements</span> <span class="token class-name">ImportBeanDefinitionRegistrar</span><span class="token punctuation">,</span> <span class="token class-name">DeterminableImports</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Registrar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">AnnotationMetadata</span> metadata<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">AutoConfigurationPackages</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>registry<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AutoConfigurationPackages<span class="token punctuation">.</span>PackageImports</span><span class="token punctuation">(</span>metadata<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPackageNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> <span class="token function">determineImports</span><span class="token punctuation">(</span><span class="token class-name">AnnotationMetadata</span> metadata<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singleton</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AutoConfigurationPackages<span class="token punctuation">.</span>PackageImports</span><span class="token punctuation">(</span>metadata<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>这里可以看到，获取包名应该是在 <code>registerBeanDefinitions</code> 这个方法，在这里打断点，然后测试<ol><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220817095722614.png" alt="步骤1" style="zoom:67%;" /></li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220817095741089.png" alt="计算结果" style="zoom: 80%;" /></li></ol></li><li><code>可以发现这里就是包扫描的原理，这里将配置类@SpringBootApplication标注的类所在包及下面所有子包里的所有组件扫描到spring容器</code></li></ul><hr><h3 id="4-3-springboot自动配置原理"><a href="#4-3-springboot自动配置原理" class="headerlink" title="4.3 springboot自动配置原理"></a>4.3 springboot自动配置原理</h3><ol><li>在前面的 <code>SpringBootApplication注解</code> 中，可以找到导入默认配置类的注解<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220817114634247.png" alt="导入默认配置"></li></ul></li><li>在 <code>AutoConfigurationImportSelector</code> 类中找到 <code>AutoConfigurationImportSelector </code>方法</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getCandidateConfigurations</span><span class="token punctuation">(</span><span class="token class-name">AnnotationMetadata</span> metadata<span class="token punctuation">,</span> <span class="token class-name">AnnotationAttributes</span> attributes<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> configurations <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token class-name">SpringFactoriesLoader</span><span class="token punctuation">.</span><span class="token function">loadFactoryNames</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getSpringFactoriesLoaderFactoryClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBeanClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">ImportCandidates</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">AutoConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBeanClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>configurations<span class="token operator">::</span><span class="token function">add</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notEmpty</span><span class="token punctuation">(</span>configurations<span class="token punctuation">,</span> <span class="token string">"No auto configuration classes found in META-INF/spring.factories nor in META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports. If you are using a custom packaging, make sure that file is correct."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> configurations<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><p>可以发现，配置与 <code>spring.factories</code> 文件有关</p></li><li><p>查找springboot自带的 <code>配置类</code> 并找到对应的 <code>spring.factories</code></p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220817115223620.png" alt="配置类"></li></ul></li><li><p>找到对应的 <code>EnableAutoConfiguration</code>，下面信息即默认的配置类</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220817115346338.png" alt="EnableAutoConfiguration"></li></ul></li><li><p>在上面的getCandidateConfigurations方法打断点，测试 <code>spring.factories</code> 的配置信息是否会被读取</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220817115750731.png" alt="配置信息被读取"></li><li>这些自动配置类给我们当前项目的场景提供了一些组件和配置,有了自动配置就免除类手动编写配置文件,注入等等功能</li></ul></li><li><p>并且自带的jar包配置类中还有其他配置信息</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220817120058967.png" alt="8080端口"></li></ul></li></ol><hr><h2 id="5-项目配置（掌握）"><a href="#5-项目配置（掌握）" class="headerlink" title="5 项目配置（掌握）"></a>5 项目配置（掌握）</h2><h3 id="5-1-properties配置文件"><a href="#5-1-properties配置文件" class="headerlink" title="5.1 properties配置文件"></a>5.1 properties配置文件</h3><ul><li>SpringBoot默认读取项目下名字为application开头的  yml yaml properties配置文件</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>$&#123;basedir&#125;/src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/application*.yml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/application*.yaml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/application*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在项目中的 <code>application.properties</code> 里 <code>修改端口号和项目上下文路径</code></li></ul><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">server.servlet.context-path</span><span class="token punctuation">=</span><span class="token value attr-value">/springboot03</span><span class="token key attr-name">server.port</span><span class="token punctuation">=</span><span class="token value attr-value">8090</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><code>注意</code>：<ul><li>遇到记不住的配置信息，去官网 <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties.web">https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties.web</a> 查找</li><li>这里的每一个 <code>.</code> 都代表一个层级</li></ul></li></ul><hr><h3 id="5-2-yml文件"><a href="#5-2-yml文件" class="headerlink" title="5.2 yml文件"></a>5.2 yml文件</h3><ul><li>yml中使用 <code>缩进</code> 代表层级关系</li><li><code>yml格式要求</code><ol><li>大小写敏感</li><li>使用缩进代表层级关系</li><li>相同的部分只出现一次</li><li>注意空格</li></ol></li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">servlet</span><span class="token punctuation">:</span>    <span class="token key atrule">context-path</span><span class="token punctuation">:</span> /springboot_02  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">password</span><span class="token punctuation">:</span>    <span class="token key atrule">username</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span>    driver<span class="token punctuation">-</span>class<span class="token punctuation">-</span>name<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>yml的数据类型</code></li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#[1]普通数据类型</span><span class="token key atrule">server</span><span class="token punctuation">:</span>   <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8888</span><span class="token comment">#[2]配置对象类型数据</span><span class="token key atrule">person</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> zs  <span class="token key atrule">age</span><span class="token punctuation">:</span> <span class="token number">12</span>  <span class="token key atrule">sex</span><span class="token punctuation">:</span> 男<span class="token comment">#或者写成json格式</span><span class="token key atrule">person2</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token key atrule">name</span><span class="token punctuation">:</span> zs<span class="token punctuation">,</span><span class="token key atrule">age</span><span class="token punctuation">:</span> <span class="token number">19</span> <span class="token punctuation">&#125;</span><span class="token comment">#[3]配置数组类型</span><span class="token key atrule">city</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> beijing  <span class="token punctuation">-</span> tianjin  <span class="token punctuation">-</span> shanghai  <span class="token punctuation">-</span> chongqing<span class="token comment">#或者</span><span class="token key atrule">city2</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>beijing<span class="token punctuation">,</span>tianjin<span class="token punctuation">,</span>shanghai<span class="token punctuation">,</span>chongqing<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>注意</code><ul><li>如果同一个目录下，有application.yml也有application.properties，<code>默认先读取application.properties</code>。</li><li>如果同一个配置属性，在多个配置文件都配置了，默认使用第1个读取到的，<code>后面读取的不覆盖前面读取到的</code>。</li></ul></li></ul><hr><h4 id="5-2-1-配置文件存放位置"><a href="#5-2-1-配置文件存放位置" class="headerlink" title="5.2.1 配置文件存放位置"></a>5.2.1 配置文件存放位置</h4><ol><li>当前项目根目录中</li><li>当前项目根目录下的一个&#x2F;config子目录中</li><li>项目的resources即classpath根路径中</li><li>项目的resources即classpath根路径下的&#x2F;config目录中</li></ol><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220817174638106.png" alt="四个存放位置"></p><hr><h4 id="5-2-2-配置文件存放读取优先级"><a href="#5-2-2-配置文件存放读取优先级" class="headerlink" title="5.2.2 配置文件存放读取优先级"></a>5.2.2 配置文件存放读取优先级</h4><ol><li><p><code>当前项目根目录下的一个/config子目录中(最高)</code></p><ul><li>config&#x2F;application.properties</li><li>config&#x2F;application.yml</li></ul></li><li><p><code>当前项目根目录中(其次)</code></p><ul><li>application.properties</li><li>application.yml</li></ul></li><li><p><code>项目的resources即classpath根路径下的/config目录中(一般)</code></p><ul><li>resources&#x2F;config&#x2F;application.properties</li><li>resources&#x2F;config&#x2F;application.yml</li></ul></li><li><p><code>项目的resources即classpath根路径中(最后)</code></p><ul><li>resources&#x2F;application.properties</li><li>resources&#x2F;application.yml</li></ul></li></ol><hr><h3 id="5-3-bootstrap配置文件"><a href="#5-3-bootstrap配置文件" class="headerlink" title="5.3 bootstrap配置文件"></a>5.3 bootstrap配置文件</h3><ul><li><p><code>Spring Boot 中有两种上下文对象，一种是 bootstrap, 另外一种是 application(ServletContext), bootstrap 是应用程序的父上下文，也就是说 bootstrap 加载优先于 applicaton</code></p></li><li><p>bootstrap 主要用于从额外的资源来加载配置信息，还可以在本地外部配置文件中解密属性。这两个上下文共用一个环境，它是任何Spring应用程序的外部属性的来源。bootstrap 里面的属性会优先加载，它们默认也不能被本地相同配置覆盖。</p></li><li><p><code>bootstrap配置文件特征</code></p><ol><li>boostrap 由父 ApplicationContext 加载，比 applicaton 优先加载。</li><li>boostrap 里面的属性不能被覆盖。</li></ol></li><li><p><code>bootstrap与 application 的应用场景</code></p><ul><li>application 配置文件主要用于 Spring Boot 项目的自动化配置。</li><li>bootstrap 配置文件有以下几个应用场景。<ul><li>使用 SpringCloudConfig 配置中心时，这时需要在 bootstrap 配置文件中添加连接到配置中心的配置属性来加载外部配置中心的配置信息。</li><li>一些固定的不能被覆盖的属性。</li><li>一些加密&#x2F;解密的场景。</li></ul></li></ul></li></ul><hr><h3 id="5-4-SpringBoot项目结构"><a href="#5-4-SpringBoot项目结构" class="headerlink" title="5.4 SpringBoot项目结构"></a>5.4 SpringBoot项目结构</h3><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220817193841300.png" alt="项目结构"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">--</span> 项目名<span class="token operator">--</span>src<span class="token operator">--</span>main<span class="token operator">--</span>javajava代码<span class="token operator">--</span>resources<span class="token operator">--</span><span class="token keyword">public</span> 公共资源。所有共享的内容。对外公开的内容。<span class="token operator">--</span><span class="token keyword">static</span>静态资源。图片、js、css。不会被服务器解析。<span class="token operator">--</span>js<span class="token operator">--</span> jquery<span class="token punctuation">.</span>js 访问路径：http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>ip<span class="token operator">:</span>port<span class="token operator">/</span>js<span class="token operator">/</span>jquery<span class="token punctuation">.</span>js                    注意<span class="token operator">:</span>该目录是<span class="token class-name">SpringBoot</span>可以直接识别的目录，会将其中的                    静态资源编译到web项目中，并放到tomcat中使用。静态资源的                    访问路径中无需声明<span class="token keyword">static</span> 例如<span class="token operator">:</span>localhost<span class="token operator">:</span><span class="token number">8080</span><span class="token operator">/</span>a<span class="token punctuation">.</span>png                <span class="token operator">--</span>templates                    <span class="token class-name">FreeMarker</span>  thymeleaf 页面所在目录。            <span class="token operator">--</span>webapp 只有当页面使用jsp时才有。            <span class="token operator">--</span>WEB<span class="token operator">-</span>INF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><ul><li><code>设置WEB-INF</code></li></ul><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220817194417463.png" alt="设置WEB-INF"></p><hr><h2 id="6-整合MyBatis（掌握）"><a href="#6-整合MyBatis（掌握）" class="headerlink" title="6 整合MyBatis（掌握）"></a>6 整合MyBatis（掌握）</h2><h3 id="6-1-导入依赖"><a href="#6-1-导入依赖" class="headerlink" title="6.1 导入依赖"></a>6.1 导入依赖</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--MyBatis启动器--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.1.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--mysql驱动--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>8.0.21<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--lombok--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.18.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>如果不指定mysql版本，则使用<code>springboot默认指定的版本号</code>（具体见4.1）<ul><li>可以通过 <code>properties</code> 标签指定mysql版本号</li></ul></li></ul><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220817232337493.png" alt="通过properties指定版本"></p><hr><h3 id="6-2-编写配置文件"><a href="#6-2-编写配置文件" class="headerlink" title="6.2 编写配置文件"></a>6.2 编写配置文件</h3><ul><li><code>appliction.yml</code>中添加如下配置</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">username</span><span class="token punctuation">:</span> root    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span>3306/mydb<span class="token punctuation">?</span>useSSL=false<span class="token important">&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span>    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver<span class="token key atrule">mybatis</span><span class="token punctuation">:</span>  <span class="token key atrule">type-aliases-package</span><span class="token punctuation">:</span> top.mikevane.pojo  <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>mybatis/<span class="token important">*.xml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>mapper-locations: classpath:mybatis/*.xml</code>：mapper映射文件包扫描</li><li><code>type-aliases-package</code>：实体类别名包扫描</li></ul><hr><h3 id="6-3-编写功能代码"><a href="#6-3-编写功能代码" class="headerlink" title="6.3 编写功能代码"></a>6.3 编写功能代码</h3><ol><li><code>在启动类上添加注解，表示mapper接口所在位置</code></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">"top.mikevane.mapper"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Springboot03Application</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Springboot03Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><code>定义mapper接口</code></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> <span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><blockquote><p><code>注意</code>：如果<code>不在</code>MyApplication启动类上添加@MapperScan，那么必须在UserMapper接口上添加 <code>@Mapper注解</code></p></blockquote></li></ul><ol start="3"><li><code>定义mapper.xml映射文件</code></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span> <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.mapper.UserMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectAll<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from user    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在resource下新建mybatis文件夹，mapper.xml文件名没有要求了，不需要和接口名完全对应了，是根据namespace去找接口。<code>但是最好还是和接口名字保持一致</code></li></ul><ol start="4"><li><code>controller层代码</code></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"findAll"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li><code>service层代码</code></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">UserMapper</span> userMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> userMapper<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="6"><li>idea中往往会误报代码错误,如果我们确定代码无问题,可以通过降低idea检查代码的严格程度来消除报错<ul><li><code>快捷键：ctrl+alt+shift+h</code></li></ul></li></ol><hr><h2 id="7-整合logback（掌握）"><a href="#7-整合logback（掌握）" class="headerlink" title="7 整合logback（掌握）"></a>7 整合logback（掌握）</h2><ul><li>Spring Boot默认使用Logback组件作为日志管理。Logback是由log4j创始人设计的一个开源日志组件。</li><li>在Spring Boot项目中我们不需要额外的添加Logback的依赖，因为在spring-boot-starter或者spring-boot-starter-web中已经包含了Logback的依赖。</li><li><code>Logback读取配置文件的步骤</code><ol><li>在classpath下查找文件logback-test.xml</li><li>如果文件不存在，则查找logback.xml</li></ol></li><li><code>配置代码</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LOG_HOME<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;catalina.base&#125;/logs/<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment">&lt;!-- 控制台输出 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Stdout<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.ConsoleAppender<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 日志输出格式 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.classic.PatternLayout<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">></span></span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 按照每天生成日志文件 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>RollingFile<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.RollingFileAppender<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rollingPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.TimeBasedRollingPolicy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!--日志文件输出的文件名--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FileNamePattern</span><span class="token punctuation">></span></span>$&#123;LOG_HOME&#125;/server.%d&#123;yyyy-MM-dd&#125;.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FileNamePattern</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MaxHistory</span><span class="token punctuation">></span></span>30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MaxHistory</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rollingPolicy</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.classic.PatternLayout<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">></span></span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--日志文件最大的大小--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>triggeringPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MaxFileSize</span><span class="token punctuation">></span></span>10MB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MaxFileSize</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>triggeringPolicy</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 日志输出级别 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Stdout<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token comment">&lt;!--        &lt;appender-ref ref="RollingFile" />--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.mapper<span class="token punctuation">"</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DEBUG<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logger</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--日志异步到数据库 --></span>    <span class="token comment">&lt;!--&lt;appender name="DB" class="ch.qos.logback.classic.db.DBAppender">            日志异步到数据库             &lt;connectionSource class="ch.qos.logback.core.db.DriverManagerConnectionSource">               连接池                &lt;dataSource class="com.mchange.v2.c3p0.ComboPooledDataSource">                  &lt;driverClass>com.mysql.jdbc.Driver&lt;/driverClass>                  &lt;url>jdbc:mysql://127.0.0.1:3306/databaseName&lt;/url>                  &lt;user>root&lt;/user>                  &lt;password>root&lt;/password>                &lt;/dataSource>            &lt;/connectionSource>      &lt;/appender> --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="8-整合PageHelper（掌握）"><a href="#8-整合PageHelper（掌握）" class="headerlink" title="8 整合PageHelper（掌握）"></a>8 整合PageHelper（掌握）</h2><ul><li>我们在正常的查询业务之中,只需要加上一行代码就可以 <code>实现分页的数据的封装处理</code></li><li><code>MyBatis整合PageHelper插件</code>,自行阅读即可<ul><li><a href="https://blog.csdn.net/qq_38263083/article/details/84592066">https://blog.csdn.net/qq_38263083/article/details/84592066</a></li></ul></li></ul><h3 id="8-1-实现原理"><a href="#8-1-实现原理" class="headerlink" title="8.1 实现原理"></a>8.1 实现原理</h3><ul><li>PageHelper方法使用了静态的ThreadLocal参数，分页参数和线程是绑定的</li><li>内部流程是ThreadLocal中设置了分页参数（pageIndex，pageSize），之后在查询执行的时候，获取当线程中的分页参数，执行查询的时候通过拦截器在sql语句中添加分页参数，之后实现分页查询，查询结束后在 finally 语句中清除ThreadLocal中的查询参数</li></ul><hr><h3 id="8-2-使用方法"><a href="#8-2-使用方法" class="headerlink" title="8.2 使用方法"></a>8.2 使用方法</h3><ol><li><p>调用PageHelper方法：<code>PageHelper.startPage(pageNum, pageSize)</code></p></li><li><p>MyBatis 查询方法</p></li><li><p><code>注意</code>：只要你可以保证在PageHelper方法调用后紧跟 MyBatis 查询方法，这就是安全的。因为PageHelper在finally代码段中 <code>自动清除了ThreadLocal存储的对象</code></p></li></ol><hr><h3 id="8-3-整合步骤"><a href="#8-3-整合步骤" class="headerlink" title="8.3 整合步骤"></a>8.3 整合步骤</h3><ol><li><code>添加PageHelper启动器依赖</code></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--PageHelper启动器--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.github.pagehelper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>pagehelper-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><code>Controller层代码编写</code></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/emp"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EmpController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">EmpService</span> empService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"findByPage/&#123;pageNum&#125;/&#123;pageSize&#125;"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> <span class="token function">findByPage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"pageNum"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> pageNum<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"pageSize"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> empService<span class="token punctuation">.</span><span class="token function">findByPage</span><span class="token punctuation">(</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><code>Service层代码编写</code></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EmpServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">EmpService</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">EmpMapper</span> empMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> <span class="token function">findByPage</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> pageNum<span class="token punctuation">,</span> <span class="token class-name">Integer</span> pageSize<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> empPage <span class="token operator">=</span> <span class="token class-name">PageHelper</span><span class="token punctuation">.</span><span class="token function">startPage</span><span class="token punctuation">(</span>pageNum<span class="token punctuation">,</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> emps <span class="token operator">=</span> empMapper<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 页码 页大小 当前业数据 总页数 总记录数</span>        <span class="token comment">// 方式1（不推荐）</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"当前页:"</span><span class="token operator">+</span>empPage<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总页数:"</span><span class="token operator">+</span>empPage<span class="token punctuation">.</span><span class="token function">getPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"页大小:"</span><span class="token operator">+</span>empPage<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总记录数:"</span><span class="token operator">+</span>empPage<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"当前页数据:"</span><span class="token operator">+</span>empPage<span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 方式二（推荐） PageInfo >>> PageBean</span>        <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> pageInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>emps<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"当前页:"</span><span class="token operator">+</span>pageInfo<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总页数:"</span><span class="token operator">+</span>pageInfo<span class="token punctuation">.</span><span class="token function">getPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"页大小:"</span><span class="token operator">+</span>pageInfo<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总记录数:"</span><span class="token operator">+</span>pageInfo<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"当前页数据:"</span><span class="token operator">+</span>pageInfo<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> pageInfo<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="8-4-PageInfo对象和Page对象的区别"><a href="#8-4-PageInfo对象和Page对象的区别" class="headerlink" title="8.4 PageInfo对象和Page对象的区别"></a>8.4 PageInfo对象和Page对象的区别</h3><ul><li><a href="https://blog.csdn.net/weixin_43760541/article/details/107155386">https://blog.csdn.net/weixin_43760541/article/details/107155386</a></li></ul><hr><h2 id="9-整合Druid（掌握）"><a href="#9-整合Druid（掌握）" class="headerlink" title="9 整合Druid（掌握）"></a>9 整合Druid（掌握）</h2><ul><li>Druid是由阿里巴巴推出的数据库连接池。它结合了C3P0、DBCP、PROXOOL等数据库连接池的优点。之所以从众多数据库连接池中脱颖而出，还有一个<code>重要的原因就是它包含控制台,很方便的帮助我们实现对于sql执行的监控。</code></li></ul><hr><h3 id="9-1-整合步骤"><a href="#9-1-整合步骤" class="headerlink" title="9.1 整合步骤"></a>9.1 整合步骤</h3><ol><li><code>添加依赖</code></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--德鲁伊启动器--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>druid-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><code>修改配置文件application.yml</code></li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token comment"># 使用阿里的Druid连接池</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> com.alibaba.druid.pool.DruidDataSource    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver    <span class="token comment"># 填写你数据库的url、登录名、密码和数据库名</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span>3306/mydb<span class="token punctuation">?</span>useSSL=false<span class="token important">&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span>    <span class="token key atrule">username</span><span class="token punctuation">:</span> root    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>  <span class="token key atrule">druid</span><span class="token punctuation">:</span>    <span class="token comment"># 连接池的配置信息</span>    <span class="token comment"># 初始化大小，最小，最大</span>    <span class="token key atrule">initial-size</span><span class="token punctuation">:</span> <span class="token number">5</span>    <span class="token key atrule">min-idle</span><span class="token punctuation">:</span> <span class="token number">5</span>    <span class="token key atrule">maxActive</span><span class="token punctuation">:</span> <span class="token number">20</span>    <span class="token comment"># 配置获取连接等待超时的时间</span>    <span class="token key atrule">maxWait</span><span class="token punctuation">:</span> <span class="token number">60000</span>    <span class="token comment"># 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒</span>    <span class="token key atrule">timeBetweenEvictionRunsMillis</span><span class="token punctuation">:</span> <span class="token number">60000</span>    <span class="token comment"># 配置一个连接在池中最小生存的时间，单位是毫秒</span>    <span class="token key atrule">minEvictableIdleTimeMillis</span><span class="token punctuation">:</span> <span class="token number">300000</span>    <span class="token key atrule">validationQuery</span><span class="token punctuation">:</span> SELECT 1    <span class="token key atrule">testWhileIdle</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">testOnBorrow</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">testOnReturn</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token comment"># 打开PSCache，并且指定每个连接上PSCache的大小</span>    <span class="token key atrule">poolPreparedStatements</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">maxPoolPreparedStatementPerConnectionSize</span><span class="token punctuation">:</span> <span class="token number">20</span>    <span class="token comment"># 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙</span>    <span class="token key atrule">filters</span><span class="token punctuation">:</span> stat<span class="token punctuation">,</span>wall<span class="token punctuation">,</span>slf4j    <span class="token comment"># 通过connectProperties属性来打开mergeSql功能；慢SQL记录</span>    <span class="token key atrule">connectionProperties</span><span class="token punctuation">:</span> druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000    <span class="token comment"># 配置DruidStatFilter</span>    <span class="token key atrule">web-stat-filter</span><span class="token punctuation">:</span>      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">url-pattern</span><span class="token punctuation">:</span> <span class="token string">"/*"</span>      <span class="token key atrule">exclusions</span><span class="token punctuation">:</span> <span class="token string">"*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"</span>    <span class="token comment"># 配置DruidStatViewServlet</span>    <span class="token key atrule">stat-view-servlet</span><span class="token punctuation">:</span>      <span class="token key atrule">url-pattern</span><span class="token punctuation">:</span> <span class="token string">"/druid/*"</span>      <span class="token comment"># IP白名单(没有配置或者为空，则允许所有访问)</span>      <span class="token key atrule">allow</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">,</span>192.168.8.109      <span class="token comment"># IP黑名单 (存在共同时，deny优先于allow)</span>      <span class="token key atrule">deny</span><span class="token punctuation">:</span> 192.168.1.188      <span class="token comment">#  禁用HTML页面上的“Reset All”功能</span>      <span class="token key atrule">reset-enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>      <span class="token comment"># 登录名</span>      <span class="token key atrule">login-username</span><span class="token punctuation">:</span> admin      <span class="token comment"># 登录密码</span>      <span class="token key atrule">login-password</span><span class="token punctuation">:</span> <span class="token number">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><code>访问监控界面</code><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220818160930395.png" alt="监控页面"></li></ul></li></ol><hr><h2 id="10-整合JSP（了解）"><a href="#10-整合JSP（了解）" class="headerlink" title="10 整合JSP（了解）"></a>10 整合JSP（了解）</h2><ol><li><code>添加依赖</code></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--JSP依赖--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.tomcat.embed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>tomcat-embed-jasper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><code>添加webapp目录并设置目录（见5.4）</code></li><li><code>设置工作目录</code>，如果在IDEA中项目结构为聚合工程。那么在运行jsp是需要指定路径。如果项目结构为独立项目则不需要。<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220818161638192.png" alt="设置工作目录"></li></ul></li><li><code>在yml配置文件中配置视图解析器参数</code></li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">mvc</span><span class="token punctuation">:</span>    <span class="token key atrule">view</span><span class="token punctuation">:</span>      <span class="token key atrule">prefix</span><span class="token punctuation">:</span> /WEB<span class="token punctuation">-</span>INF/      <span class="token key atrule">suffix</span><span class="token punctuation">:</span> .jsp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li><code>在控制类中声明单元方法请求转发jsp资源</code></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PageController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/&#123;uri&#125;"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"uri"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> uri<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> uri<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="11-整合FreeMarker（熟悉）"><a href="#11-整合FreeMarker（熟悉）" class="headerlink" title="11 整合FreeMarker（熟悉）"></a>11 整合FreeMarker（熟悉）</h2><h3 id="11-1-FreeMarker的简介"><a href="#11-1-FreeMarker的简介" class="headerlink" title="11.1 FreeMarker的简介"></a>11.1 FreeMarker的简介</h3><ul><li><code>FreeMarker是一款模板引擎</code>： 即一种基于模板和要改变的数据， 并用来生成输出文本（HTML网页、电子邮件、配置文件、源代码等）的通用工具。 它不是面向最终用户的，而是一个Java类库，是一款程序员可以嵌入他们所开发产品的组件。</li><li>FreeMarker是免费的，基于Apache许可证2.0版本发布。其模板编写为FreeMarker Template Language（FTL），属于简单、专用的语言。需要准备数据在真实编程语言中来显示，比如数据库查询和业务运算， 之后模板显示已经准备好的数据。<code>在模板中，主要用于如何展现数据， 而在模板之外注意于要展示什么数据</code></li><li><code>常用的java模板引擎还有哪些</code>？<ul><li>Jsp、Freemarker、Thymeleaf 、Velocity 等</li></ul></li><li>模板+数据模型&#x3D;输出<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220818163901267.png" alt="模板+数据模型=输出"></li></ul></li><li>freemarker并不关心数据的来源，只是根据模板的内容，将数据模型在模板中显示并输出文件（通常为html，也可以生成其它格式的文本文件）</li><li>freemarker作为springmvc一种视图格式，<code>默认情况下SpringMVC支持freemarker视图格式</code>。 需要创建Spring Boot+Freemarker工程用于测试模板。</li></ul><hr><h3 id="11-2-FreeMarker初次使用"><a href="#11-2-FreeMarker初次使用" class="headerlink" title="11.2 FreeMarker初次使用"></a>11.2 FreeMarker初次使用</h3><ol><li><code>导入依赖</code></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--freeMaker启动器--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-freemarker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><code>创建controller</code></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/freemarker"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FreeMarkerController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/show"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">freemarker</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"mikevane"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//返回模板文件名称</span>        <span class="token keyword">return</span> <span class="token string">"show"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><code>书写模板文件 show.ftlh</code><ul><li>通过查阅配置信息发现,<code>默认前缀为 &#39;&#39; ,后缀为.ftlh,默认路径为templates</code></li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220818164731301.png" alt="官方文档"></li></ul></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    this is show page$&#123;name&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="11-3-FreeMarker常用指令"><a href="#11-3-FreeMarker常用指令" class="headerlink" title="11.3 FreeMarker常用指令"></a>11.3 FreeMarker常用指令</h3><ol><li><code>注释</code>，即&lt;#‐‐‐‐&gt;，介于其之间的内容会被freemarker忽略</li><li><code>插值</code>（Interpolation）：即${..}部分,freemarker会用真实的值代替${..}</li><li><code>FTL指令</code>：和HTML标记类似，名字前加#予以区分，Freemarker会解析标签中的表达式或逻辑。</li><li><code>文本</code>，仅文本信息，这些不是freemarker的注释、插值、FTL指令的内容会被freemarker忽略解析，直接输出内容</li></ol><hr><h4 id="11-3-1-遍历List集合"><a href="#11-3-1-遍历List集合" class="headerlink" title="11.3.1 遍历List集合"></a>11.3.1 遍历List集合</h4><ol><li><code>controller层代码</code></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/showEmp"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">testList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">ModelAndView</span> modelAndView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> empService<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    modelAndView<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">"empList"</span><span class="token punctuation">,</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>    modelAndView<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"showEmp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> modelAndView<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><code>页面代码 showEmp.ftlh</code></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">#empTable</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 80%<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid blue<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0px auto<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">#empTable th,td</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid green<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empTable<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0px<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>索引<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>工号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>岗位<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>薪资<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>部门号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#list</span> <span class="token attr-name">empList</span> <span class="token attr-name">as</span> <span class="token attr-name">emp</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp_index&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.empno&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.ename&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.job&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.sal&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.deptno&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#list</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><blockquote><p><code>注意</code>：<code>_index</code>：得到循环的下标，使用方法是在stu后边加”_index”，它的值是从0开始</p></blockquote></li></ul><hr><h4 id="11-3-2-遍历Map数据"><a href="#11-3-2-遍历Map数据" class="headerlink" title="11.3.2 遍历Map数据"></a>11.3.2 遍历Map数据</h4><ol><li><code>controller代码</code></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/showEmpMap"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">testMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">ModelAndView</span> modelAndView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> empService<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> empMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Emp</span> emp <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        empMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>emp<span class="token punctuation">.</span><span class="token function">getEmpno</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    modelAndView<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">"empMap"</span><span class="token punctuation">,</span>empMap<span class="token punctuation">)</span><span class="token punctuation">;</span>    modelAndView<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"showEmpMap"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> modelAndView<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><blockquote><p><code>注意</code>：这里map的key类型必须是String</p></blockquote></li></ul><ol start="2"><li><code>页面代码 showEmpMap.ftlh</code></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">#empTable</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 80%<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid blue<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0px auto<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">#empTable th,td</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid green<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--查看map集合中单独的一个元素--</span><span class="token punctuation">></span></span>查看7521员工信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>工号$&#123;empMap['7521'].empno&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>姓名$&#123;empMap['7521'].ename&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>岗位$&#123;empMap['7521'].job&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>薪资$&#123;empMap['7521'].sal&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>部门号$&#123;empMap['7521'].deptno&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empTable<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0px<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>索引<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>工号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>岗位<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>薪资<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>部门号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#list</span> <span class="token attr-name">empMap?keys</span> <span class="token attr-name">as</span> <span class="token attr-name">key</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;key_index&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;key&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;empMap[key].ename&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;empMap[key].job&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;empMap[key].sal&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;empMap[key].deptno&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#list</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>因为传入的key是String类型，所以这里的key是String类型的</li></ul><hr><h4 id="11-3-3-if指令"><a href="#11-3-3-if指令" class="headerlink" title="11.3.3 if指令"></a>11.3.3 if指令</h4><ul><li><p>if 指令即判断指令，是常用的FTL指令，freemarker在解析时遇到if会进行判断，条件为真则输出if中间的内容，否则跳过内容不再输出。</p></li><li><p><code>if中支持的运算符</code></p><ol><li><p><code>算数运算符</code> FreeMarker表达式中<code>完全支持算术运算</code>,FreeMarker支持的算术运算符包括:+, - , * , &#x2F; , %</p></li><li><p><code>逻辑运算符</code>有如下几个: 逻辑与:&amp;&amp; 逻辑或:|| 逻辑非:! <code>逻辑运算符只能作用于布尔值,否则将产生错误</code></p></li><li><p><code>比较运算符</code>有如下几个:<br>     ①　<code>=或者==</code>：判断两个值是否相等.<br>     ②　<code>!=</code>：判断两个值是否不等.<br>     ③　<code>&gt; 或者gt</code>：判断左边值是否大于右边值<br>     ④　<code>&gt;=或者gte</code>：判断左边值是否大于等于右边值<br>     ⑤　<code>&lt;或者lt</code>：判断左边值是否小于右边值<br>     ⑥　<code>&lt;=或者lte</code>：判断左边值是否小于等于右边值</p><ul><li><blockquote><p><code>注意</code>：</p><ul><li><p><code>=和!=可以用于字符串,数值和日期来比较是否相等,但=和!=两边必须是相同类型的值,否则会产生错误</code></p></li><li><p>而且FreeMarker是精确比较,”x”,”x “,”X”是不等的.<code>其它的运行符可以作用于数字和日期,但不能作用于字符串</code></p></li><li><p>大部分的时候,<code>使用gt等字母运算符代替&gt;会有更好的效果</code>,因为 FreeMarker会把&gt;解释成FTL标签的结束字符,当然,也可以使用括号来避免这种情况,如:&lt;#if (x&gt;y)&gt;</p></li></ul></blockquote></li></ul></li></ol></li><li><p><code>如何判断空值</code></p><ol><li><code>判断某变量是否存在</code>：使用 “??” 用法为:variable??，如果该变量存在返回true，否则返回false <ul><li>例：为防止mgr为空报错可以加上判断如下：${emp.mgr!’无’}</li></ul></li><li><code>缺失变量默认值</code>：使用 “!” 使用 ! 需要指定一个默认值，当变量为空时显示默认值<ul><li>例： ${name!’’}表示如果name为空显示空字符串。如果是 <code>嵌套对象则建议使用（）括起来</code></li></ul></li></ol></li><li><p><code>例如</code></p></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empTable<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0px<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>索引<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>工号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>岗位<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>上级工号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>薪资<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>补助<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>部门号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#if</span> <span class="token attr-name">empList??</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#list</span> <span class="token attr-name">empList</span> <span class="token attr-name">as</span> <span class="token attr-name">emp</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--如果序号为偶数则背景色变为灰色--</span><span class="token punctuation">></span></span>            &lt;tr &lt;#if emp_index%2 == 0>style="background-color: gray"<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#if</span><span class="token punctuation">></span></span>>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp_index&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.empno&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--标红姓名为KING--</span><span class="token punctuation">></span></span>                &lt;td &lt;#if emp.ename=='KING'>style="color: red"<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#if</span><span class="token punctuation">></span></span>>                    $&#123;emp.ename&#125;                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.job&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--防止mgr为空报错，默认赋值为"空"--</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.mgr!'无'&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--标红sal大于等于2000--</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">&lt;#if</span> <span class="token attr-name">emp.sal</span> <span class="token attr-name">gte</span> <span class="token attr-name">2000</span><span class="token punctuation">></span></span>style="color: red"<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#if</span><span class="token punctuation">></span></span>>                    $&#123;emp.sal&#125;                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--防止comm为空报错，默认赋值为0--</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.comm!'0'&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.deptno&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#list</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#if</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220819022423510.png" alt="效果图"></p><hr><h4 id="11-3-4-内置函数"><a href="#11-3-4-内置函数" class="headerlink" title="11.3.4 内置函数"></a>11.3.4 内置函数</h4><ul><li><code>内置函数语法格式</code>： 变量+?+函数名称</li></ul><ol><li><code>内建函数获取某个集合的大小</code><ul><li>${集合名?size}</li></ul></li><li><code>内建函数日期格式化</code><ul><li><code>显示年月日</code>：${today?date}</li><li><code>显示时分秒</code>：​${today?time}</li><li><code>显示日期+时间</code>：${today?datetime}</li><li><code>自定义格式化</code>：${today?string(“yyyy年MM月”)}</li></ul></li><li><code>内建函数将json字符串转成对象</code><ul><li><code>assign</code> 的作用是<code>定义一个变量</code></li></ul></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--相当于var</span> <span class="token attr-name">text</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> &#123;&#125;,然后使用evel(text)，将text转换为json对象，--</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#assign</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;<span class="token punctuation">'</span>bank<span class="token punctuation">'</span>:<span class="token punctuation">'</span>工商银行<span class="token punctuation">'</span>,<span class="token punctuation">'</span>account<span class="token punctuation">'</span>:<span class="token punctuation">'</span>10101920201920212<span class="token punctuation">'</span>&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#assign</span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>text?eval</span> <span class="token punctuation">/></span></span>开户行：$&#123;data.bank&#125; 账号：$&#123;data.account&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>页面测试</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#if</span> <span class="token attr-name">empList??</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#list</span> <span class="token attr-name">empList</span> <span class="token attr-name">as</span> <span class="token attr-name">emp</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--如果序号为偶数则背景色变为灰色--</span><span class="token punctuation">></span></span>            &lt;tr &lt;#if emp_index%2 == 0>style="background-color: gray"<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#if</span><span class="token punctuation">></span></span>>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp_index&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.empno&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--标红姓名为KING--</span><span class="token punctuation">></span></span>                &lt;td &lt;#if emp.ename=='KING'>style="color: red"<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#if</span><span class="token punctuation">></span></span>>                    $&#123;emp.ename&#125;                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.job&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--防止mgr为空报错--</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.mgr!'无'&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--内置函数，显示时间日期等--</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.hiredate?date&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.hiredate?time&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.hiredate?datetime&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.hiredate?string("yyyy年MM月dd日 HH-mm-ss")&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#--标红sal大于等于2000--</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">&lt;#if</span> <span class="token attr-name">emp.sal</span> <span class="token attr-name">gte</span> <span class="token attr-name">2000</span><span class="token punctuation">></span></span>style="color: red"<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#if</span><span class="token punctuation">></span></span>>                    $&#123;emp.sal&#125;                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.comm!'0'&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$&#123;emp.deptno&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#list</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#if</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>更多内置函数访问：<a href="https://blog.csdn.net/chami_/article/details/51992044">https://blog.csdn.net/chami_/article/details/51992044</a></li></ul><hr><h2 id="12-整合Thymeleaf（掌握）"><a href="#12-整合Thymeleaf（掌握）" class="headerlink" title="12 整合Thymeleaf（掌握）"></a>12 整合Thymeleaf（掌握）</h2><ul><li>Thymeleaf的主要目标是将优雅的自然模板带到开发工作流程中，并将HTML在浏览器中正确显示，并且可以作为静态原型，让开发团队能更容易地协作。<code>Thymeleaf能够处理HTML，XML，JavaScript，CSS甚至纯文本</code>。</li><li>长期以来，jsp在视图领域有非常重要的地位,随着时间的变迁，出现了一位新的挑战者:Thymeleaf，<code>Thymeleaf是原生的，不依赖于标签库.它能够在接受原始HTML的地方进行编辑和渲染</code>.因为它<code>没有与Servelet规范耦合</code>，因此Thymeleaf模板能进入jsp所无法涉足的领域。    </li><li>Thymeleaf在Spring Boot项目中放入到 <code>resources/templates</code> 中。<code>这个文件夹中的内容是无法通过浏览器URL直接访问的（和WEB-INF效果一样），所有Thymeleaf页面必须先走控制器</code></li><li><code>关于Thymeleaf默认配置</code><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220819152419870.png" alt="前缀默认配置"></li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220819152442608.png" alt="后缀默认配置"></li></ul></li></ul><ol><li>项目中添加依赖</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.1.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>8.0.21<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.18.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>druid-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.github.pagehelper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>pagehelper-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.4.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>在resources下新建templates文件夹。新建index.html</li><li>新建controller</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThymeleafController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"showIndex"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">showIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="12-1-Thymeleaf基础语法"><a href="#12-1-Thymeleaf基础语法" class="headerlink" title="12.1 Thymeleaf基础语法"></a>12.1 Thymeleaf基础语法</h3><ul><li>Thymeleaf通过标准变量表达式完成数据的展示和处理<ol><li>标准变量表达式 <code>必须依赖标签,不能独立使用</code></li><li>标准变量表达式 &#96;一般在开始标签中,以 th开头&#96;&#96;</li><li>&#96;&#96;语法为&#96;：&lt;tag th:***&#x3D;”${key}”   &gt;&lt;&#x2F;tag&gt;</li><li>表达式中可以 <code>通过$&#123;&#125;取出域中的值并放入标签的指定位置</code></li><li><code>$&#123;&#125;在这里不能单独使用</code>，必须在 th:后面的双引号里使用</li></ol></li><li><code>为了让IDEA有提示</code>,修改html页面中&lt;html&gt;标签为<ul><li>&lt;html xmlns:th&#x3D;”<a href="http://www.thymeleaf.org&quot;/">http://www.thymeleaf.org&quot;</a> &gt;</li></ul></li></ul><hr><h4 id="12-1-1-th-text属性"><a href="#12-1-1-th-text属性" class="headerlink" title="12.1.1 th:text属性"></a>12.1.1 th:text属性</h4><ul><li><code>向HTML标签内部输出信息</code></li><li><code>Controller代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"showIndex"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">showIndex</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"testMsg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>页面代码</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--向span双标签内部添加文本--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pageMessage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--从域中根据参数名取出参数值放在双标签中--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;msg&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="12-1-2-th-value"><a href="#12-1-2-th-value" class="headerlink" title="12.1.2 th:value"></a>12.1.2 th:value</h4><ul><li>表单元素，<code>设置HTML标签中表单元素value属性时使用</code></li><li>注意：<code>对象的属性可以为空，但是对象不能为空</code><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220819180212425.png" alt="示例"></li></ul></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--向input标签中的value属性赋值--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">th:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pageMessage<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!--从域中根据参数名取出参数值 向input标签中的value属性赋值--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">th:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;msg&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="12-1-3-th-if"><a href="#12-1-3-th-if" class="headerlink" title="12.1.3 th:if"></a>12.1.3 th:if</h4><ul><li>与java if关键字类似</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;name&#125;!=<span class="token punctuation">'</span>张三<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>会显示<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h4 id="12-1-4-循环遍历-th-each"><a href="#12-1-4-循环遍历-th-each" class="headerlink" title="12.1.4 循环遍历.th:each"></a>12.1.4 循环遍历.th:each</h4><ul><li><p>示例中u为迭代遍历。</p></li><li><p>th:each&#x3D;”u,i :${list}” 其中i表示迭代状态。</p><ol><li><code>index</code>：当前迭代器的索引 从0开始</li><li><code>count</code>：当前迭代对象的计数 从1开始</li><li><code>size</code>：被迭代对象的长度</li><li><code>even/odd</code>：布尔值，当前循环是否是偶数&#x2F;奇数 从0开始</li><li><code>first</code>：布尔值，当前循环的是否是第一条，如果是返回true否则返回false</li><li><code>last</code>：布尔值，当前循环的是否是最后一条，如果是则返回true否则返回false</li></ol></li><li><p><code>Controller代码</code></p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"showEmp"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">showEmp</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> empList <span class="token operator">=</span> empService<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"emp"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"empList"</span><span class="token punctuation">,</span>empList<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"showEmp"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>页面代码</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">#empTable</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 80%<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid blue<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0px auto<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">#empTable th,td</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid green<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empTable<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0px<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>索引<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>序号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>总人数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>偶数索引?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>奇数索引?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>第一?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>最后?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>工号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>职务<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>上级<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>入职日期<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>工资<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>补助<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>部门号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp,i:$&#123;empList&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.index&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.count&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.size&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.odd&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.even&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.first&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.last&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.empno&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.ename&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.job&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.mgr&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.hiredate&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.sal&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.comm&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.deptno&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>页面效果</code><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220819183832453.png" alt="页面效果"></li></ul></li></ul><hr><h4 id="12-1-5-标准变量表达式运算符支持"><a href="#12-1-5-标准变量表达式运算符支持" class="headerlink" title="12.1.5 标准变量表达式运算符支持"></a>12.1.5 标准变量表达式运算符支持</h4><ul><li><p>在早期的thymeleaf模板引擎框架中 逻辑运算符要写在${}的外边,后面的版本可以写在${}里面</p></li><li><p><code>算数运算符</code></p><ul><li><code>算术运算</code>：+ , - , * , &#x2F; , %</li></ul></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1+1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>1<span class="token punctuation">'</span>+1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.empno&#125;+1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.empno+1&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>关系运算符</code></p><ol><li><code>gt</code>：great than（大于）&gt;</li><li><code>ge</code>：great equal（大于等于）&gt;&#x3D;</li><li><code>eq</code>：equal（等于）&#x3D;&#x3D;</li><li><code>lt</code>：less than（小于）&lt;</li><li><code>le</code>：less equal（小于等于）&lt;&#x3D;</li><li><code>ne</code>：not equal（不等于）!&#x3D;</li></ol></li><li><p><code>逻辑运算符</code></p><ul><li><code>&amp;&amp;  或 and</code>：表示并且</li><li><code>||  或 or</code>  : 表示或者</li></ul></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1>0 and 2&lt;3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1>0 and 2>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1>0 or 2&lt;3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1>0 or 2>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.sal ge 800&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.sal &#125; ge 800<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.sal ge 800&#125; and $&#123;emp.deptno eq 20&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>($&#123;emp.sal &#125;ge 800) or ($&#123;emp.deptno &#125; ne 20)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.sal ge 800 or emp.deptno ne 20 &#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>三目运算符</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp,i:$&#123;empList&#125;<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.odd&#125;?a:b<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>对空值作出处理</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp,i:$&#123;empList&#125;<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.odd&#125;?a:b<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.index&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.count&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.size&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.odd&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.even&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.first&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.last&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.empno&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.ename&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.job&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.mgr&#125; eq null ?老板:$&#123;emp.mgr&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.hiredate&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.sal&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.comm&#125; eq null ?0:$&#123;emp.comm&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.deptno&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="12-1-6-th-href"><a href="#12-1-6-th-href" class="headerlink" title="12.1.6 th:href"></a>12.1.6 th:href</h4><ul><li>th:href：<ul><li><code>设置href属性</code></li><li><code>使用@&#123;&#125;取值</code></li></ul></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@&#123;/getParam(id=1,name=<span class="token punctuation">'</span>msb<span class="token punctuation">'</span>)&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>跳转<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 获取作用域值--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@&#123;/getParam(name=$&#123;stu.name&#125;,age=$&#123;stu.age&#125;)&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>跳转二<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><p><code>示例：删除数据后跳转回原页面</code></p></li><li><p><code>Controller层</code></p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"showEmp"</span><span class="token punctuation">)</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">showEmp</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> empList <span class="token operator">=</span> empService<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"emp"</span><span class="token punctuation">,</span>empList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"empList"</span><span class="token punctuation">,</span>empList<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> <span class="token string">"showEmp"</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"removeEmp"</span><span class="token punctuation">)</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">removeEmp</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> empno<span class="token punctuation">,</span> <span class="token class-name">String</span> ename<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token class-name">Boolean</span> success <span class="token operator">=</span> empService<span class="token punctuation">.</span><span class="token function">deleteEmp</span><span class="token punctuation">(</span>empno<span class="token punctuation">,</span>ename<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> <span class="token string">"redirect:/showEmp"</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>页面代码</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp,i:$&#123;empList&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.index&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.count&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.size&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.odd&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.even&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.first&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;i.last&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.empno&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.ename&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.job&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.mgr&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.hiredate&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.sal&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.comm&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.deptno&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@&#123;/removeEmp(empno=$&#123;emp.empno&#125;,ename=$&#123;emp.ename&#125;)&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220820022303825.png" alt="原页面"></li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220820022321168.png" alt="删除后"></li></ul><hr><h4 id="12-1-7-th-onclick"><a href="#12-1-7-th-onclick" class="headerlink" title="12.1.7 th:onclick"></a>12.1.7 th:onclick</h4><ul><li><code>给元素绑定事件,单击事件并传递参数</code></li><li><code>写法1</code>：仅仅支持数字和布尔类型参数的传递,字符串不支持</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:viod(0)<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">th:</span>onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>del(<span class="token punctuation">'</span>+$&#123;emp.empno&#125;+<span class="token punctuation">'</span>)<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>写法2</code>：支持数字和文本类型的参数传递</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>delEmp([[$&#123;emp.empno&#125;]],[[$&#123;emp.ename&#125;]])<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>示例</code>：使用写法2实现点击删除按钮，需要确认后再进行删除操作</li><li><code>页面代码</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empTable<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0px<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>工号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>职务<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>上级<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>入职日期<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>工资<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>补助<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>部门号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>操作<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp:$&#123;empList&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.empno&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.ename&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.job&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.mgr&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.hiredate&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.sal&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.comm&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;emp.deptno&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>removeClick([[$&#123;emp.empno&#125;]],[[$&#123;emp.ename&#125;]])<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">function</span> <span class="token function">removeClick</span><span class="token punctuation">(</span><span class="token parameter">empno<span class="token punctuation">,</span>ename</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">"是否要删除编号为"</span><span class="token operator">+</span>empno<span class="token operator">+</span><span class="token string">"的"</span><span class="token operator">+</span>ename<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">"removeEmp?empno="</span><span class="token operator">+</span>empno<span class="token operator">+</span><span class="token string">"&amp;ename="</span><span class="token operator">+</span>ename<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>后端代码同 <code>12.1.6</code></li></ul><hr><h3 id="12-2-Thymeleaf内置对象"><a href="#12-2-Thymeleaf内置对象" class="headerlink" title="12. 2 Thymeleaf内置对象"></a>12. 2 Thymeleaf内置对象</h3><ul><li>Thymeleaf提供了一些内置对象，内置对象可直接在模板中使用。这些对象是以#引用的。</li><li>使用内置对象的语法<ol><li><code>引用内置对象需要使用#</code></li><li>大部分内置对象的名称都以s结尾。如：strings、numbers、dates</li><li>常见内置对象如下<ul><li><code>#arrays</code>：数组操作的工具；</li><li><code>#aggregates</code>：操作数组或集合的工具；</li><li><code>#bools</code>：判断boolean类型的工具；</li><li><code>#calendars</code>：类似于#dates，但是是java.util.Calendar类的方法；</li><li><code>#ctx</code>：上下文对象，可以从中获取所有的thymeleaf内置对象；</li><li><code>#dates</code>：日期格式化内置对象，具体方法可以参照java.util.Date；</li><li><code>#numbers</code>： 数字格式化；#strings：字符串格式化，具体方法可以参照String，如startsWith、contains等；</li><li><code>#objects</code>：参照java.lang.Object；</li><li><code>#lists</code>：列表操作的工具，参照java.util.List；</li><li><code>#sets</code>：Set操作工具，参照java.util.Set；#maps：Map操作工具，参照java.util.Map；</li><li><code>#messages</code>：操作消息的工具。</li><li><code>更多内置对象</code>: <a href="https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#number-literals">https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#number-literals</a></li></ul></li></ol></li></ul><hr><h4 id="12-2-1-strings对象"><a href="#12-2-1-strings对象" class="headerlink" title="12.2.1 strings对象"></a>12.2.1 strings对象</h4><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220820111051440.png" alt="strings对象"></p><hr><h4 id="12-2-2-dates对象"><a href="#12-2-2-dates对象" class="headerlink" title="12.2.2 dates对象"></a>12.2.2 dates对象</h4><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/SpringBoot/image-20220820111128716.png" alt="dates对象"></p><hr><h4 id="12-2-3-numbers对象"><a href="#12-2-3-numbers对象" class="headerlink" title="12.2.3 numbers对象"></a>12.2.3 numbers对象</h4><ul><li><code>#numbers.formatDecimal(numbwe,整数位,整数位千分位标识符,小数位,小数位表示符)</code><ul><li>$</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringMVC的学习</title>
      <link href="/2022/04/23/categories/java/springmvc/"/>
      <url>/2022/04/23/categories/java/springmvc/</url>
      
        <content type="html"><![CDATA[<h1 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a>SpringMVC</h1><h2 id="1-SpringMVC概述"><a href="#1-SpringMVC概述" class="headerlink" title="1 SpringMVC概述"></a>1 SpringMVC概述</h2><ul><li><p><strong>Sring MVC</strong> 属于 <strong>SpringFrameWork</strong> 的后续产品，已经融合在<strong>Spring Web Flow</strong>里面。<strong>Spring</strong> 框架提供了构建 <strong>Web</strong> 应用程序的全功能 <strong>MVC</strong> 模块。使用 <strong>Spring</strong> 可插入的 <strong>MVC</strong> 架构，从而在使用 <strong>Spring</strong> 进行 WEB 开发时，可以选择使用 <strong>Spring</strong> 的 <strong>SpringMVC</strong> 框架或集成其他 MVC 开发框架，如 <strong>Struts1</strong>(现在一般不用)，<strong>Struts2</strong>(一般老项目使用)等等。</p></li><li><p><code>M</code>：model      模型层   DAO封装        &gt;&gt;&gt; Mybatis</p></li><li><p><code>V</code> ：view        视图层   html  css  js  jsp </p></li><li><p><code>C</code> ：controller 控制层   Servlet封装    &gt;&gt;&gt; springMVC</p></li></ul><hr><h3 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1 特点"></a>1.1 特点</h3><ul><li><strong>SpringMVC</strong> 是 <strong>spring</strong> 为展现层提供的基于 <strong>MVC</strong> 设计理念的优秀 <strong>WEB</strong> 框架,是目前最主流的 <strong>MVC</strong> 框架之一</li><li><strong>SpringMVC</strong> 通过一套注解,可以让普通的 <strong>JAVA</strong> 类成为 <strong>contrllor</strong> 控制器,无需继承 <strong>Servlet</strong>,实现了 <strong>控制层</strong> 和 <strong>Servlet</strong> 之间的解耦</li><li><strong>SpringMVC</strong> 支持 <strong>Rest</strong> 风格的URL写法</li><li><strong>SpringMVC</strong> 采用了 <strong>松耦合</strong>,<strong>可热插</strong> 的主键结构,比其他的框架更具扩展性和灵活性</li></ul><hr><h2 id="2-项目搭建"><a href="#2-项目搭建" class="headerlink" title="2 项目搭建"></a>2 项目搭建</h2><h3 id="2-1-创建war项目"><a href="#2-1-创建war项目" class="headerlink" title="2.1 创建war项目"></a>2.1 创建war项目</h3><ol><li><p>创建空项目</p></li><li><p>设置项目 <strong>maven</strong> 为本地 <strong>maven</strong>，并且设置 <strong>lombok</strong></p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220310000144396.png" alt="设置本地maven"></li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220310000153070.png" alt="设置本地maven"></li></ul></li><li><p>创建maven web module</p><ul><li>注意选择骨架为 <code>maven-archetype-webapp</code></li></ul></li><li><p>补充项目结构文件夹并且标记对应文件夹</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220310000333110.png" alt="项目结构"></li></ul></li><li><p>修改 <strong>web.xml</strong> 中的版本约束</p></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee<span class="token punctuation">"</span></span>      <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>      <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd<span class="token punctuation">"</span></span>      <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="6"><li>创建普通 <strong>Servlet</strong>,然后跳转至 <strong>JSP</strong></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">"/myServlet.do"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        req<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"first.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>resp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="7"><li>准备一个 <strong>first.jsp</strong></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">&lt;%@ page contentType="text/html;charset=UTF-8" language="java" %><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>first<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    this is first jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="8"><li>配置 <strong>Tomcat</strong> 启动运行项目</li></ol><hr><h3 id="2-2-导入jar依赖"><a href="#2-2-导入jar依赖" class="headerlink" title="2.2 导入jar依赖"></a>2.2 导入jar依赖</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--spring核心容器包--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--spring切面包--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-aspects<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--aop联盟包--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>aopalliance<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aopalliance<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--德鲁伊连接池--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>druid<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--mysql驱动--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.1.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--springJDBC包--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--spring事务控制包--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-tx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--spring orm 映射依赖--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-orm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--Apache Commons日志包--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--log4j2 日志--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>log4j-slf4j-impl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.14.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--lombok --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.18.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--spring test测试支持包--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--junit5单元测试--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.junit.jupiter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit-jupiter-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.7.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--springMVC支持包--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--jsp 和Servlet  可选--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>javax.servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.servlet.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>javax.servlet.jsp-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.3.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="2-3-配置DispatcherServlet"><a href="#2-3-配置DispatcherServlet" class="headerlink" title="2.3 配置DispatcherServlet"></a>2.3 配置DispatcherServlet</h3><blockquote><ul><li>在整个 Spring MVC 框架中，DispatcherServlet 处于核心位置，它负责协调和组织不同组件完成请求处理并返回响应工作。</li><li>DispatcherServlet 是 <code>SpringMVC统一的入口</code>，所有的请求都通过它。</li><li>DispatcherServlet 是前端控制器，<code>配置在web.xml</code> 文件中，Servlet依自已定义的具体规则拦截匹配的请求，分发到目标Controller来处理。</li><li>初始化 DispatcherServlet时，该框架在web应用程序WEB-INF目录中寻找一个名为[servlet-名称]-servlet.xml的文件，并在那里定义相关的Beans，重写在全局中定义的任何Beans</li></ul><p>作者：日常更新<br>链接：<a href="https://www.jianshu.com/p/9b7883c6a1a0">https://www.jianshu.com/p/9b7883c6a1a0</a></p></blockquote><ul><li>在 <code>web.xml</code> 中配置 <code>DispatcherServlet</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd<span class="token punctuation">"</span></span>         <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--配置DispatcherServlet --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>dispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--配置初始化参数,读取springMVC的核心配置文件的位置和名称--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>classpath:dispatcherServlet-servlet.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>load-on-startup</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>load-on-startup</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--配置dispatcherServlet的映射路径为 / 包含全部的servlet,  JSP除外--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>dispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>PS</code>：<ul><li>如果不使用 <code>init-param标签</code> ，springMVC会到一个默认路径下读取默认名称的.xml配置文件</li><li><code>默认路径</code>为：&#x2F;WEB-INF&#x2F;</li><li><code>默认配置文件名</code>为：&lt;servlet-name&gt;-servlet.xml</li><li>我们暂时 <code>不推荐这种方式</code></li></ul></li></ul><h3 id="2-4-加入SpringMVC的配置文件"><a href="#2-4-加入SpringMVC的配置文件" class="headerlink" title="2.4 加入SpringMVC的配置文件"></a>2.4 加入SpringMVC的配置文件</h3><ul><li><p>在 <code>resources</code> 下添加 <code>springmvc.xml</code></p><ul><li>&#96;&#96;&#96;&#96;xml<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans"   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   xmlns:p="http://www.springframework.org/schema/p"   xmlns:c="http://www.springframework.org/schema/c"   xmlns:util="http://www.springframework.org/schema/util"   xmlns:context="http://www.springframework.org/schema/context"   xmlns:aop="http://www.springframework.org/schema/aop"   xmlns:tx="http://www.springframework.org/schema/tx"   xsi:schemaLocation="   http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd   http://www.springframework.org/schema/util   http://www.springframework.org/schema/util/spring-util.xsd   http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context.xsd   http://www.springframework.org/schema/aop   http://www.springframework.org/schema/aop/spring-aop.xsd   http://www.springframework.org/schema/tx   http://www.springframework.org/schema/tx/spring-tx.xsd"><br><!--配置spring包扫描--><br>&lt;context:component-scan base-package&#x3D;”top.mikevane”&gt;</context:component-scan></beans><pre class="line-numbers language-none"><code class="language-none">      - &gt; &#96;视图解析器&#96;：通过配置前缀与后缀，能够简化jsp路径的书写，2. 添加log4j2.xml   - &#96;&#96;&#96;&#96;xml     &lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;     &lt;Configuration status&#x3D;&quot;INFO&quot;&gt;         &lt;Appenders&gt;             &lt;Console name&#x3D;&quot;Console&quot; target&#x3D;&quot;SYSTEM_OUT&quot;&gt;                 &lt;PatternLayout pattern&#x3D;&quot;%d&#123;YYYY-MM-dd HH:mm:ss&#125; [%t] %-5p %c&#123;1&#125;：%L - %msg%n&quot; &#x2F;&gt;             &lt;&#x2F;Console&gt;         &lt;&#x2F;Appenders&gt;         &lt;Loggers&gt;             &lt;Root level&#x3D;&quot;info&quot;&gt;                 &lt;AppenderRef ref&#x3D;&quot;Console&quot; &#x2F;&gt;             &lt;&#x2F;Root&gt;         &lt;&#x2F;Loggers&gt;     &lt;&#x2F;Configuration&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><hr><h3 id="2-5-编写controller层处理器"><a href="#2-5-编写controller层处理器" class="headerlink" title="2.5 编写controller层处理器"></a>2.5 编写controller层处理器</h3><ul><li>如果在类与方法上都加上了 <code>@RequestMapping</code> 注解，那么访问的路径就为类+方法的@RequestMapping路径<ul><li>例如类上的 <code>@RequestMapping</code> 为mikevane，方法上的 <code>@RequestMapping</code> 为firstController，那么访问路径就为 <code>/mikevane/firstController</code></li></ul></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/mikevane"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyController</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     *     * @return String用来表明要跳转的页面路径     */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/firstController.do"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">firstController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"firstController"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"/first.jsp"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>如果将 <code>first.jsp</code> 放到 <code>WEB-INF 下的 view</code> 文件夹，那转发的路径为： <code>/WEB-INF/first.jsp</code></li></ul><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220807160654890.png" alt="放置到view中"></p><ul><li>如果 view 中有很多文件，不可能每次都把 WEB-INF&#x2F;view 这样的前缀，以及 jsp 这样的后缀 <code>重复书写</code>，所以就可以在 <code>springmvc.xml</code> 中配置 <code>视图解析器</code> 简化书写</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--视图解析器--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 指定前缀 --></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prefix<span class="token punctuation">"</span></span>  <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/WEB-INF/view/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 指定后缀 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>suffix<span class="token punctuation">"</span></span>  <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.jsp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>于是可以将 <code>返回路径</code> 简写为</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"firstController"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">firstController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"firstController"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 前缀和后缀都省略</span>    <span class="token keyword">return</span> <span class="token string">"first"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="3-执行流程"><a href="#3-执行流程" class="headerlink" title="3 执行流程"></a>3 执行流程</h2><h3 id="3-1-流程"><a href="#3-1-流程" class="headerlink" title="3.1 流程"></a>3.1 流程</h3><ul><li>时间为从上往下</li></ul><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/550E7C9ED67F6D1900AB77E9C1CB5740.png" alt="550E7C9ED67F6D1900AB77E9C1CB5740"  /><hr><h3 id="3-2-执行逻辑"><a href="#3-2-执行逻辑" class="headerlink" title="3.2 执行逻辑"></a>3.2 执行逻辑</h3><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/56951B4425C8BEF2E45B772D9E9D9380.png" alt="执行的逻辑顺序"></p><ol><li><code>DispatcherServlet</code>：前端控制器</li></ol><ul><li>用户请求到达前端控制器，它就相当于 mvc 模式中的 c，dispatcherServlet 是整个流程控制的中心，由 它调用其它组件处理用户的请求，dispatcherServlet 的存在降低了组件之间的耦合性。</li></ul><ol start="2"><li><blockquote><p><code>HandlerMapping</code>：处理器映射器（三大组件）</p><ul><li>HandlerMapping 负责根据用户请求找到 Handler 即处理器，SpringMVC 提供了不同的映射器实现不同的 映射方式，例如：配置文件方式，实现接口方式，注解方式等。</li></ul></blockquote></li><li><p><code>Handle</code>r：处理器 (自己定义的Controller处理单元)</p></li></ol><ul><li>它就是我们开发中要编写的具体业务控制器。由 DispatcherServlet 把用户请求转发到 Handler。由 Handler 对具体的用户请求进行处理。</li></ul><ol start="4"><li><blockquote><p><code>HandlAdapter</code>：处理器适配器（三大组件）</p><ul><li>通过 HandlerAdapter 对处理器进行执行，这是适配器模式的应用，通过扩展适配器可以对更多类型的处理器进行执行</li></ul></blockquote></li><li><blockquote><p><code>View Resolver</code>：视图解析器（三大组件）</p><ul><li>View Resolver 负责将处理结果生成 View 视图，View Resolver 首先根据逻辑视图名解析成物理视图名 即具体的页面地址，再生成 View 视图对象，最后对 View 进行渲染将处理结果通过页面展示给用户。</li></ul></blockquote></li><li><p><code>View</code>：视图</p><ul><li>SpringMVC 框架提供了很多的 View 视图类型的支持，包括：jstlView、freemarkerView、pdfView等。我们最常用的视图就是 jsp。 一般情况下需要通过页面标签或页面模版技术将模型数据通过页面展示给用户，需要由程序员根据业务需求开 发具体的页面。</li></ul></li><li><p><code>&lt;mvc:annotation-driven&gt;</code>说明</p><ul><li>在 SpringMVC 的各个组件中，<code>处理器映射器、处理器适配器、视图解析器称为 SpringMVC 的三大组件</code>。</li><li>使 用 <code>&lt;mvc:annotation-driven&gt;</code> 自动加载 <strong>RequestMappingHandlerMapping</strong> （处理映射器） 和 <strong>RequestMappingHandlerAdapter</strong> （ 处 理 适 配 器 ） ， 可 用 在 SpringMVC.xml 配 置 文 件 中 使 用 <code>&lt;mvc:annotation-driven&gt;</code> 替代注解 <code>处理器和适配器</code> 的配置</li></ul></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">   <span class="token comment">&lt;!--开启MVC注解驱动，自动配置处理器映射器与适配器--></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>annotation-driven</span> <span class="token punctuation">/></span></span>   <span class="token comment">&lt;!--配置处理器映射器--></span><span class="token comment">&lt;!--    &lt;bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>--></span>      <span class="token comment">&lt;!--配置处理器适配器--></span>   <span class="token comment">&lt;!--&lt;bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><blockquote><ol><li><p>开启 <code>&lt;mvc:annotation-driven /&gt;</code> 后，自动配置处理器映射器与适配器</p></li><li><p>当配置了mvc:annotation-driven&#x2F;后，Spring就知道了我们启用注解驱动。然后Spring通过context:component-scan&#x2F;标签的配置，会自动为我们将扫描到的@Component，@Controller，@Service，@Repository等注解标记的组件注册到工厂中，来处理我们的请求,这个时候接收返回json数据、参数验证、统一异常等功能</p></li></ol></blockquote></li></ul><hr><h4 id="3-2-1-静态资源放行"><a href="#3-2-1-静态资源放行" class="headerlink" title="3.2.1 静态资源放行"></a>3.2.1 静态资源放行</h4><ul><li><code>静态资源</code>：类似于js或者css等类型的文件，保持不变的资源</li><li><code>静态资源放行</code>：服务器在遇到请求静态资源时，不匹配对应的 <strong>controller</strong>，而直接放行请求去对应路径找相关文件</li><li><code>配置静态资源放行</code><ul><li><code>mapping</code>：映射的 url 路径（浏览器请求的 url）</li><li><code>location</code>：需要映射的静态资源所在目录地址</li><li>在 <code>springmvc.xml</code> 中配置以下内容</li></ul></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--静态资源放行--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>resources</span> <span class="token attr-name">mapping</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/**<span class="token punctuation">"</span></span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>resources</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>resources</span> <span class="token attr-name">mapping</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/img/**<span class="token punctuation">"</span></span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/img/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>resources</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>resources</span> <span class="token attr-name">mapping</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/css/**<span class="token punctuation">"</span></span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/css/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>resources</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="4-控制请求方式"><a href="#4-控制请求方式" class="headerlink" title="4 控制请求方式"></a>4 控制请求方式</h2><h3 id="4-1-RequestMapping控制请求方式"><a href="#4-1-RequestMapping控制请求方式" class="headerlink" title="4.1 @RequestMapping控制请求方式"></a>4.1 @RequestMapping控制请求方式</h3><ul><li>method属性可以控制请求的方式,值为RequestMethod的枚举值</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/mikevane"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"firstController"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span>GET<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">firstController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"firstController"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"first"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>访问路径 <a href="http://localhost:8080/springmvc_01_war_exploded/mikevane/firstController">http://localhost:8080/springmvc_01_war_exploded/mikevane/firstController</a></p></li><li><p>结果显示正常</p></li><li><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220808102428025.png" alt="正常访问"></p></li></ul><hr><h3 id="4-2-RequestMapping控制请求参数params和请求头headers"><a href="#4-2-RequestMapping控制请求参数params和请求头headers" class="headerlink" title="4.2 @RequestMapping控制请求参数params和请求头headers"></a>4.2 @RequestMapping控制请求参数params和请求头headers</h3><ul><li><code>param</code>：表示请求中必须包含名为param的参数</li><li><code>!param</code>：表示请求中不能包含名为param的参数</li><li><code>param = value</code>：表示请求中包含名为param的参数,但是值必须是value</li><li><code>param != value</code>：表示请求中包含名为param的参数,但是值不能是value</li><li><code>&#123;&quot;param1&quot;,&quot;param2=value&quot;&#125;</code>：可以将对于多个参数的要求写入数组</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/testRequest2"</span><span class="token punctuation">,</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"username!=root"</span><span class="token punctuation">,</span><span class="token string">"password"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testRequest2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"testRequest2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/testRequest3"</span><span class="token punctuation">,</span> headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"!Connection"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testRequest3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"testRequest3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>如果访问 <code>testRequest2</code>，url中没有 <strong>password</strong>，那么就会出现报错<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220808110442780.png" alt="出现报错"></li></ul></li><li>如果访问 <code>testRequest3</code>，请求头出现了 <strong>Connection</strong>，则也会出现报错<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220808110714996.png" alt="控制请求头"></li></ul></li></ul><hr><h3 id="4-3-PathVariable注解和RESTful风格的支持"><a href="#4-3-PathVariable注解和RESTful风格的支持" class="headerlink" title="4.3 @PathVariable注解和RESTful风格的支持"></a>4.3 @PathVariable注解和RESTful风格的支持</h3><ul><li><code>普通形式的url</code><ul><li>*****&#x2F;contextPath&#x2F;aaa.do</li><li>*****&#x2F;contextPath&#x2F;aaa.jsp</li><li>*****&#x2F;contextPath&#x2F;aaa.html</li><li>*****&#x2F;contextPath&#x2F;css&#x2F;aaa.css</li><li>*****&#x2F;contextPath&#x2F;js&#x2F;aaa.js</li><li>*****&#x2F;contextPath&#x2F;aaa.do?id&#x3D;10&amp;username&#x3D;root</li></ul></li><li><code>restFul风格的url</code><ul><li>*****&#x2F;contextPath&#x2F;aaa&#x2F;10&#x2F;root</li><li>*****&#x2F;contextPath&#x2F;aaa</li></ul></li></ul><hr><ul><li><code>示例</code>：测试 <code>restFul风格的url</code></li><li><code>controller层</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/testPathVariable/&#123;id&#125;/&#123;username&#125;"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testPathVariable</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> id<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> username<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"id="</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"username="</span><span class="token operator">+</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"testPathVariable"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>这里的访问路径为：<code>***/testPathVariable/&#123;id&#125;/&#123;username&#125;</code></p></li><li><blockquote><p><code>注意</code>：</p><ul><li><code>@PathVariable</code> 里面的 <strong>value</strong> 值要与 <code>@RequestMapping</code> 里对应大括号的变量名一致（比如id或者username）</li><li>方法的<code>形参名</code>可随意取，这里的形参名与请求参数的变量名一致只是因为可读性更强</li></ul></blockquote></li><li><p>这里还可以把形参类型改为 <code>Integer</code>，框架会 <code>自动进行类型识别与转换</code></p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220809004103639.png" alt="修改参数类型"></li></ul></li></ul><hr><ul><li><p><code>RESTFUL</code></p><ul><li>是一种网络应用程序的设计风格和开发方式，基于HTTP，可以使用<code> XML</code> 格式定义或 <code>JSON</code> 格式定义</li><li>适用于移动互联网厂商作为业务接口的场景，实现第三方 <code>OTT</code> 调用移动网络资源的功能，动作类型为新增、变更、删除所调用资源</li></ul></li><li><p><code>ESTFUL特点</code>包括：</p><ol><li>每一个URI代表1种资源；</li><li>客户端使用GET、POST、PUT、DELETE4个表示操作方式的动词对服务端资源进行操作：GET用来获取资源，POST用来新建资源（也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源；</li><li>通过操作资源的表现形式来操作资源；</li><li>资源的表现形式是XML或者HTML；</li><li>客户端与服务端之间的交互在请求之间是无状态的，从客户端到服务端的每个请求都必须包含理解请求所必需的信息</li></ol></li><li><p><code>针对上述的第二个特点进行拓展</code>：</p><ul><li>简单的说,就是我们在访问资源时,可以通过这四个状态来表示对于资源的不同操作,这四个状态表现为我们请求的四种方式</li><li>&#x2F;controller&#x2F;1  HTTP GET :得到id为1 的资源</li><li>&#x2F;controller&#x2F;1  HTTP DELETE :删除id为1的资源</li><li>&#x2F;controller&#x2F;1  HTTP PUT :更新id为1 的资源</li><li>&#x2F;controller&#x2F;1  HTTP POST :增加id为1 的资源</li><li>更简单地说：在访问同一个url的时候,通过不同的请求方式,对应到不同的controller处理单元</li></ul></li></ul><hr><ul><li><code>测试不同请求方式</code></li><li><code>GET与POST Controller代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"testRestful/&#123;id&#125;"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span>GET<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testGET</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"testGet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"id="</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"testRestful/&#123;id&#125;"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span>POST<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testPOST</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"testPOST"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"id="</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>GET和POST jsp代码</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>testRestful/10<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getButton<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>testRestful/10<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getButton<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><ul><li><code>PUT与DELETE Controller层代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestRestFul</span> <span class="token punctuation">&#123;</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"testRestful/&#123;id&#125;"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span>PUT<span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testPUT</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"testPUT"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"id="</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"testRestful/&#123;id&#125;"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span>DELETE<span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testDELETE</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"testDELETE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"id="</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>因为 <code>form标签</code> 中的 <code>method属性</code> 不提供 <code>PUT或DELETE</code>，所以需要使用其他方法来 <code>转化POST请求</code><ol><li>在 <code>form标签</code> 中加入：&lt;input type&#x3D;”hidden” name&#x3D;”_method” value&#x3D;”DELETE”&gt;</li><li>将 <code>Controller</code> 改为 <code>RestController</code>，这样返回的字符串，浏览器就可以作为<code>字符串处理</code>，而不是资源</li><li>在 <code>web.xml</code> 中配置请求 <code>过滤器</code>（hiddenHttpMethodFilter）</li></ol></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--配置hiddenHttpMethodFilter ,将POST请求转换为PUT或者DELETE请求--></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>hiddenHttpMethodFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>hiddenHttpMethodFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220809094702243.png" alt="转换原理"></li></ul><hr><ul><li><code>PUT与DELETE JSP代码</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>testRestful/10<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_method<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PUT<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getButton<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>testRestful/10<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_method<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DELETE<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getButton<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>测试点击对应的按钮，控制台返回结果为：</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">testPUTid<span class="token operator">=</span><span class="token number">10</span>testDELETEid<span class="token operator">=</span><span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>说明对PUT和DELETE的处理成功</li></ul><hr><h2 id="5-获取请求参数"><a href="#5-获取请求参数" class="headerlink" title="5 获取请求参数"></a>5 获取请求参数</h2><h3 id="5-1-紧耦合方式参数注入（了解）"><a href="#5-1-紧耦合方式参数注入（了解）" class="headerlink" title="5.1 紧耦合方式参数注入（了解）"></a>5.1 紧耦合方式参数注入（了解）</h3><ul><li><code>紧耦合方式参数注入</code><ul><li>使用传统的HTTPServletRequest对象获取参数</li><li>需要导入jar包：javax.servlet</li></ul></li><li><code>controller层代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/getParamByRequest"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getParam1</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> username <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> password <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"username:"</span><span class="token operator">+</span>username<span class="token operator">+</span><span class="token string">"  password:"</span><span class="token operator">+</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"getParamSuccess"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>jsp代码</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getParamByRequest<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>paramSubmit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="5-2-松耦合方式参数注入"><a href="#5-2-松耦合方式参数注入" class="headerlink" title="5.2 松耦合方式参数注入"></a>5.2 松耦合方式参数注入</h3><ul><li><code>松耦合方式参数注入</code><ul><li>不使用传统的HTTPServletRequest对象获取参数</li><li>通过SpringMVC的框架功能，<code>自动转换参数</code></li><li>不需要导入额外jar包</li><li><code>注意</code>：<ul><li>如果在形参<code>不加入任何注解</code>的情况下，<code>处理单元参数列表中的参数名要与请求中的参数名一致</code></li><li>可以使用 <code>@RequestParam</code> 来进行指定对应的参数名，这时候 <code>处理单元参数的参数名可以与请求的参数名不一致</code></li><li>框架可以进行 <code>类型自动转换</code>，比如接收的参数类型是Integer，那么处理器适配器会将接收到的数据进行数据类型转换</li></ul></li></ul></li><li><code>controller层</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/getParamByArgName"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getParam2</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"pwd"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"username:"</span><span class="token operator">+</span>username<span class="token operator">+</span><span class="token string">"  password:"</span><span class="token operator">+</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"getParamSuccess"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>jsp代码</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getParamByArgName<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>paramSubmit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="5-3-POJO接收参数"><a href="#5-3-POJO接收参数" class="headerlink" title="5.3 POJO接收参数"></a>5.3 POJO接收参数</h3><ul><li><code>使用POJO接收参的注意事项</code><ul><li>提交的参数名必须和POJO的属性名保持一致（假如提交的name为pname，那么实体类中属性的名字也要为pname才能接收数据）</li><li>springmvc底层通过 <code>反射</code> 给参数列表的属性赋值（处理器适配器会自动从Request中解析数据）</li><li>通过 <code>set方法设置属性值</code> 的,不是直接通过操作属性</li><li>POJO的属性一定要有set方法,要不然就会接收失败</li></ul></li><li><code>示例</code>：</li><li><code>pojo代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> pname<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> page<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> gender<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hobby<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> birthdate<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>controller层代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/getDataByPojo"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getDataByPojo</span><span class="token punctuation">(</span><span class="token class-name">Person</span> p<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>JSP代码</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getDataByPojo<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>年龄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>page<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>性别:        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>男        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>女    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>爱好        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 篮球        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 足球        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 羽毛球    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>生日    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>birthdate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="5-4-日期类型转换"><a href="#5-4-日期类型转换" class="headerlink" title="5.4 日期类型转换"></a>5.4 日期类型转换</h3><h4 id="5-4-1-注解方式（推荐）"><a href="#5-4-1-注解方式（推荐）" class="headerlink" title="5.4.1 注解方式（推荐）"></a>5.4.1 注解方式（推荐）</h4><ul><li><code>@DateTimeFormat(pattern = &quot;yyyy-MM-dd&quot;)</code>：可以用于 <code>方法参数列表和类的属性</code> 上</li><li><code>@DateTimeFormat 用于类的属性</code></li><li><code>pojo代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> pname<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> page<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> gender<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hobby<span class="token punctuation">;</span>    <span class="token annotation punctuation">@DateTimeFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> birthdate<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>controller代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/getDataByPojo"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getDataByPojo</span><span class="token punctuation">(</span><span class="token class-name">Person</span> p<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>@DateTimeFormat 用于 方法参数列表</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/getDataByPojo"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getDataByPojo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@DateTimeFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span> <span class="token class-name">Date</span> birthdate<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>birthdate<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="5-4-2-配置转换器"><a href="#5-4-2-配置转换器" class="headerlink" title="5.4.2 配置转换器"></a>5.4.2 配置转换器</h4><ul><li>告诉 <strong>springmvc</strong> 在遇到 &#96;&#96;String类转为Date类&#96; 的时候，使用 <strong>类型转换器</strong></li><li><code>实现步骤</code></li></ul><ol><li>新建类，实现<code>Converter接口</code></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StringToDateConverter</span> <span class="token keyword">implements</span> <span class="token class-name">Converter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Date</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">SimpleDateFormat</span> dateFormat<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Date</span> <span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">String</span> source<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Date</span> date <span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            date <span class="token operator">=</span> dateFormat<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ParseException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"日期转换异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> date<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>在 <code>springmvc.xml</code> 中配置数据转换工厂</li></ol><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220809161959075.png" alt="配置数据转换工厂"></li></ul><hr><h3 id="5-5-List集合接收参数"><a href="#5-5-List集合接收参数" class="headerlink" title="5.5 List集合接收参数"></a>5.5 List集合接收参数</h3><ul><li><blockquote><p>注入单独的对象逻辑同 <code>List集合接收参数</code>，后面不再多阐述</p></blockquote></li><li><p>因为 springmvc 支持的问题，List参数不能直接放到方法参数列表</p><ol><li>将List对应的对象作为 <code>另一个类的属性</code> 进行传入</li><li>利用 <code>Ajax + JSON</code> 进行传入</li></ol></li><li><p>这里 <code>使用第一种方式</code> 进行解决</p></li><li><p><code>pojo代码</code></p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> pname<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> page<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> gender<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hobby<span class="token punctuation">;</span>    <span class="token annotation punctuation">@DateTimeFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> birthdate<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Pet</span><span class="token punctuation">></span></span> pets<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>Controller层代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/getDataByPojo"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getDataByPojo</span><span class="token punctuation">(</span><span class="token class-name">Person</span> p<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getPets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>JSP代码（仅书写List相关的代码）</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">宠物List:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>    宠物1: 名字:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pets[0].petName<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>类型:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pets[0].petType<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>    宠物2: 名字:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pets[1].petName<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>类型:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pets[1].petType<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试输入</code></li></ul><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220809164050529.png" alt="测试输入"></p><ul><li>控制台显示：</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Person</span><span class="token punctuation">(</span>pname<span class="token operator">=</span>asd<span class="token punctuation">,</span> page<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> gender<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> hobby<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> birthdate<span class="token operator">=</span><span class="token class-name">Tue</span> <span class="token class-name">Sep</span> <span class="token number">21</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1999</span><span class="token punctuation">,</span> pets<span class="token operator">=</span><span class="token punctuation">[</span><span class="token class-name">Pet</span><span class="token punctuation">(</span>petName<span class="token operator">=</span>tom<span class="token punctuation">,</span> petType<span class="token operator">=</span>cat<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Pet</span><span class="token punctuation">(</span>petName<span class="token operator">=</span>jerry<span class="token punctuation">,</span> petType<span class="token operator">=</span>mouse<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token class-name">Pet</span><span class="token punctuation">(</span>petName<span class="token operator">=</span>tom<span class="token punctuation">,</span> petType<span class="token operator">=</span>cat<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Pet</span><span class="token punctuation">(</span>petName<span class="token operator">=</span>jerry<span class="token punctuation">,</span> petType<span class="token operator">=</span>mouse<span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>结果显示正确</li></ul><hr><h3 id="5-6-Map集合接收参数"><a href="#5-6-Map集合接收参数" class="headerlink" title="5.6 Map集合接收参数"></a>5.6 Map集合接收参数</h3><ul><li><code>pojo代码</code>：加入类型为map的属性</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">   <span class="token comment">//这里的String对应后面jsp中name中petMap的key类型</span><span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Pet</span><span class="token punctuation">></span></span> petMap<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><code>Controller层</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/getDataByPojo"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getDataByPojo</span><span class="token punctuation">(</span><span class="token class-name">Person</span> p<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getPetMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>JSP代码</code>：注意，这里的name中的 petMap 的 key 可以任意取值（这里取值a和b只是为了测试）</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">宠物Map:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>    宠物1: 名字:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>petMap[<span class="token punctuation">'</span>a<span class="token punctuation">'</span>].petName<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>类型:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>petMap[<span class="token punctuation">'</span>a<span class="token punctuation">'</span>].petType<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>    宠物2: 名字:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>petMap[<span class="token punctuation">'</span>b<span class="token punctuation">'</span>].petName<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>类型:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>petMap[<span class="token punctuation">'</span>b<span class="token punctuation">'</span>].petType<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="5-7-请求参数中文乱码问题"><a href="#5-7-请求参数中文乱码问题" class="headerlink" title="5.7 请求参数中文乱码问题"></a>5.7 请求参数中文乱码问题</h3><h4 id="5-7-1-GET乱码问题"><a href="#5-7-1-GET乱码问题" class="headerlink" title="5.7.1 GET乱码问题"></a>5.7.1 GET乱码问题</h4><ul><li>在 <code>tomcat根目录/conf/server.xml</code> 中的 &lt;Connector&gt; 标签上加入属性 <code>URIEncoding=&quot;utf-8&quot;</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Connector</span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>8080<span class="token punctuation">"</span></span> <span class="token attr-name">protocol</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>HTTP/1.1<span class="token punctuation">"</span></span>           <span class="token attr-name">connectionTimeout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20000<span class="token punctuation">"</span></span>           <span class="token attr-name">redirectPort</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>8443<span class="token punctuation">"</span></span> <span class="token attr-name">URIEncoding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h4 id="5-7-2-POST乱码问题"><a href="#5-7-2-POST乱码问题" class="headerlink" title="5.7.2 POST乱码问题"></a>5.7.2 POST乱码问题</h4><ul><li><p>因为 POST 方式数据是单独打包的</p></li><li><p>在 <code>web.xml</code> 中配置 <code>编码过滤器</code></p></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--Spring 中提供的字符编码过滤器--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>encFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>org.springframework.web.filter.CharacterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>encoding<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>utf-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>encFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="6-常见注解"><a href="#6-常见注解" class="headerlink" title="6 常见注解"></a>6 常见注解</h2><h3 id="6-1-RequestMapping"><a href="#6-1-RequestMapping" class="headerlink" title="6.1 @RequestMapping"></a>6.1 @RequestMapping</h3><ul><li><code>作用</code>：<ul><li>用于建立请求 URL 和处理请求方法之间的对应关系</li></ul></li><li><code>出现位置</code>：         <ul><li><code>类上</code>：请求 URL 的第一级访问目录。此处不写的话，就相当于应用的根目录。写的话需要以&#x2F;开头</li><li><code>方法上</code>： 请求 URL 的第二级访问目录</li></ul></li><li><code>属性</code>：<ul><li><code>value</code>：用于指定请求的 URL。它和 path 属性的作用是一样的。</li><li><code>method</code>：用于指定请求的方式。</li><li><code>params</code>(了解)：用于指定限制请求参数的条件。它支持简单的表达式。要求请求参数的 key 和 value 必须和 配置的一模一样。</li><li><code>headers</code>(了解)：用于指定限制请求消息头的条件</li></ul></li></ul><hr><h3 id="6-2-RequestParam"><a href="#6-2-RequestParam" class="headerlink" title="6.2 @RequestParam"></a>6.2 @RequestParam</h3><ul><li><p><code>作用</code>：</p><ul><li>把请求中指定名称的参数给控制器中的形参赋值。</li></ul></li><li><p><code>属性</code>：</p><ul><li><code>value</code>：请求参数中的名称。</li><li><code>required</code>：请求参数中是否必须提供此参数。默认值：true。表示必须提供，如果不提供将报错。</li></ul></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/getRequestParam"</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getRequestParam</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token class-name">String</span> uname<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"age"</span><span class="token punctuation">,</span>required<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token class-name">Integer</span> age<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>username<span class="token operator">+</span><span class="token string">","</span><span class="token operator">+</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="6-3-PathVariable"><a href="#6-3-PathVariable" class="headerlink" title="6.3 @PathVariable"></a>6.3 @PathVariable</h3><ul><li><p><code>Restful的简介</code> ：</p><ul><li>REST（英文：Representational State Transfer，简称 REST）restful是一种软件架构风格、设计风格，而不是标准，只是提供了一组设计原则和约束条件。它主要用于客户端和服务器交互类的软件。基于这个风格设计的软件可以更简洁，更有层次，更易于实现缓存等机制。</li></ul></li><li><p><code>Restful的优点</code></p><ul><li>它结构清晰、符合标准、易于理解、扩展方便，所以正得到越来越多网站的采用。</li></ul></li><li><p><code>作用</code>：</p><ul><li>用于绑定 url 中的占位符。例如：请求 url 中 &#x2F;delete&#x2F;{id}，这个{id}就是 url 占位符。 url 支持占位符是 spring3.0 之后加入的。是 springmvc 支持 rest 风格 URL 的一个重要标志。</li></ul></li><li><p><code>属性</code>：</p><ul><li>value：用于指定 url 中占位符名称。</li><li>required：是否必须提供占位符。</li></ul></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/testPathVariable/&#123;id&#125;/&#123;username&#125;"</span><span class="token punctuation">)</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testPathVariable</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> username<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"id:"</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"username:"</span><span class="token operator">+</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"testPathVariable1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="6-4-RequestHeader（了解）"><a href="#6-4-RequestHeader（了解）" class="headerlink" title="6.4 @RequestHeader（了解）"></a>6.4 @RequestHeader（了解）</h3><ul><li><p><code>作用</code>：</p><ul><li>用于获取请求消息头。</li></ul></li><li><p><code>属性</code>：</p><ul><li><code>value</code>：提供消息头名称</li><li><code>required</code>：是否必须有此消息头</li></ul></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/getRequestHeader"</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getRequestHeader</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestHeader</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"Accept"</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token class-name">String</span> requestHeader<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="6-5-CookieValue（了解）"><a href="#6-5-CookieValue（了解）" class="headerlink" title="6.5 @CookieValue（了解）"></a>6.5 @CookieValue（了解）</h3><ul><li><p><code>作用</code>：</p><ul><li>用于把指定 cookie 名称的值传入控制器方法参数。</li></ul></li><li><p><code>属性</code>：</p><ul><li><p><code>value</code>：指定 cookie 的名称。</p></li><li><p><code>required</code>：是否必须有此 cookie</p></li></ul></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/getCookie"</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getCookie</span><span class="token punctuation">(</span><span class="token annotation punctuation">@CookieValue</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"JSESSIONID"</span><span class="token punctuation">,</span>required<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span> cookieValue<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cookieValue<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="7-响应处理"><a href="#7-响应处理" class="headerlink" title="7 响应处理"></a>7 响应处理</h2><ul><li>以前我们是自己在Servlet中使用response对象来完成响应的，那么在SpringMVC中如何响应请求的处理结果呢?</li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220810111429274.png" alt="相应类型"></li></ul><hr><h3 id="7-1-单元方法返回值为void"><a href="#7-1-单元方法返回值为void" class="headerlink" title="7.1 单元方法返回值为void"></a>7.1 单元方法返回值为void</h3><ul><li><code>例子</code>：如果按照之前的方法，直接返回void</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"testVoid"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testVoid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"void controller"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在浏览器访问相应的地址后会发现，框架会自动去找和自己控制单元名称一致的页面展示 ( <code>testVoid.jsp </code>)（这里是因为配置了 <code>视图解析器</code> 才造成了404），但其实我只是想返回 void<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220810112054547.png" alt="访问失败"></li></ul></li><li>关闭了对应的 <code>视图解析器</code>，重新访问该地址仍然会出现错误，但是这次错误为 <code>500</code><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220810112514206.png" alt="出现500错误"></li></ul></li></ul><hr><h3 id="7-2-转发和重定向"><a href="#7-2-转发和重定向" class="headerlink" title="7.2 转发和重定向"></a>7.2 转发和重定向</h3><h4 id="7-2-1-紧耦合方式（了解）"><a href="#7-2-1-紧耦合方式（了解）" class="headerlink" title="7.2.1 紧耦合方式（了解）"></a>7.2.1 紧耦合方式（了解）</h4><ul><li><p><code>重定向的特点</code>：redirect</p><ol><li>地址栏发生变化</li><li>重定向可以访问其他站点(服务器)的资源</li><li>重定向是两次请求，不能使用request对象来共享数据</li></ol></li><li><p><code>转发的特点</code>：forward</p><ol><li>转发地址栏路径不变</li><li>转发只能访问当前服务器下的资源</li><li>转发是一次请求，可以使用request对象来共享数据</li></ol></li><li><p><code>请求转发</code></p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"demo1"</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDemo1</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>     <span class="token comment">// 请求转发</span>     request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/forwardPage.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>相应重定向</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"demo1"</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDemo1</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>     <span class="token comment">// 响应重定向</span>     response<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getContextPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"/redirectPage.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>单元方法的返回值类型设置void。因为使用response对象在单元方法中直接对此次请求进行了响应，不再通过DispatcherServlet了，既然已经响应了，就不需要再给DispatcherServlet返回值了。在单元方法上声明HttpServletResponse形参，来接收此次请求的response对象</li></ul><h4 id="7-2-2-forward关键字"><a href="#7-2-2-forward关键字" class="headerlink" title="7.2.2 forward关键字"></a>7.2.2 forward关键字</h4><ul><li><code>forward</code>: 关键字,就是请求转发</li><li><code>注意</code><ul><li>返回字符串告诉 <code>DispatcherServlet</code> 跳转的路径</li></ul><ul><li>在路径之前放上一个 <code>forward</code></li></ul><ul><li>如果路径前的关键字是forward,那么 <code>可以省略</code> 不写（即下面的forward可以省略）</li></ul></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"demo2"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testDemo2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//return "forward:/forwardPage.jsp";</span>    <span class="token keyword">return</span> <span class="token string">"/forwardPage.jsp"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="7-2-3-redirect关键字"><a href="#7-2-3-redirect关键字" class="headerlink" title="7.2.3 redirect关键字"></a>7.2.3 redirect关键字</h4><ul><li><p><code>redirect</code>：关键字,就是重定向</p></li><li><p><code>注意</code></p><ul><li>返回字符串告诉 <code>DispatcherServlet </code>跳转的路径</li></ul><ul><li>在路径之前放上一个redirect</li></ul><ul><li>如果路径前的关键字是redirect,那么 <code>不可以省略</code></li><li><code>/表示当前项目</code>下.这里不需要项目的上下文路径</li></ul></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"demo3"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testDemo3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">"redirect:/redirectPage.jsp"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="7-2-4-View视图转发和重定向"><a href="#7-2-4-View视图转发和重定向" class="headerlink" title="7.2.4 View视图转发和重定向"></a>7.2.4 View视图转发和重定向</h4><ul><li><code>请求转发</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"demo4"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">View</span> <span class="token function">testDemo4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//请求转发</span>    <span class="token class-name">View</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InternalResourceView</span><span class="token punctuation">(</span><span class="token string">"/forwardPage.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> view<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>重定向</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"demo4"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">View</span> <span class="token function">testDemo4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//重定向</span>    <span class="token class-name">View</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedirectView</span><span class="token punctuation">(</span><span class="token string">"redirectPage.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> view<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>RedirectView中所做的操作，最终的实现是在renderMergedOutputModel中完成实现的，简单来说RedirectView实现了链接的重定向，并且将数据保存到FlashMap中，这样在跳转后的链接中可以获取一些数据</li></ul><hr><h4 id="7-2-5-ModelAndView转发重定向"><a href="#7-2-5-ModelAndView转发重定向" class="headerlink" title="7.2.5 ModelAndView转发重定向"></a>7.2.5 ModelAndView转发重定向</h4><ul><li><code>请求转发</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"demo5"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">testDemo5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">ModelAndView</span> modelAndView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//请求转发</span>    <span class="token comment">//modelAndView.setViewName("forward:/forwardPage.jsp");</span>    modelAndView<span class="token punctuation">.</span><span class="token function">setView</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InternalResourceView</span><span class="token punctuation">(</span><span class="token string">"forwardPage.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> modelAndView<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>重定向</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"demo5"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">testDemo5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ModelAndView</span> modelAndView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// modelAndView.setViewName("redirect:/redirectPage.jsp");</span>    modelAndView<span class="token punctuation">.</span><span class="token function">setView</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RedirectView</span><span class="token punctuation">(</span><span class="token string">"redirectPage.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> modelAndView<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>ModelAndView</code> 中的 <code>Model</code> 代表模型，<code>View</code> 代表视图，这个名字就很好地解释了该类的作用</li><li><code>业务处理器</code> 调用模型层处理完用户请求后，把<code>结果数据</code>存储在该类的 <strong>model</strong> 属性中，把<code>要返回的视图信息</code>存储在该类的 <strong>view</strong> 属性中，然后让该ModelAndView返回该Spring MVC框架</li></ul><hr><h4 id="7-2-6-ResponseBody-响应-json-数据"><a href="#7-2-6-ResponseBody-响应-json-数据" class="headerlink" title="7.2.6 @ResponseBody 响应 json 数据"></a>7.2.6 @ResponseBody 响应 json 数据</h4><ul><li><code>为什么使用@ResponseBody</code><ul><li>当浏览器发起一个ajax请求给服务器，服务器调用对应的单元方法处理ajax请求。而ajax的请求在被处理完成后，其处理结果需要直接响应。而目前我们在单元方法中响应ajax请求，使用的是response对象，需要我们自己将要响应的数据转换为json字符串响应，比较麻烦，而<code>我们一直希望在单元方法中无论是否是ajax请求，都使用return语句来完成资源的响应</code>，怎么办？</li><li>既然我们希望使用单元方法的返回值来响应ajax请求的处理结果，而目前DispatcherServlet的底层会将单元方法的返回值按照请求转发或者重定向来处理，<code>所以就需要我们告诉DispatcherServlet，单元方法的返回值不要按照请求转发或者重定向处理，而是按照直接响应处理，将单元方法的返回值直接响应给浏览器</code></li></ul></li><li><code>@ResponseBody的作用</code><ol><li>方法的返回值不再作为界面跳转依据，而是直接作为返回的数据</li><li>将方法的返回的数据 <code>自动使用ObjectMapper转换为JSON</code></li></ol></li></ul><ol><li><code>导入jackson的依赖</code></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fasterxml.jackson.core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jackson-databind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.12.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>声明单元方法处理ajax请求，并在单元方法上 <code>新增注解@ResponseBody</code>（Person对象是为了接收前端传的数据）</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"testAjax"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">Pet</span> <span class="token function">testAjax</span><span class="token punctuation">(</span><span class="token class-name">Person</span> p<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">JsonProcessingException</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Pet</span> pet <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Pet</span><span class="token punctuation">(</span><span class="token string">"Tom"</span><span class="token punctuation">,</span><span class="token string">"cat"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> pet<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220810163749298.png" alt="接收到JSON格式数据"></p><ol start="3"><li>在ajax的回调函数中，<code>无需再次使用eval函数将响应数据转换为json对象</code>，直接使用即可</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#btn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                $<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'testAjax'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token literal-property property">pname</span><span class="token operator">:</span><span class="token string">"mikevane"</span><span class="token punctuation">,</span><span class="token literal-property property">page</span><span class="token operator">:</span><span class="token string">"18"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>petName<span class="token punctuation">)</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>petType<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>testJSON<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><ul><li><code>关于 @RestController</code><ul><li>相当于@Controller+@ResponseBody两个注解的结合，返回json数据不需要在方法前面加@ResponseBody注解了，但使用@RestController这个注解，就不能返回jsp.html页面，视图解析器无法解析jsp.html页面</li></ul></li></ul></blockquote><hr><h2 id="8-SSM整合"><a href="#8-SSM整合" class="headerlink" title="8 SSM整合"></a>8 SSM整合</h2><h3 id="8-1-准备数据库"><a href="#8-1-准备数据库" class="headerlink" title="8.1 准备数据库"></a>8.1 准备数据库</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>user<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>  <span class="token identifier"><span class="token punctuation">`</span>uid<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>uname<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>password<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>uid<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">3</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="8-2-创建maven-web项目并补充项目结构"><a href="#8-2-创建maven-web项目并补充项目结构" class="headerlink" title="8.2 创建maven web项目并补充项目结构"></a>8.2 创建maven web项目并补充项目结构</h3><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220810205909426.png" alt="基础项目结构"></p><hr><h3 id="8-3-更新web-xml-文件和准备包结构"><a href="#8-3-更新web-xml-文件和准备包结构" class="headerlink" title="8.3 更新web.xml 文件和准备包结构"></a>8.3 更新web.xml 文件和准备包结构</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd<span class="token punctuation">"</span></span>         <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220811091401387.png" alt="包结构"></p><hr><h3 id="8-4-导入依赖"><a href="#8-4-导入依赖" class="headerlink" title="8.4 导入依赖"></a>8.4 导入依赖</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--spring核心容器包--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--spring切面包--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-aspects<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--aop联盟包--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>aopalliance<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aopalliance<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--德鲁伊连接池--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>druid<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--mysql驱动--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>8.0.22<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--springJDBC包--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--spring事务控制包--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-tx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--spring orm 映射依赖--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-orm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--Apache Commons日志包--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--log4j2 日志--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>log4j-slf4j-impl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.14.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--lombok --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.18.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--spring test测试支持包--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--junit5单元测试--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.junit.jupiter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit-jupiter-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.7.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--springMVC支持包--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--jsp 和Servlet  可选--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>javax.servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.servlet.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>javax.servlet.jsp-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.3.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--json依赖--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fasterxml.jackson.core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jackson-databind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.12.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--mybatis 核心jar包--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.5.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--spring mybatis整合包--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.0.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="8-5-log4j2-xml配置"><a href="#8-5-log4j2-xml配置" class="headerlink" title="8.5 log4j2.xml配置"></a>8.5 log4j2.xml配置</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Configuration</span> <span class="token attr-name">status</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DEBUG<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Appenders</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Console</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Console<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>SYSTEM_ERR<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PatternLayout</span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>%d&#123;YYYY-MM-dd HH:mm:ss&#125; [%t] %-5p %c&#123;1&#125;:%L - %msg%n<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Console</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Appenders</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Loggers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DEBUG<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Console<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Root</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Loggers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="8-6-jdbc-properties配置"><a href="#8-6-jdbc-properties配置" class="headerlink" title="8.6 jdbc.properties配置"></a>8.6 jdbc.properties配置</h3><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">jdbc_driver</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.cj.jdbc.Driver</span><span class="token key attr-name">jdbc_url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://127.0.0.1:3306/mydb?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span><span class="token key attr-name">jdbc_username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span><span class="token key attr-name">jdbc_password</span><span class="token punctuation">=</span><span class="token value attr-value">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="8-7-springMVC-xml配置"><a href="#8-7-springMVC-xml配置" class="headerlink" title="8.7 springMVC.xml配置"></a>8.7 springMVC.xml配置</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>p</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/p<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>c</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/c<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>util</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/util<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>aop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/aop<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>tx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/tx<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>mvc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/mvc<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>       http://www.springframework.org/schema/beans       http://www.springframework.org/schema/beans/spring-beans.xsd       http://www.springframework.org/schema/util       http://www.springframework.org/schema/util/spring-util.xsd       http://www.springframework.org/schema/context       http://www.springframework.org/schema/context/spring-context.xsd       http://www.springframework.org/schema/aop       http://www.springframework.org/schema/aop/spring-aop.xsd       http://www.springframework.org/schema/tx       http://www.springframework.org/schema/tx/spring-tx.xsd       http://www.springframework.org/schema/mvc       http://www.springframework.org/schema/mvc/spring-mvc.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--扫描controller--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.controller<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">context:</span>component-scan</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--这里配置三大组件--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>annotation-driven</span> <span class="token punctuation">/></span></span>    <span class="token comment">&lt;!--视图解析器--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--配置静态资源放行--></span>    <span class="token comment">&lt;!--&lt;mvc:resources mapping="/js/**" location="/js/">&lt;/mvc:resources>--></span>    <span class="token comment">&lt;!--&lt;mvc:resources mapping="/css/**" location="/css/">&lt;/mvc:resources>--></span>    <span class="token comment">&lt;!--&lt;mvc:resources mapping="/img/**" location="/img/">&lt;/mvc:resources>--></span>    <span class="token comment">&lt;!--&lt;mvc:resources mapping="/static/**" location="/static/">&lt;/mvc:resources>--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="8-8-applicationContext-xml配置"><a href="#8-8-applicationContext-xml配置" class="headerlink" title="8.8 applicationContext.xml配置"></a>8.8 applicationContext.xml配置</h3><ul><li>spring整合MyBatis思路：<ul><li>目的是 <code>在Service层注入Mapper对象</code></li><li>Mapper对象是由MyBatis生成（使用了SqlSession.getMapper(xxxMapper.class)）</li><li>MyBatis生成Mapper对象过程：<code>SqlSessionFactory -&gt; SqlSession -&gt; mapper</code></li><li>所以可以使用 <strong>spring</strong> 来创建 <strong>SqlSessionFactory</strong> 与 <strong>SqlSession</strong> 对象，然后再使用 <strong>spring</strong> 创建 <strong>mapper</strong></li></ul></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--加载properties配置文件--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>property-placeholder</span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>classpath*:jdbc.properties<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment">&lt;!--包扫描，仅仅扫描Service层--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.service<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment">&lt;!--配置数据源--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.alibaba.druid.pool.DruidDataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>driverClassName<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc_driver&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc_url&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc_username&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc_password&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--SqlSessionFactoryBean（spring整合包里的）--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>factory<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.mybatis.spring.SqlSessionFactoryBean<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--配置数据源--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--实体类别名包扫描--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>typeAliasesPackage<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--MapperScanner mapper扫描仪(生成所有Mapper对象并放入容器中)--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.mybatis.spring.mapper.MapperScannerConfigurer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--注入SqlSessionFactory--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sqlSessionFactoryBeanName<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>factory<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--读取所有Mapper映射文件--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>basePackage<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.mapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--事务管理器--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>transactionManager<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.springframework.jdbc.datasource.DataSourceTransactionManager<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--开启事务注解--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">tx:</span>annotation-driven</span> <span class="token attr-name">transaction-manager</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>transactionManager<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">tx:</span>annotation-driven</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="8-9-web-xml"><a href="#8-9-web-xml" class="headerlink" title="8.9  web.xml"></a>8.9  web.xml</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd<span class="token punctuation">"</span></span>         <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--spring核心配置文件位置--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>classpath:applicationContext.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--spring Listener--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener-class</span><span class="token punctuation">></span></span>org.springframework.web.context.ContextLoaderListener<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--DispatcherServlet--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>dispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>classpath*:springmvc.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>dispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--编码过滤器--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>characterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>org.springframework.web.filter.CharacterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>encoding<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>characterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="8-10-开发业务代码"><a href="#8-10-开发业务代码" class="headerlink" title="8.10 开发业务代码"></a>8.10 开发业务代码</h3><ul><li><code>index.jsp</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">&lt;%@ page contentType="text/html;charset=UTF-8" language="java" %><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>login<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>success.jsp</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">&lt;%@ page contentType="text/html;charset=UTF-8" language="java" %><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    登录成功<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>fail.jsp</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">&lt;%@ page contentType="text/html;charset=UTF-8" language="java" %><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    登录失败<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>User POJO</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> uid<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> uname<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>UserController</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"login"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span>POST<span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> view <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token class-name">User</span> user <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">findUser</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>user <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            view <span class="token operator">=</span> <span class="token string">"fail.jsp"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            view <span class="token operator">=</span> <span class="token string">"success.jsp"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> view<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token annotation punctuation">@ResponseBody</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"findAllUser.do"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> <span class="token function">findAllUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">findAllUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>UserService</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@Transactional</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">UserMapper</span> userMapper<span class="token punctuation">;</span>    <span class="token comment">/**     * 根据用户名与密码查询对应的用户     * @param username     * @param password     * @return 存在返回用户对象，不存在返回null     */</span>    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">findUser</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> userMapper<span class="token punctuation">.</span><span class="token function">findUser</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 查找所有User对象     * @return     */</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> <span class="token function">findAllUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> userMapper<span class="token punctuation">.</span><span class="token function">findAllUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>UserMapper</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">User</span> <span class="token function">findUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> <span class="token function">findAllUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>UserMapper.xml</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.mapper.UserMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--User findUser(String uname, String password);--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findUser<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from user where uname =#&#123;username&#125; and password =#&#123;password&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--findAllUser--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findAllUser<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from user    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="9-作用域传参"><a href="#9-作用域传参" class="headerlink" title="9 作用域传参"></a>9 作用域传参</h2><table><thead><tr><th>名称</th><th>作用域</th><th>作用</th></tr></thead><tbody><tr><td>PageContext</td><td>当前jsp页面内有效</td><td></td></tr><tr><td>request</td><td>一次请求内</td><td>解决了一次请求内的资源的数据共享问题</td></tr><tr><td>session</td><td>一次会话内有效<br/>说明:浏览器不关闭,并且后台的session不失效，在任意请求中都可以获取到同一个session对象</td><td>解决了一个用户不同请求的数据共享问题</td></tr><tr><td>application(ServletContext)</td><td>整个项目内有效</td><td>解决了不同用户的数据共享问题</td></tr></tbody></table><hr><h3 id="9-1-传统方式传递数据"><a href="#9-1-传统方式传递数据" class="headerlink" title="9.1 传统方式传递数据"></a>9.1 传统方式传递数据</h3><ul><li>request,session 这两个域 <code>直接放在参数列表上</code> 即可,SpringMVC就可以给我们注入</li><li>ServletContext对象(application域) 不能直接放在参数列表上的，需要通过HttpServletRequest获取</li></ul><ul><li><p><code>示例三个域的使用</code></p></li><li><p><code>Controller</code></p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ScopeController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"setData"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">setData</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpSession</span> session<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> users <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">findAllUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 向三个域中放入数据</span>        req<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span> <span class="token string">"reqMessage"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        req<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"users"</span><span class="token punctuation">,</span> users<span class="token punctuation">)</span><span class="token punctuation">;</span>        session<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span> <span class="token string">"sesssionMessage"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        session<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"users"</span><span class="token punctuation">,</span> users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ServletContext</span> application <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        application<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span> <span class="token string">"applictionMessage"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        application<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"users"</span><span class="token punctuation">,</span> users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 跳转至showDataPage</span>        <span class="token keyword">return</span> <span class="token string">"/showDataPage.jsp"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>showDataPage.jsp</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">&lt;%@ page contentType="text/html;charset=UTF-8" language="java" %><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>&lt;%--域中的数据--%>requestScope :message:$&#123;requestScope.message&#125; ,uname:$&#123;requestScope.users[0].uname&#125; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>sessionScope :message:$&#123;sessionScope.message&#125; ,uname:$&#123;sessionScope.users[0].uname&#125; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>applicationScope :message:$&#123;applicationScope.message&#125; ,uname:$&#123;applicationScope.users[0].uname&#125; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>&lt;%--请求参数--%>requestParam:$&#123;param.message&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="9-2-Model传递数据（针对请求域）"><a href="#9-2-Model传递数据（针对请求域）" class="headerlink" title="9.2 Model传递数据（针对请求域）"></a>9.2 Model传递数据（针对请求域）</h3><ul><li><code>Model对象</code><ul><li>主要是对<code>请求域(Request)</code>传递数据进行了API上的封装</li><li>降低controller和Servlet之间的 <code>耦合度</code></li><li>如果使用 <code>重定向</code>，则 <code>没法使用model传递域中的数据</code><ul><li>但是 <code>使用重定向</code>，model中的 <code>字符串类型</code> 的 <code>键值对信息</code> 会转换为<code>请求参数</code>,转发给目标组件</li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220811160220455.png" alt="重定向"></li></ul></li></ul></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"setData2"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">setData2</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> users <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">findAllUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 向域中放入数据</span>    model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span> <span class="token string">"reqMessage"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"users"</span><span class="token punctuation">,</span> users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 跳转至showDataPage</span>    <span class="token keyword">return</span> <span class="token string">"forward:/showDataPage.jsp"</span><span class="token punctuation">;</span>    <span class="token comment">//return "redirect:/showDataPage.jsp";</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="9-3-ModelAndView传递数据（针对请求域）"><a href="#9-3-ModelAndView传递数据（针对请求域）" class="headerlink" title="9.3 ModelAndView传递数据（针对请求域）"></a>9.3 ModelAndView传递数据（针对请求域）</h3><ul><li><code>ModelAndView</code><ul><li><code>Model</code>：理解为数据</li><li><code>View</code>：理解为页面</li><li>如果使用 <code>重定向</code>，与Model传递数据的情况一模一样</li></ul></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"setData3"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">setData3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">ModelAndView</span> mv<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> model <span class="token operator">=</span> mv<span class="token punctuation">.</span><span class="token function">getModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 向request域中放入数据</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> users <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">findAllUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    model<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span> <span class="token string">"reqMessage"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    model<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"users"</span><span class="token punctuation">,</span> users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 设置视图</span>    mv<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"forward:/showDataPage.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//mv.setViewName("redirect:/showDataPage.jsp");</span>    <span class="token keyword">return</span> mv<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="10-上传"><a href="#10-上传" class="headerlink" title="10 上传"></a>10 上传</h2><ul><li><p><code>需求</code>：</p><ul><li>游戏用户注册功能</li><li>输入账号密码与昵称</li><li>设置头像（异步）<ul><li>点击浏览，选择磁盘中的文件</li><li>点击立即上传，上传成功会在页面上显示选择的图片，上传失败会出现提示</li></ul></li><li>注册后，上面的数据存入数据库中</li></ul></li><li><p><code>实现中遇到的问题</code></p><ol><li><code>如何在页面中显示一个按钮</code><ul><li>用户可以点击该按钮后选择本地要上传的文件在页面中使用 <code>input标签，type值设置为”file”</code> 即可</li></ul></li><li><code>确定上传请求的发送方式</code><ul><li>上传成功后的响应结果在 <code>当前页面</code> 显示，使用 <code>ajax请求</code> 来完成资源的发送</li></ul></li><li><code>上传请求的请求数据及其数据格式</code><ul><li><code>请求数据</code>:<ul><li>上传的文件本身普通数据:用户名，Id，密码等，<code>建议上传功能中不携带除上传资源以外的数据</code></li></ul></li><li><code>数据格式</code>:<ul><li><code>传统的请求中，请求数据是以键值对的格式来发送给后台服务器的</code>，但是在上传请求中，没有任何一个键可以描述上次的数据，因为数据本身是非常大的键就相当于一个变量，我们使用一个变量存储一个10g的电影显然是不可能的。在上传请求中，将请求数据以 <code>二进制流</code> 的方式发送给服务器。</li></ul></li></ul></li><li><code>在ajax中如何发送二进制流数据给服务器</code><ol><li>创建 <code>FormData</code> 的对象，将请求数据存储到该对象中发送</li><li>将 <code>processData</code> 属性的值设置为false，<code>告诉浏览器发送请求数据是对象</code></li><li>将 <code>contentType</code> 属性的值设置为false，设置请求数据的类型为<code>二进制类型</code>。</li><li>正常发送ajax即可</li></ol></li><li><code>上传成功后后台服务器应该响应什么结果给浏览器</code><ul><li>在浏览器如何处理后台服务器处理完成后，响应一个json对象给浏览器，示例格式如下:<br>  { state:true,msg:“服务器繁忙”,url:”上传成功的资源的请求地址”}</li></ul></li><li><code>导入文件上传依赖的jar</code></li></ol></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--文件上传依赖--></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-fileupload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-fileupload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-io<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-io<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.8.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><ol start="7"><li><code>配置文件上传组件</code></li></ol></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--文件上传解析组件   id必须为multipartResolver   springmvc默认使用该id找该组件--></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span>         <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>multipartResolver<span class="token punctuation">"</span></span>                                                                                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.springframework.web.multipart.commons.CommonsMultipartResolver<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="10-1-准备用户表"><a href="#10-1-准备用户表" class="headerlink" title="10.1 准备用户表"></a>10.1 准备用户表</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>player<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>password<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>nickname<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>photo<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>filetype<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="10-2-前端代码"><a href="#10-2-前端代码" class="headerlink" title="10.2 前端代码"></a>10.2 前端代码</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">&lt;%@ page contentType="text/html;charset=UTF-8" language="java" %><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#uploadFile"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">// 获取要上传的文件</span>                <span class="token keyword">var</span> photoFile <span class="token operator">=</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#photo"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>photoFile<span class="token operator">==</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"您还未选中文件"</span><span class="token punctuation">)</span>                    <span class="token keyword">return</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">// 将文件装入FormData对象</span>                <span class="token keyword">var</span> formData <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"headPhoto"</span><span class="token punctuation">,</span>photoFile<span class="token punctuation">)</span>                <span class="token comment">// ajax向后台发送文件</span>                $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                    <span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">"post"</span><span class="token punctuation">,</span>                    <span class="token literal-property property">data</span><span class="token operator">:</span>formData<span class="token punctuation">,</span>                    <span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">"fileUpload.do"</span><span class="token punctuation">,</span>                    <span class="token literal-property property">processData</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>                    <span class="token literal-property property">contentType</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>                    <span class="token function-variable function">success</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token comment">// 接收后台响应的信息</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>                        <span class="token comment">// 图片回显</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addPlayer<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>账号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>昵称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nickname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>头像:        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photo<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uploadFile<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>立即上传<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>注册<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="10-3-controller"><a href="#10-3-controller" class="headerlink" title="10.3 controller"></a>10.3 controller</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileUploadController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"fileUpload.do"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">fileUpload</span><span class="token punctuation">(</span><span class="token class-name">MultipartFile</span> headPhoto<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 指定文件存储目录</span>        <span class="token class-name">File</span> dir <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"d:/imgs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 获取文件名</span>        <span class="token class-name">String</span> originalFilename <span class="token operator">=</span> headPhoto<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 文件存储位置</span>        <span class="token class-name">File</span> file <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span>originalFilename<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//  文件保存</span>        headPhoto<span class="token punctuation">.</span><span class="token function">transferTo</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"OK"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="10-4-文件上传的问题"><a href="#10-4-文件上传的问题" class="headerlink" title="10.4 文件上传的问题"></a>10.4 文件上传的问题</h3><ol><li><code>中文文件名编码问题</code><ul><li>通过过滤器解决</li></ul></li><li><code>文件位置存储问题</code><ul><li>放在当前项目下,作为静态资源,这样可以通过URL访问</li><li>在SpringMVC中配置静态资源放行</li></ul></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 指定文件存储目录为我们项目部署环境下的upload目录</span><span class="token class-name">String</span> realPath <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">"/upload"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">File</span> dir <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>realPath<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 如果不存在则创建目录</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>dir<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    dir<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><code>文件名冲突问题（使用UUID）</code></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 获取文件名</span><span class="token class-name">String</span> originalFilename <span class="token operator">=</span> headPhoto<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 避免文件名冲突，使用UUID</span><span class="token class-name">String</span> uuid <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 获取文件后缀名</span><span class="token class-name">String</span> extendsName <span class="token operator">=</span> originalFilename<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>originalFilename<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token char">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 拼接新的文件名</span><span class="token class-name">String</span> newFileName <span class="token operator">=</span> uuid<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>extendsName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 文件存储位置</span><span class="token class-name">File</span> file <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span>newFileName<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li><code>控制文件类型与大小</code></li></ol><ul><li>修改返回类型为 <code>Map</code> 类型</li><li>添加前端对接收到的 <code>message</code> 处理</li><li><code>headPhoto</code> 类型为 <code>MultipartFile</code>，并且名称与前端传入 <code>FormData的key相同</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 控制文件大小</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>headPhoto<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span><span class="token string">"上传的文件不能大于1m"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">return</span> map<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token comment">// 获取文件后缀名</span>      <span class="token class-name">String</span> extendsName <span class="token operator">=</span> originalFilename<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>originalFilename<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token char">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 控制文件类型</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>extendsName<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">".jpg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span><span class="token string">"文件类型只能为jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">return</span> map<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li><code>上传图片回显问题</code></li></ol><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220812172035931.png" alt="更新的代码"></p><ol start="6"><li><p><code>添加进度条</code></p><ul><li>见文章：<a href="https://www.cnblogs.com/wuyu1787/p/8919588.html">https://www.cnblogs.com/wuyu1787/p/8919588.html</a> ，这里不过多阐述</li></ul></li><li><p><code>单独准备文件存储服务器</code></p><ul><li><p>分服务器上传作用</p><ul><li><p><code>数据库服务器</code>：运行我们的数据库</p></li><li><p><code>缓存和消息服务器</code>：负责处理大并发访问的缓存和消息</p></li><li><p><code>文件服务器</code>：负责存储用户上传文件的服务器。</p></li><li><p><code>应用服务器</code>：负责部署我们的应用</p></li><li><p>在实际开发中，我们会有很多处理不同功能的服务器。(注意：此处说的不是服务器集群）</p></li><li><p><code>总结</code>：分服务器处理的目的是让服务器各司其职，从而提高我们项目的运行效率</p></li><li><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/SpringMVC/image-20220812201757620.png" alt="示意图"></p></li></ul></li><li><p><code>设置新的文件存储服务器步骤</code></p><ol><li><h2 id="单独解压一个Tomcat作为文件服务器"><a href="#单独解压一个Tomcat作为文件服务器" class="headerlink" title="单独解压一个Tomcat作为文件服务器"></a><code>单独解压一个Tomcat作为文件服务器</code></h2></li></ol></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> SpringMVC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis的学习</title>
      <link href="/2022/03/22/categories/java/mybatis/"/>
      <url>/2022/03/22/categories/java/mybatis/</url>
      
        <content type="html"><![CDATA[<h1 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a>MyBatis</h1><h2 id="1-MyBatis-概念"><a href="#1-MyBatis-概念" class="headerlink" title="1 MyBatis 概念"></a>1 MyBatis 概念</h2><ul><li><code>为什么要使用MyBatis</code>:<ol><li>编码繁琐</li><li>需要我们自己将结果集映射成对象</li><li>性能不太好  连接池 缓存</li><li>SQL语句和java代码的耦合度特别高</li><li>….</li></ol></li></ul><hr><ul><li><code>介绍</code><ul><li>MyBatis 本是Apache的一个开源项目iBatis, 2010年这个项目由Apache Software Foundation 迁移到了Google Code，且改名为MyBatis </li><li>2013年11月迁移到GitHub。iBATIS一词来源于“internet”和“abatis”的组合，是一个基于Java的持久层框架</li><li>MyBatis 是一款优秀的 <code>持久层</code> 框架，<code>它支持定制化 SQL、存储过程以及高级映射</code></li><li>MyBatis 避免了几乎所有的 <code>JDBC</code> 代码和 <code>手动设置</code> 参数以及获取结果集</li><li>MyBatis 可以使用简单的 <code>XML</code> 或 <code>注解</code> 来配置和映射原生信息，将接口和 Java 的 <code>POJOs(Plain Ordinary Java Object,普通的 Java对象)</code>映射成数据库中的记录</li></ul></li></ul><hr><h3 id="1-1-认识框架"><a href="#1-1-认识框架" class="headerlink" title="1.1 认识框架"></a>1.1 认识框架</h3><ul><li><code>框架（Framework）</code>是一个框子——指其约束性，也是一个架子——指其支撑性。是一个基本概念上的结构，用于去解决或者处理复杂的问题。框架这个广泛的定义使用的十分流行，尤其在软件概念</li><li><code>框架(Framework)</code>对于 <code>Java</code> 来说,就是一系列为了解决特定问题而定义的一系列接口和实现类,在组织框架代码时,使用了一系列优秀的设计模式,使代码无论在性能上还是API操作上得到很大提升.</li><li><code>优点</code>:<ul><li><strong>减少开发时间、降低开发难度，并且还保证设计质量</strong></li><li><strong>降低程序员之间沟通以及日后维护的成本</strong></li></ul></li><li><code>总结</code>:<ul><li>总之，框架是一个半成品，已经对基础的代码进行了封装并提供相应的API，开发者在使用框架是直接调用封装好的API可以省去很多代码编写，从而提高工作效率和开发速度</li></ul></li></ul><hr><h3 id="1-2-认识ORM"><a href="#1-2-认识ORM" class="headerlink" title="1.2 认识ORM"></a>1.2 认识ORM</h3><ul><li><code>传统 JDBC 的缺点</code>: <ul><li>需要手动的完成面向对象的Java语言、面向关系的数据库之间数据的转换，代码繁琐无技术含量，影响了开发效率</li><li>比如查询需要手动的将结果集的列数据转换为Java对象的属性；而添加操作时需要手动将Java对象的属性转换为数据库表的列字段</li></ul></li><li><code>ORM，Object-Relationl Mapping</code>，对象关系映射，它的作用是在关系型数据库和对象之间作一个映射</li><li><code>优点</code><ul><li>操作数据库的时候，只要像平时操作对象一样操作它，ORM框架会根据映射完成对数据库的操作，不需要写复杂的SQL语句</li></ul></li></ul><hr><h4 id="1-2-1-持久化"><a href="#1-2-1-持久化" class="headerlink" title="1.2.1 持久化"></a>1.2.1 持久化</h4><ul><li><code>持久（Persistence）</code>，即把数据（如内存中的对象）保存到可永久保存的存储设备中（如磁盘）</li><li><code>持久化的主要应用</code><ul><li>是将内存中的数据存储在关系型的数据库中，当然也可以存储在磁盘文件中、XML数据文件中等等</li></ul></li></ul><hr><h4 id="1-2-2-持久层"><a href="#1-2-2-持久层" class="headerlink" title="1.2.2 持久层"></a>1.2.2 持久层</h4><ul><li><code>持久层（Persistence Layer）</code>，即专注于实现 <code>数据持久化应用领域</code> 的某个特定系统的一个逻辑层面，将 <code>数据使用者和数据实体相关联</code></li><li>之前使用JDBC访问数据库的DAO层，后面采用MyBatis访问数据库的mapper层，就是持久层</li></ul><hr><h3 id="1-3-认识-MyBatis"><a href="#1-3-认识-MyBatis" class="headerlink" title="1.3 认识 MyBatis"></a>1.3 认识 MyBatis</h3><ul><li><code>MyBatis</code> 是一款优秀的持久层框架，它支持 <code>定制化 SQL、存储过程以及高级映射</code></li><li><code>MyBatis</code> 避免了几乎所有的 <code>JDBC</code> 代码和 <code>手动设置</code> 参数以及获取结果集</li><li><code>MyBatis</code> 可以使用简单的 <code>XML</code> 或 <code>注解</code> 来配置和映射原生信息，将接口和 Java 的 <code>POJOs(Plain Ordinary Java Object,普通的 Java对象)</code>映射成数据库中的记录</li></ul><hr><h2 id="2-MyBatis-快速入门"><a href="#2-MyBatis-快速入门" class="headerlink" title="2 MyBatis 快速入门"></a>2 MyBatis 快速入门</h2><h3 id="2-1-项目结构"><a href="#2-1-项目结构" class="headerlink" title="2.1 项目结构"></a>2.1 项目结构</h3><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/MyBatis/image-20220715120914182.png" alt="项目结构"></p><hr><h3 id="2-2-pom-依赖"><a href="#2-2-pom-依赖" class="headerlink" title="2.2 pom 依赖"></a>2.2 pom 依赖</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.msb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatisTest01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--mysqlConnector--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>8.0.16<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--mybatis 核心jar包--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.5.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--junit--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.13.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--lombok --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.18.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="2-3-准备实体类与数据库"><a href="#2-3-准备实体类与数据库" class="headerlink" title="2.3 准备实体类与数据库"></a>2.3 准备实体类与数据库</h3><ul><li><p>数据库导入即可</p></li><li><p>实体类：</p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>mikevane<span class="token punctuation">.</span>pojo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">AllArgsConstructor</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">NoArgsConstructor</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Serializable</span></span><span class="token punctuation">;</span><span class="token comment">/** * @Author: mikevane */</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Dept</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> deptno<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> dname<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> loc<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="2-4-添加映射文件"><a href="#2-4-添加映射文件" class="headerlink" title="2.4 添加映射文件"></a>2.4 添加映射文件</h3><ul><li><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/MyBatis/image-20220715121747588.png" alt="原理图"></p></li><li><blockquote><p>在 resource 目录下 创建 top&#x2F;mikevane 目录，然后添加DeptMapper.xml映射文件</p></blockquote></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">?xml version="1.0" encoding="UTF-8" ?><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aaa<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--public List&lt;Dept> findAll()&#123;    &#125;--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findAll<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.msb.pojo.Dept<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>        select * from dept    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><blockquote><p>resources目录下准备sqlMapConfig.xml 核心配置文件</p></blockquote></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Config 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JDBC<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POOLED<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>driver<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mysql.cj.jdbc.Driver<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc:mysql://127.0.0.1:3306/mydb?useSSL=false<span class="token entity named-entity" title="&amp;">&amp;amp;</span>useUnicode=true<span class="token entity named-entity" title="&amp;">&amp;amp;</span>characterEncoding=UTF-8<span class="token entity named-entity" title="&amp;">&amp;amp;</span>serverTimezone=Asia/Shanghai<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--加载mapper映射文件--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com/msb/mapper/DeptMapper.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="2-5-测试代码"><a href="#2-5-测试代码" class="headerlink" title="2.5 测试代码"></a>2.5 测试代码</h3><ul><li>在 test 目录下 创建 top&#x2F;mikevane 目录并新建 Test1 类</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>mikevane<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">top<span class="token punctuation">.</span>mikevane<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">Dept</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resources</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSession</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactory</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactoryBuilder</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">After</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Before</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test1</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">SqlSession</span> sqlSession<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Before</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">SqlSessionFactoryBuilder</span> ssfb <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">InputStream</span> resourceAsStream <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            resourceAsStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">"sqlMapConfig.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">SqlSessionFactory</span> factory<span class="token operator">=</span>ssfb<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>resourceAsStream<span class="token punctuation">)</span> <span class="token punctuation">;</span>        sqlSession<span class="token operator">=</span>factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testFindAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 调用SQL语句</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dept</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token string">"findAll"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Dept</span> dept <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dept<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@After</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 关闭SQLSession</span>        sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="3-MyBatis-配置详解"><a href="#3-MyBatis-配置详解" class="headerlink" title="3 MyBatis 配置详解"></a>3 MyBatis 配置详解</h2><h3 id="3-1-log4j1-和log4j2的使用"><a href="#3-1-log4j1-和log4j2的使用" class="headerlink" title="3.1 log4j1 和log4j2的使用"></a>3.1 log4j1 和log4j2的使用</h3><ul><li><code>导入依赖</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--log4j2--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>log4j-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.12.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--log4j1 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>可以在MyBatis的配置文件中 配置选择使用的具体的日志实现</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--指定mybatis日志方式,如果不指定,自动查找处理--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logImpl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LOG4J<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="3-1-1-log4j-配置文件"><a href="#3-1-1-log4j-配置文件" class="headerlink" title="3.1.1 log4j 配置文件"></a>3.1.1 log4j 配置文件</h4><ul><li><p>在网上可以找到对应的配置文件</p></li><li><p>将配置文件置于 <code>resource</code> 的根目录即可</p></li><li><p><code>log4j1 配置文件(properties文件)</code></p></li></ul><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">log4j.rootLogger</span><span class="token punctuation">=</span><span class="token value attr-value">debug,stdout</span><span class="token key attr-name">log4j.appender.stdout</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.ConsoleAppender</span><span class="token key attr-name">log4j.appender.stdout.Target</span><span class="token punctuation">=</span><span class="token value attr-value">System.err</span><span class="token key attr-name">log4j.appender.stdout.layout</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.SimpleLayout</span><span class="token key attr-name">log4j.appender.logfile</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.FileAppender</span><span class="token key attr-name">log4j.appender.logfile.File</span><span class="token punctuation">=</span><span class="token value attr-value">d:/msb.log</span><span class="token key attr-name">log4j.appender.logfile.layout</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.PatternLayout</span><span class="token key attr-name">log4j.appender.logfile.layout.ConversionPattern</span><span class="token punctuation">=</span><span class="token value attr-value">%d&#123;yyyy-MM-dd HH:mm:ss&#125; %l %F %p %m%n</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>log4j2 配置文件(xml文件)</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Configuration</span> <span class="token attr-name">status</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INFO<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Appenders</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Console</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Console<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>SYSTEM_ERR<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PatternLayout</span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>%d&#123;YYYY-MM-dd HH:mm:ss&#125; [%t] %-5p %c&#123;1&#125;:%L - %msg%n<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Console</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RollingFile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>RollingFile<span class="token punctuation">"</span></span> <span class="token attr-name">filename</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>log/test.log<span class="token punctuation">"</span></span>                     <span class="token attr-name">filepattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;logPath&#125;/%d&#123;YYYYMMddHHmmss&#125;-fargo.log<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PatternLayout</span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>%d&#123;YYYY-MM-dd HH:mm:ss&#125; [%t] %-5p %c&#123;1&#125;:%L - %msg%n<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Policies</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SizeBasedTriggeringPolicy</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10 MB<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Policies</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DefaultRolloverStrategy</span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RollingFile</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Appenders</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Loggers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DEBUG<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Console<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>RollingFile<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Root</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Loggers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>log4j 的日志等级级别</code></li></ul><table><thead><tr><th align="left">级别</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">ALL</td><td align="left">所有级别包括自定义级别。</td></tr><tr><td align="left">DEBUG</td><td align="left">调试消息日志。</td></tr><tr><td align="left">ERROR</td><td align="left">错误消息日志，应用程序可以继续运行。</td></tr><tr><td align="left">FATAL</td><td align="left">严重错误消息日志，必须中止运行应用程序。</td></tr><tr><td align="left">INFO</td><td align="left">信息消息。</td></tr><tr><td align="left">OFF</td><td align="left">最高可能的排名，旨在关闭日志记录。</td></tr><tr><td align="left">TRACE</td><td align="left">高于DEBUG。</td></tr><tr><td align="left">WARN</td><td align="left">用于警告消息。</td></tr></tbody></table><hr><h3 id="3-2-事务配置-transactionManager"><a href="#3-2-事务配置-transactionManager" class="headerlink" title="3.2 事务配置(transactionManager)"></a>3.2 事务配置(transactionManager)</h3><ul><li><p>在 MyBatis 中有两种类型的事务管理器（也就是 type&#x3D;”[JDBC|MANAGED]”）：</p><ul><li><p>JDBC – 这个配置直接使用了 JDBC 的提交和回滚设施，它依赖从数据源获得的连接来管理事务作用域。</p></li><li><p>MANAGED – 这个配置几乎没做什么。它从不提交或回滚一个连接，而是让容器来管理事务的整个生命周期（比如 JEE 应用服务器的上下文）。 默认情况下它会关闭连接。然而一些容器并不希望连接被关闭，因此需要将 closeConnection 属性设置为 false 来阻止默认的关闭行为。例如:</p></li></ul></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MANAGED<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>closeConnection<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transactionManager</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h3 id="3-3-映射文件的加载方式-mappers"><a href="#3-3-映射文件的加载方式-mappers" class="headerlink" title="3.3 映射文件的加载方式(mappers)"></a>3.3 映射文件的加载方式(mappers)</h3><ul><li>在自动查找资源方面，Java 并没有提供一个很好的解决方案，所以最好的办法是直接告诉 MyBatis 到哪里去找映射文件</li></ul><ol><li>mapper映射文件的文件路径导入 使用的mapper标签的resource属性</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 使用相对于类路径的资源引用 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org/mybatis/builder/AuthorMapper.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org/mybatis/builder/BlogMapper.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org/mybatis/builder/PostMapper.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>网络资源路径 使用的mapper标签的url属性</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 使用完全限定资源定位符（URL） --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file:///var/mappers/AuthorMapper.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file:///var/mappers/BlogMapper.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file:///var/mappers/PostMapper.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>接口的全限定名导入 使用的是mapper标签的class属性 (基于接口的代理模式开发)</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 使用映射器接口实现类的完全限定类名 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.mybatis.builder.AuthorMapper<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.mybatis.builder.BlogMapper<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.mybatis.builder.PostMapper<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>包扫描形式加载所有的mapper映射文件 使用的是 package标签</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 将包内的映射器接口实现全部注册为映射器 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.mybatis.builder<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="3-4-实体类别名-typeAliases"><a href="#3-4-实体类别名-typeAliases" class="headerlink" title="3.4 实体类别名(typeAliases)"></a>3.4 实体类别名(typeAliases)</h3><ul><li>类型别名可为 Java 类型设置一个缩写名字。 它仅用于 XML 配置，意在降低冗余的全限定类名书写。例如：</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAliases</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--包扫描起别名  类的短路径名首字母小写--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAlias</span> <span class="token attr-name">alias</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dept<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Dept<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAlias</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAlias</span> <span class="token attr-name">alias</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAlias</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAliases</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>这样 当这样配置时，<code>dept</code> 可以用在任何使用 <code>top.mikevane.pojo.Emp</code> 的地方。</p></li><li><p>也可以指定一个包名，MyBatis 会在包名下面搜索需要的 Java Bean，比如：</p></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAliases</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--包扫描起别名  类的短路径名首字母小写--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAliases</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>每一个在包 <code>top.mikevane.pojo</code> 中的 Java Bean，在没有注解的情况下，会使用 Bean 的首字母小写的非限定类名来作为它的别名。 比如 <code>top.mikevane.pojo.Dept</code> 的别名为 <code>dept</code></p></li><li><p>若有注解，则别名为其注解值。见下面的例子：</p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Alias</span><span class="token punctuation">(</span><span class="token string">"dept"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Dept</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="3-4-1-常见的-Java-类型内建的类型别名"><a href="#3-4-1-常见的-Java-类型内建的类型别名" class="headerlink" title="3.4.1 常见的 Java 类型内建的类型别名"></a>3.4.1 常见的 Java 类型内建的类型别名</h4><ul><li><table><thead><tr><th align="left">别名</th><th align="left">映射的类型</th></tr></thead><tbody><tr><td align="left">_byte</td><td align="left">byte</td></tr><tr><td align="left">_long</td><td align="left">long</td></tr><tr><td align="left">_short</td><td align="left">short</td></tr><tr><td align="left">_int</td><td align="left">int</td></tr><tr><td align="left">_integer</td><td align="left">int</td></tr><tr><td align="left">_double</td><td align="left">double</td></tr><tr><td align="left">_float</td><td align="left">float</td></tr><tr><td align="left">_boolean</td><td align="left">boolean</td></tr><tr><td align="left">string</td><td align="left">String</td></tr><tr><td align="left">byte</td><td align="left">Byte</td></tr><tr><td align="left">long</td><td align="left">Long</td></tr><tr><td align="left">short</td><td align="left">Short</td></tr><tr><td align="left">int</td><td align="left">Integer</td></tr><tr><td align="left">integer</td><td align="left">Integer</td></tr><tr><td align="left">double</td><td align="left">Double</td></tr><tr><td align="left">float</td><td align="left">Float</td></tr><tr><td align="left">boolean</td><td align="left">Boolean</td></tr><tr><td align="left">date</td><td align="left">Date</td></tr><tr><td align="left">decimal</td><td align="left">BigDecimal</td></tr><tr><td align="left">bigdecimal</td><td align="left">BigDecimal</td></tr><tr><td align="left">object</td><td align="left">Object</td></tr><tr><td align="left">map</td><td align="left">Map</td></tr><tr><td align="left">hashmap</td><td align="left">HashMap</td></tr><tr><td align="left">list</td><td align="left">List</td></tr><tr><td align="left">arraylist</td><td align="left">ArrayList</td></tr><tr><td align="left">collection</td><td align="left">Collection</td></tr><tr><td align="left">iterator</td><td align="left">Iterator</td></tr></tbody></table></li></ul><hr><h3 id="3-5-环境配置"><a href="#3-5-环境配置" class="headerlink" title="3.5 环境配置"></a>3.5 环境配置</h3><ul><li><p>MyBatis 可以配置成适应多种环境，这种机制有助于将 SQL 映射应用于多种数据库之中， 现实情况下有多种理由需要这么做。</p><ul><li>例如，开发、测试和生产环境需要有不同的配置；</li><li>或者想在具有相同 Schema 的多个生产数据库中使用相同的 SQL 映射</li><li>还有许多类似的使用场景。</li></ul></li><li><blockquote><p>尽管可以配置多个环境，但每个 SqlSessionFactory 实例只能选择一种环境</p></blockquote></li></ul><h4 id="3-5-1-SqlSessionFactory-实例"><a href="#3-5-1-SqlSessionFactory-实例" class="headerlink" title="3.5.1 SqlSessionFactory 实例"></a>3.5.1 SqlSessionFactory 实例</h4><ul><li><p>每个数据库对应一个 SqlSessionFactory 实例</p></li><li><p>为了指定创建哪种环境，只要将它作为可选的参数传递给 SqlSessionFactoryBuilder 即可。可以接受环境配置的两个方法签名是：</p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>reader<span class="token punctuation">,</span> environment<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>reader<span class="token punctuation">,</span> environment<span class="token punctuation">,</span> properties<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>如果忽略了环境参数，那么将会加载默认环境，如下所示：</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>reader<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>reader<span class="token punctuation">,</span> properties<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h4 id="3-5-2-引入-properties-属性来导入配置文件"><a href="#3-5-2-引入-properties-属性来导入配置文件" class="headerlink" title="3.5.2 引入 properties 属性来导入配置文件"></a>3.5.2 引入 properties 属性来导入配置文件</h4><ul><li>在 <code>resource</code> 目录下准备 <code>jdbc.properties</code> 属性配置文件，内容如下：</li></ul><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">jdbc_driver</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.cj.jdbc.Driver</span><span class="token key attr-name">jdbc_url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://127.0.0.1:3306/mydb?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span><span class="token key attr-name">jdbc_username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span><span class="token key attr-name">jdbc_password</span><span class="token punctuation">=</span><span class="token value attr-value">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>在 <code>MyBatis</code> 配置文件中引入 <code>jdbc.properties</code> 配置文件</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/MyBatis/image-20220716170238313.png" alt="引入配置文件"></li></ul></li></ul><hr><h2 id="4-MyBatis-普通模式开发"><a href="#4-MyBatis-普通模式开发" class="headerlink" title="4. MyBatis 普通模式开发"></a>4. MyBatis 普通模式开发</h2><ul><li>普通模式,也称为传统DAO模式,就是在传统DAO模式下,定义接口和实现类,如 interface EmpDao class EmpDaoImpl implements EmpDao. </li><li>在实现类中,用SQLSession对象调用 select insert delete update 等方法实现.目前极为少见.</li><li>在传统模式下,我们需要知道SqlSession对象 实现CURD和 参数传递的处理</li></ul><hr><h3 id="4-1-MyBatis-查询的三种方式"><a href="#4-1-MyBatis-查询的三种方式" class="headerlink" title="4.1 MyBatis 查询的三种方式"></a>4.1 MyBatis 查询的三种方式</h3><ul><li><p>SqlSession对象本身的API中就有三个查询方法,分别能够实现如下查询方式</p><ol><li><code>返回单个对象 selectOne</code></li></ol></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findOne<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>    select * from emp where empno = 7499<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><p><code>resultType</code> 相当于返回值类型</p></li><li><p><code>paramaterType</code> 参数类型</p></li><li><p><code>测试代码</code>:</p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 查询单个对象</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"sqlSession查询单个对象"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Emp</span> emp <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token string">"selectOne"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><code>返回对象List集合 selectList</code></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findAll<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select * from emp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code>：</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 查询多个对象的List集合</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"sqlSession查询对象List集合"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> emps <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token string">"EmpMapper.selectAll"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    emps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><code>返回对象Map集合 selectMap</code></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findEmpMap<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>map<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select * from emp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code>:</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 查询多个对象的Map集合</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"sqlSession查询对象Map集合"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Emp</span><span class="token punctuation">></span></span> empMap <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectMap</span><span class="token punctuation">(</span><span class="token string">"selectAllMap"</span><span class="token punctuation">,</span> <span class="token string">"EMPNO"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> empnos <span class="token operator">=</span> empMap<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span> empno <span class="token operator">:</span> empnos<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>empno<span class="token operator">+</span><span class="token string">" :"</span> <span class="token operator">+</span>empMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>empno<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>sqlSession.selectMap</code> 传入的参数：第一个为方法名，第二个参数为主键名</li></ul><hr><h3 id="4-2-MyBatis-参数传递的三种方式"><a href="#4-2-MyBatis-参数传递的三种方式" class="headerlink" title="4.2 MyBatis 参数传递的三种方式"></a>4.2 MyBatis 参数传递的三种方式</h3><ul><li>MyBatis 在SQL语句上可以使用${} #{} 代表参数的占位<ul><li>如果参数是单个基本数据类型,{}中名字可以随便写,最好 <code>见名知意</code></li><li><code>$&#123;&#125;</code>:代表 mybatis 底层使用 <code>Statment语句对象</code>,参数是以<code>字符串拼接</code> 的形式设置</li><li><code>#&#123;&#125;</code>:代表mybatis底层使用的 <code>preparedStatment</code> 语句对象,参数使用 <code>?作为占位符处理</code></li></ul></li></ul><ol><li>单个基础数据类型作为参数</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--参数为一个基本数据类型根据员工工号查询员工的全部信息,返回单个员工对象public Emp findByEmpno(int empno);parameterType 在有参数情况下也是可以省略不写  mybatis 可以根据实际情况自动判断如果要写parameterType 那么就要与实际参数的类型相匹配--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findByEmpno<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>int<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select  * from emp where empno = #&#123;empno&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>多个基础数据类型的map 集合作为参数</li></ol><ul><li><code>传入参数设置</code>:</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testMapArg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 测试Map集合作为参数</span>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> args<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    args<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"deptno"</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    args<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"sal"</span><span class="token punctuation">,</span> <span class="token number">3000.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> emps <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token string">"findEmpByDeptnoAndSal"</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    emps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>接受参数设置</code>:</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findEmpByDeptnoAndSal<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>map<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select * from emp where deptno = #&#123;deptno&#125; and sal <span class="token entity named-entity" title="&gt;">&amp;gt;</span>= #&#123;sal&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><blockquote><p><em>#{}中写的是map集合中,参数的键</em></p></blockquote></li><li><blockquote><p><em>&lt; &gt; 推荐进行转译处理,参照HTML转译</em></p></blockquote></li></ul><ol start="4"><li>引用类型作为参数</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findEmpByDeptnoAndSal2<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from emp where deptno = #&#123;deptno&#125; and sal <span class="token entity named-entity" title="&gt;">&amp;gt;</span>= #&#123;sal&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><blockquote><p><em>参数是我们自定义的类型,那么 #{}中写的是参数的属性名</em></p></blockquote></li></ul><hr><h3 id="4-3-MyBatis-完成-CURD-全部操作"><a href="#4-3-MyBatis-完成-CURD-全部操作" class="headerlink" title="4.3 MyBatis 完成 CURD 全部操作"></a>4.3 MyBatis 完成 CURD 全部操作</h3><ul><li><p><code>增加</code>:</p><ul><li><p>增删方法的返回值类型都是<code>int</code>，<code>resultType</code> 就无需指定了</p></li><li><p><code>insert update delete</code> 标签中没有 <code>resultType</code></p></li><li><p>但是仍然可以有 <code>paramaterType</code></p></li></ul></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addEmp<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    insert into emp values(#&#123;empno&#125;,#&#123;ename&#125;,#&#123;job&#125;,#&#123;mgr&#125;,#&#123;hiredate&#125;,#&#123;sal&#125;,#&#123;comm&#125;,#&#123;deptno&#125;)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><code>修改</code>：</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateEmp<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        update emp set ename = #&#123;ename&#125; where empno=#&#123;empno&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><code>删除</code>：</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>delete</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deleteEmp<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>int<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        delete from emp where empno >= #&#123;empno&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>delete</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h2 id="5-MyBatis-基于接口代理模式开发"><a href="#5-MyBatis-基于接口代理模式开发" class="headerlink" title="5 MyBatis 基于接口代理模式开发"></a>5 MyBatis 基于接口代理模式开发</h2><ul><li><code>前面操作的缺点</code>：<ol><li>不管是selectList()、selectOne()、selectMap()，都是通过SQLSession对象的API完成增删改查,都 <strong>只能提供一个查询参数</strong>。如果要多个参数，需要封装到 <code>JavaBean</code> 或者 <code>Map</code> 中，并不一定永远是一个好办法</li><li><code>返回值类型</code> 较固定</li><li>只提供了 <code>映射文件</code>，没有提供 <code>数据库操作的接口</code>，不利于后期的 <code>维护扩展</code></li></ol></li><li><code>解决办法</code>:<ul><li>在MyBatis中提供了另外一种成为<strong>Mapper代理（或称为接口绑定）</strong>的操作方式，<code>在实际开发中多使用该方式</code></li><li>之后多使用Mapper代理的方式来实现对Emp表的CRUD操作，还包括多个参数传递、模糊查询、自增主键回填等更多的技术实现</li></ul></li><li></li><li><code>优点</code>:<ul><li>接口与模块更加规范</li><li>参数处理变得多样,接口中的方法参数列表由程序员自主决定</li><li>通过 <code>代理模式</code> 由 <code>mybatis</code> 提供接口的实现类对象，可以不写实现类了</li></ul></li></ul><hr><h3 id="5-1-使用Mapper代理方式实现查询"><a href="#5-1-使用Mapper代理方式实现查询" class="headerlink" title="5.1 使用Mapper代理方式实现查询"></a>5.1 使用Mapper代理方式实现查询</h3><ul><li><p><code>项目结构</code>：</p><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/MyBatis/image-20220722132429233.png" alt="项目结构"></li></ul></li><li><p><code>Emp 接口</code>：</p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">EmpMapper</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><code>EmpMapper.xml映射文件</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.mapper.EmpMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findAll<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from emp    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在 <code>sqlMapConfig.xml</code> 核心配置文件中使用 <code>包扫描</code> 形式加载所有的映射文件</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--加载mapper映射文件--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.mapper.EmpMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试类</code>:</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testFindAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">EmpMapper</span> empMapper<span class="token operator">=</span>sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> emps <span class="token operator">=</span> empMapper<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        emps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="6-代理模式下的参数传递问题"><a href="#6-代理模式下的参数传递问题" class="headerlink" title="6 代理模式下的参数传递问题"></a>6 代理模式下的参数传递问题</h2><h3 id="6-1-多参数传递"><a href="#6-1-多参数传递" class="headerlink" title="6.1 多参数传递"></a>6.1 多参数传递</h3><ol><li><code>单个基本数据类型</code></li></ol><ul><li><code>mapper 接口</code>:</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">EmpMapper</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 根据员工编号查询单个员工信息     * @param empNum 员工编号     * @return  员工信息     */</span>    <span class="token class-name">Emp</span> <span class="token function">selectByEmpNo</span><span class="token punctuation">(</span><span class="token keyword">int</span> empNum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>xml 映射文件</code>:</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectByEmpNo<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from emp where empno = #&#123;empno&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><p><code>测试代码</code>:</p><ul><li>&#96;&#96;&#96;java<br>  @Test<br>  public void selectByEmpNoTest(){<br>  EmpMapper mapper &#x3D; sqlSession.getMapper(EmpMapper.class);<br>  Emp emp &#x3D; mapper.selectByEmpNo(7902);<br>  System.out.println(emp);<br>  }  <pre class="line-numbers language-none"><code class="language-none">2. &#96;多个基本数据类型&#96;- &#96;@Param注解 使用场景&#96;:    - 方法有 &#96;多个参数&#96;，需要 &#96;@Param&#96; 注解    - 方法参数要 &#96;取别名&#96;，需要 &#96;@Param&#96; 注解    - &#96;XML&#96; 中的 &#96;SQL&#96; 使用了 &#96;$&#96; ，那么参数中也需要 &#96;@Param&#96; 注解    - &#96;动态 SQL&#96; ，如果在动态 SQL 中使用了参数作为变量，那么也需要 &#96;@Param&#96; 注解，即使你只有一个参数- &#96;接口和映射文件要求&#96;:    1. &#96;接口的名字和Mapper映射&#96; 为文件 &#96;名字&#96; 必须 &#96;保持一致&#96;(不包含拓展名)    2. Mapper映射文件的 &#96;namespace&#96; 必须是 &#96;接口的全路径名&#96;    3. sql语句的 &#96;id&#96; 必须是对应 &#96;方法的名&#96;    4. &#96;DeptMapper映射文件&#96; 应该和 &#96;接口编译之后&#96; 放在 &#96;同一个目录&#96; 下- &#96;mapper 接口&#96;:&#96;&#96;&#96;java&#x2F;**    * 根据员工编号和薪资下限去查询员工信息    *    * @param deptno 员工编号    * @param sal    薪资下限    * @return 多个Emp对象的List集合    *&#x2F;List&lt;Emp&gt; selectByDeptnoAndSal(@Param(&quot;deptno&quot;) int deptno, @Param(&quot;sal&quot;) double sal);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><code>xml 映射文件</code>:</p></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 多个基本数据类型作为方法参数 List&lt;Emp> selectByDeptnoAndSal(@Param("deptno") int deptno, @Param("sal") double sal); 方式1 arg*     arg0 arg1 arg2 数字是索引,从0开始 方式2 param*   param1 param2 param3 数字是编号,从1开始 使用别名 List&lt;Emp> selectByDeptnoAndSal(@Param("deptno") int deptno,@Param("sal") double sal); 通过@Param注解使用别名之后,就不能再使用arg* 但是可以继续使用param*--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectByDeptnoAndSal<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--select * from emp where empno =#&#123;arg0&#125; and sal >= #&#123;arg1&#125;--></span>    <span class="token comment">&lt;!-- select * from emp where empno =#&#123;param1&#125; and sal >= #&#123;param2&#125;--></span>    select * from emp where deptno =#&#123;deptno&#125; and sal >= #&#123;sal&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code>:</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectByEmpNumAndSalTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">EmpMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> emps2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectByDeptnoAndSal</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    emps2<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><ol start="3"><li><code>单个引用数据类型</code></li></ol><ul><li><code>mapper 接口</code>:</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> <span class="token function">selectByDeptnoAndSal2</span><span class="token punctuation">(</span><span class="token class-name">Emp</span> emp<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>xml 映射文件</code>:</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--单个引用类型,&#123;&#125;中写的使用对象的属性名--></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectByDeptnoAndSal2<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Emp<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     select *     from emp     where deptno = #&#123;deptno&#125;       and sal >= #&#123;sal&#125; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code>:</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectByEmpNumAndSalTest2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">EmpMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Emp</span> emp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    emp<span class="token punctuation">.</span><span class="token function">setDeptno</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    emp<span class="token punctuation">.</span><span class="token function">setSal</span><span class="token punctuation">(</span><span class="token number">1500.00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> emps <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectByDeptnoAndSal2</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>    emps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><ol start="4"><li><code>map集合数据类型</code></li></ol><ul><li><code>mapper 接口</code>:</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> <span class="token function">selectByDeptnoAndSal3</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>xml 映射文件</code>:</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--    参数是map,&#123;&#125;写键的名字--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectByDeptnoAndSal3<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Emp<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>map<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--select * from emp where deptno =#&#123;arg0&#125; and sal >= #&#123;arg1&#125;--></span>    <span class="token comment">&lt;!-- select * from emp where deptno =#&#123;param1&#125; and sal >= #&#123;param2&#125;--></span>    select * from emp where deptno =#&#123;deptno&#125; and sal >= #&#123;sal&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code>:</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectByEmpNumAndSalTest4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">EmpMapper</span> empMapper<span class="token operator">=</span>sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"deptno"</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"sal"</span><span class="token punctuation">,</span> <span class="token number">3000.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> emps <span class="token operator">=</span> empMapper<span class="token punctuation">.</span><span class="token function">selectByDeptnoAndSal3</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>    emps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><ol start="5"><li><code>多个引用数据类型</code></li></ol><ul><li><code>mapper 接口</code>:</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> <span class="token function">selectByDeptnoAndSal4</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"empa"</span><span class="token punctuation">)</span> <span class="token class-name">Emp</span> empa<span class="token punctuation">,</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"empb"</span><span class="token punctuation">)</span> <span class="token class-name">Emp</span> empb<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>xml 映射文件</code>:</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--多个引用类型作为方法参数 List&lt;Emp> selectByDeptnoAndSal4(@Param("empa") Emp empa,@Param("empb") Emp empb); 如果用@Param定义了别名,那么就不能使用arg*.属性名,但是可以使用param*.属性名和别名.属性名--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectByDeptnoAndSal4<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- select * from emp where deptno =#&#123;arg0.deptno&#125; and sal >= #&#123;arg1.sal&#125; --></span>    select * from emp where deptno =#&#123;param1.deptno&#125; and sal >= #&#123;param2.sal&#125;    <span class="token comment">&lt;!-- select * from emp where deptno =#&#123;empa.deptno&#125; and sal >= #&#123;empb.sal&#125;--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code>:</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectByEmpNumAndSalTest4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">EmpMapper</span> empMapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Emp</span> condition1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    condition1<span class="token punctuation">.</span><span class="token function">setDeptno</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Emp</span> condition2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    condition2<span class="token punctuation">.</span><span class="token function">setSal</span><span class="token punctuation">(</span><span class="token number">1500.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> emps4 <span class="token operator">=</span> empMapper<span class="token punctuation">.</span><span class="token function">selectByDeptnoAndSal4</span><span class="token punctuation">(</span>condition1<span class="token punctuation">,</span> condition2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Emp</span> em <span class="token operator">:</span> emps4<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>em<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="6-2-模糊查询"><a href="#6-2-模糊查询" class="headerlink" title="6.2 模糊查询"></a>6.2 模糊查询</h3><ul><li>在进行模糊查询时，在映射文件中可以使用concat()函数来连接参数和通配符。另外注意对于特殊字符，比如&lt;，不能直接书写，应该使用字符实体替换</li><li><code>mapper 接口</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 根据员工名字模糊匹配多个员工信息 * @param ename 员工名字片段 * @return 多个员工对象集合 */</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> <span class="token function">findByEname</span><span class="token punctuation">(</span><span class="token class-name">String</span> ename<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>xml 映射文件</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">"findByEname"</span> resultType<span class="token operator">=</span><span class="token string">"top.mikevane.pojo.Emp"</span><span class="token operator">></span>    SELECT <span class="token operator">*</span> FROM emp WHERE ename like <span class="token function">concat</span><span class="token punctuation">(</span><span class="token char">'%'</span><span class="token punctuation">,</span>#<span class="token punctuation">&#123;</span>ename<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token char">'%'</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findByEnameTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">EmpMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> a <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">findByEname</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    a<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="6-3-自增主键回填"><a href="#6-3-自增主键回填" class="headerlink" title="6.3 自增主键回填"></a>6.3 自增主键回填</h3><ul><li>MySQL支持主键自增。有时候完成添加后需要立刻 <code>获取刚刚自增的主键</code>，由下一个操作来使用。比如结算构造车后，主订单的主键确定后，需要作为后续订单明细项的外键存在。如何拿到主键呢，MyBatis提供了支持，可以非常简单的获取。</li><li><code>mapper 接口</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">   <span class="token comment">/**    * 添加一个dept对象    * @param dept    * @return    */</span>   <span class="token keyword">int</span> <span class="token function">addDept</span><span class="token punctuation">(</span><span class="token class-name">Dept</span> dept<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">addDept2</span><span class="token punctuation">(</span><span class="token class-name">Dept</span> dept<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>xml 映射文件</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">   <span class="token comment">&lt;!--       useGeneratedKeys="true" 返回数据库帮我们生成的主键       keyProperty="deptno" 生成的主键值用我们dept对象那个属性存储   --></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addDept<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dept<span class="token punctuation">"</span></span> <span class="token attr-name">useGeneratedKeys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">keyProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       insert into dept values(null,#&#123;dname&#125;,#&#123;loc&#125;)   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addDept2<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dept<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>selectKey</span> <span class="token attr-name">order</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>AFTER<span class="token punctuation">"</span></span> <span class="token attr-name">keyProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>int<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           select @@identity       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>selectKey</span><span class="token punctuation">></span></span>       insert into dept values(null,#&#123;dname&#125;,#&#123;loc&#125;)   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addDeptTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">DeptMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DeptMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Dept</span> dept <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dept</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">"AI学院"</span><span class="token punctuation">,</span><span class="token string">"北京"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">addDept</span><span class="token punctuation">(</span>dept<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dept<span class="token punctuation">.</span><span class="token function">getDeptno</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addDept2Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">DeptMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DeptMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Dept</span> dept <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dept</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">"AI学院"</span><span class="token punctuation">,</span><span class="token string">"北京"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">addDept2</span><span class="token punctuation">(</span>dept<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dept<span class="token punctuation">.</span><span class="token function">getDeptno</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>方法一</code></p><ul><li><p><code>useGeneratedKeys</code>：表示要使用自增的主键</p></li><li><p><code>keyProperty</code>：表示把自增的主键赋给JavaBean的哪个成员变量。</p></li><li><blockquote><p>以添加Dept对象为例，添加前Dept对象的deptno是空的，添加完毕后可以通过getDeptno() 获取自增的主键。</p></blockquote></li></ul></li><li><p><code>方法二</code></p><ul><li><code>order</code>：取值AFTER|BEFORE，表示在新增之后|之前执行&lt;selectKey&gt;中的SQL命令</li><li><code>keyProperty</code>：执行 <code>select @@identity</code> 后结果填充到哪个属性中</li><li><code>resultType</code>：结果类型</li></ul></li><li><blockquote><p><code>技术扩展</code></p><ul><li><p>在很多应用场景中需要新增数据后获取到新增数据的主键值，针对这样的需求一般由三种解决方式：</p></li><li><p>主键自定义，用户通过 <code>UUID或时间戳</code> 等方式生成唯一主键，把这个值当做主键值。在 <code>分布式场景</code> 中应用较多。</p></li><li><p>查询后通过 <code>select max(主键) from 表</code> 获取 <code>主键最大值</code>。这种方式在 <code>多线程访问</code> 情况下可能出现问题。</p></li><li><p>查询后通过 <code>select @@identity</code> 获取最新生成主键。要求这条SQL必须在 <code>insert操作之后</code>，且 <code>数据库连接没有关闭</code>。</p></li></ul></blockquote></li></ul><hr><h3 id="6-4-实现-CURD-操作"><a href="#6-4-实现-CURD-操作" class="headerlink" title="6.4 实现 CURD 操作"></a>6.4 实现 CURD 操作</h3><ul><li><code>mapper 接口</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/**     * 增加员工信息     * @param emp 存储新增员工信息的Emp对象     * @return 影响的行数     */</span>    <span class="token keyword">int</span> <span class="token function">addEmp</span><span class="token punctuation">(</span><span class="token class-name">Emp</span> emp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 根据员工编号修改员工的姓名     * @param emp 更新员工信息的Emp对象     * @return     */</span>    <span class="token keyword">int</span> <span class="token function">updateEnameByEmpno</span><span class="token punctuation">(</span><span class="token class-name">Emp</span> emp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 根据员工编号删除对应员工     * @param empno     * @return     */</span>    <span class="token keyword">int</span> <span class="token function">deleteByEmpno</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"empno"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> empno<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>xml 映射文件</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addEmp<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp<span class="token punctuation">"</span></span> <span class="token attr-name">useGeneratedKeys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">keyProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empno<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    insert into emp values(null,#&#123;ename&#125;,#&#123;job&#125;,#&#123;mgr&#125;,#&#123;hiredate&#125;,#&#123;sal&#125;,#&#123;comm&#125;,#&#123;deptno&#125;)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateEnameByEmpno<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    UPDATE emp set ename =#&#123;ename&#125; where empno =#&#123;empno&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>delete</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deleteByEmpno<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    DELETE FROM emp where empno = #&#123;empno&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>delete</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addEmpTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">EmpMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Emp</span> emp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"TOM"</span><span class="token punctuation">,</span> <span class="token string">"SALESMAN"</span><span class="token punctuation">,</span> <span class="token number">7521</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2314.0</span><span class="token punctuation">,</span> <span class="token number">100.0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">addEmp</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"新增的数据的主键为: "</span> <span class="token operator">+</span> emp<span class="token punctuation">.</span><span class="token function">getEmpno</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateEmpTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">EmpMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Emp</span> emp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        emp<span class="token punctuation">.</span><span class="token function">setEmpno</span><span class="token punctuation">(</span><span class="token number">7935</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        emp<span class="token punctuation">.</span><span class="token function">setEname</span><span class="token punctuation">(</span><span class="token string">"MIKE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mapper<span class="token punctuation">.</span><span class="token function">updateEnameByEmpno</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>        sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteByEmpnoTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">EmpMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">deleteByEmpno</span><span class="token punctuation">(</span><span class="token number">7935</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="7-动态SQL"><a href="#7-动态SQL" class="headerlink" title="7 动态SQL"></a>7 动态SQL</h2><ul><li><code>问题提出</code><ul><li>经常遇到很多按照很多查询条件进行查询的情况，比如京东根据不同的条件筛选商品。其中经常出现很多条件不取值的情况，在后台应该如何完成最终的SQL语句呢？</li><li>如果采用JDBC进行处理，需要根据条件是否取值进行SQL语句的拼接，一般情况下是使用StringBuilder类及其append方法实现，还是有些繁琐的</li><li>如果你有使用 JDBC 或其它类似框架的经验，你就能体会到根据不同条件拼接 SQL语句的痛苦。例如拼接时要确保不能忘记添加必要的空格，还要注意去掉列表最后一个列名的逗号。利用动态 SQL 这一特性可以彻底摆脱这种痛苦</li></ul></li><li><code>动态SQL优点</code><ul><li><strong>MyBatis</strong> 在简化操作方法提出了动态SQL功能，将使用 <code>Java代码拼接</code> SQL语句，改变为在 <code>XML映射文件中截止标签</code> 拼接SQL语句。相比而言，大大减少了代码量，更灵活、高度可配置、利于后期维护。</li><li><strong>MyBatis</strong> 中动态SQL是编写在 <code>mapper.xml</code> 中的，其 <code>语法和JSTL</code> 类似，但是却是 <code>基于强大的OGNL表达式实现</code> 的。</li><li><strong>MyBatis</strong> 也 <code>可以在注解中配置SQL</code>，但是由于<code>注解功能受限</code>，尤其是对于复杂的SQL语句，可读性很差，所以较少使用</li></ul></li></ul><hr><h3 id="7-1-if-标签"><a href="#7-1-if-标签" class="headerlink" title="7.1 if 标签"></a>7.1 if 标签</h3><ul><li><p>设置好需要接收的变量集，根据给定的变量来拼接 if 字符串 (避免出现每一种情况都需要写对应的sql语句)</p></li><li><p><code>mapper 接口</code></p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/**    * 根据给定的字段查找对应数据    * @param emp 对象中存入字段    * @return    */</span>   <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> <span class="token function">findByCondition</span><span class="token punctuation">(</span><span class="token class-name">Emp</span> emp<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>xml 映射文件</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findByCondition<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        SELECT * FROM emp where 1 = 1        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empno != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            and empno = #&#123;empno&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ename != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            and ename = #&#123;ename&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>job != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            and job = #&#123;job&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mgr != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            and mgr = #&#123;mgr&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hiredate != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            and hiredate = #&#123;hiredate&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sal != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            and sal = #&#123;sal&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comm != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            and comm = #&#123;comm&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            and deptno = #&#123;deptno&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><ul><li><code>测试代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findByConditionTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">EmpMapper2</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Emp</span> emp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        emp.setEmpno(7934);</span>        emp<span class="token punctuation">.</span><span class="token function">setDeptno</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> condition <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">findByCondition</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>        condition<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="7-2-Where-标签"><a href="#7-2-Where-标签" class="headerlink" title="7.2 Where 标签"></a>7.2 Where 标签</h3><ul><li>用于处理where关键字和and (用于避免出现无参数或其他情况时出现错误)</li><li><code>mapper 接口</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 根据给定的字段查找对应数据 * @param emp 对象中存入字段 * @return */</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> <span class="token function">findEmpByCondition</span><span class="token punctuation">(</span><span class="token class-name">Emp</span> emp<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>xml 映射文件</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findEmpByCondition<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    SELECT * FROM emp    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>where</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empno != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            and empno = #&#123;empno&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ename != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            and ename = #&#123;ename&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>job != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            and job = #&#123;job&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mgr != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            and mgr = #&#123;mgr&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hiredate != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            and hiredate = #&#123;hiredate&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sal != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            and sal = #&#123;sal&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comm != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            and comm = #&#123;comm&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            and deptno = #&#123;deptno&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>where</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findEmpByConditionTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">EmpMapper2</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Emp</span> emp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    emp<span class="token punctuation">.</span><span class="token function">setDeptno</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> empByCondition <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">findEmpByCondition</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>    empByCondition<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="7-3-Choose-标签"><a href="#7-3-Choose-标签" class="headerlink" title="7.3 Choose 标签"></a>7.3 Choose 标签</h3><ul><li>类似于 <strong>java</strong> 中的 <strong>switch</strong> 语句</li><li><code>mapper 接口</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> <span class="token function">findEmpByCondition2</span><span class="token punctuation">(</span><span class="token class-name">Emp</span> emp<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>xml 映射文件</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findEmpByCondition2<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select * from emp    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>where</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>choose</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>when</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empno != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                and empno= #&#123;empno&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>when</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>when</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ename != null and ename != <span class="token punctuation">'</span><span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                and ename= #&#123;ename&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>when</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>when</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>job != null and job != <span class="token punctuation">'</span><span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                and job= #&#123;job&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>when</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>when</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mgr != null <span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                and mgr= #&#123;mgr&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>when</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>when</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hiredate != null <span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                and hiredate= #&#123;hiredate&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>when</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>when</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sal != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                and sal= #&#123;sal&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>when</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>when</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comm != null <span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                and comm =#&#123;comm&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>when</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>when</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno != null <span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                and deptno= #&#123;deptno&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>when</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>choose</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>where</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findEmpByCondition2Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">EmpMapper2</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Emp</span> emp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    emp<span class="token punctuation">.</span><span class="token function">setDeptno</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    emp<span class="token punctuation">.</span><span class="token function">setMgr</span><span class="token punctuation">(</span><span class="token number">7698</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> empByCondition <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">findEmpByCondition2</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>    empByCondition<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试结果</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7499</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>ALLEN<span class="token punctuation">,</span> job<span class="token operator">=</span>SALESMAN<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7698</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Fri</span> <span class="token class-name">Feb</span> <span class="token number">20</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">1600.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token number">300.0</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7521</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>WARD<span class="token punctuation">,</span> job<span class="token operator">=</span>SALESMAN<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7698</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Sun</span> <span class="token class-name">Feb</span> <span class="token number">22</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">1250.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token number">500.0</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7654</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>MARTIN<span class="token punctuation">,</span> job<span class="token operator">=</span>SALESMAN<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7698</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Mon</span> <span class="token class-name">Sep</span> <span class="token number">28</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">1250.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token number">1400.0</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7844</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>TURNER<span class="token punctuation">,</span> job<span class="token operator">=</span>SALESMAN<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7698</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Tue</span> <span class="token class-name">Sep</span> <span class="token number">08</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">1500.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7900</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>JAMES<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7698</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Thu</span> <span class="token class-name">Dec</span> <span class="token number">03</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">950.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>分析可得，此时只查询了 <strong>mgr</strong> 为7698的值，设置的条件 <strong>dept&#x3D;20</strong> 并没有生效，说明 <strong>MyBatis</strong> 的 <code>choose</code> 语句确实与 <strong>Java</strong> 中的 <code>switch</code> 语句很类似，都是满足了前一个条件后，其他条件就不再进行判断了</li></ul><hr><h3 id="7-4-Set-标签"><a href="#7-4-Set-标签" class="headerlink" title="7.4 Set 标签"></a>7.4 Set 标签</h3><ul><li>在我个人看来，设置 <code>set</code> 标签的理由与 <code>if</code> 标签很像：如果有传入的数据有各种情况，那么就不可能针对每一种情况进行书写 SQL，所以就诞生了类似于 <code>if/set</code> 标签</li><li><code>mapper 接口</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 根据各种情况更新数据 * @param emp 对象中存取需要修改的数据(比如传入值只有 empno，或者只有 deptno) * @return */</span><span class="token keyword">int</span> <span class="token function">updateEmpByCondition</span><span class="token punctuation">(</span><span class="token class-name">Emp</span> emp<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>xml 映射文件</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateEmpByCondition<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    UPDATE emp    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>set</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ename != null and ename != <span class="token punctuation">'</span><span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            , ename =#&#123;ename&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>job != job and job != <span class="token punctuation">'</span><span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            , job =#&#123;job&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mgr != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            , mgr =#&#123;mgr&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hiredate != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            , hiredate =#&#123;hiredate&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sal != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            , sal =#&#123;sal&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comm != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            , comm =#&#123;comm&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            , deptno =#&#123;deptno&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>set</span><span class="token punctuation">></span></span>    where empno = #&#123;empno&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateEmpByCondtionTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">EmpMapper2</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Emp</span> emp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    emp<span class="token punctuation">.</span><span class="token function">setEmpno</span><span class="token punctuation">(</span><span class="token number">7934</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    emp<span class="token punctuation">.</span><span class="token function">setEname</span><span class="token punctuation">(</span><span class="token string">"MIKE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    emp<span class="token punctuation">.</span><span class="token function">setSal</span><span class="token punctuation">(</span><span class="token number">6666.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    mapper<span class="token punctuation">.</span><span class="token function">updateEmpByCondition</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>    sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试结果</code></li></ul><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/MyBatis/image-20220731131423256.png" alt="结果"></p><ul><li>结果正确，可以根据传入参数来进行动态拼接SQL</li></ul><hr><h3 id="7-5-Trim-标签"><a href="#7-5-Trim-标签" class="headerlink" title="7.5 Trim 标签"></a>7.5 Trim 标签</h3><ul><li>对于 <code>Trim标签</code> 来说，<code>set标签</code> 更像是 <code>trim</code> 的子集，因为 <code>trim标签</code> 不仅可以做到 <code>set</code> 的操作，还可以做其他操作</li><li><code>Trim标签的属性</code><ul><li><code>prefix</code> 要增加什么前缀</li><li><code>prefixOverrides</code> 要去除什么前缀</li><li><code>suffix</code> 要增加什么后缀</li><li><code>suffixOverrides</code> 要去除什么后缀</li></ul></li><li><code>mapper 接口</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> <span class="token function">updateEmpByCondition2</span><span class="token punctuation">(</span><span class="token class-name">Emp</span> emp<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>xml 映射文件</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateEmpByCondition2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        update emp        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>trim</span> <span class="token attr-name">prefix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>set<span class="token punctuation">"</span></span> <span class="token attr-name">prefixOverrides</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>,<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ename != null and ename != <span class="token punctuation">'</span><span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                , ename =#&#123;ename&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>job != job and job != <span class="token punctuation">'</span><span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                , job =#&#123;job&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mgr != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                , mgr =#&#123;mgr&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hiredate != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                , hiredate =#&#123;hiredate&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sal != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                , sal =#&#123;sal&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comm != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                , comm =#&#123;comm&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno != null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                , deptno =#&#123;deptno&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>trim</span><span class="token punctuation">></span></span>        where empno = #&#123;empno&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateEmpByCondtion2Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">EmpMapper2</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Emp</span> emp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    emp<span class="token punctuation">.</span><span class="token function">setEmpno</span><span class="token punctuation">(</span><span class="token number">7934</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    emp<span class="token punctuation">.</span><span class="token function">setEname</span><span class="token punctuation">(</span><span class="token string">"MIKEVANE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    emp<span class="token punctuation">.</span><span class="token function">setSal</span><span class="token punctuation">(</span><span class="token number">1234.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    mapper<span class="token punctuation">.</span><span class="token function">updateEmpByCondition2</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>    sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试结果</code></li></ul><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/MyBatis/image-20220731134205925.png" alt="修改后的表"></p><ul><li>结果显示修改正确</li></ul><hr><h3 id="7-6-Bind标签"><a href="#7-6-Bind标签" class="headerlink" title="7.6 Bind标签"></a>7.6 Bind标签</h3><ul><li><p>一般用于处理 <code>模糊查询</code></p></li><li><p><code>mapper 接口</code></p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 根据传入的字符串进行模糊查询 * @param ename  * @return */</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> <span class="token function">findEmpByEname</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> ename<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>xml 映射文件</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findEmpByEname<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bind</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>enamePattern<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>%<span class="token punctuation">'</span>+name+<span class="token punctuation">'</span>%<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    select * from emp where ename like #&#123;enamePattern&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findEmpByEnameTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">EmpMapper2</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> m <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">findEmpByEname</span><span class="token punctuation">(</span><span class="token string">"M"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    m<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试结果</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7369</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>SMITH<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7902</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Wed</span> <span class="token class-name">Dec</span> <span class="token number">17</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1980</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">800.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7654</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>MARTIN<span class="token punctuation">,</span> job<span class="token operator">=</span>SALESMAN<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7698</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Mon</span> <span class="token class-name">Sep</span> <span class="token number">28</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">1250.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token number">1400.0</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7876</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>ADAMS<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7788</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Sat</span> <span class="token class-name">May</span> <span class="token number">23</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CDT</span> <span class="token number">1987</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">1100.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7900</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>JAMES<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7698</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Thu</span> <span class="token class-name">Dec</span> <span class="token number">03</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">950.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7934</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>MIKEVANE<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7782</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Sat</span> <span class="token class-name">Jan</span> <span class="token number">23</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1982</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">1234.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>根据运行结果可知，对 <code>M</code> 进行模糊查询的结果与期望结果一致</li></ul><hr><h3 id="7-7-Sql标签"><a href="#7-7-Sql标签" class="headerlink" title="7.7 Sql标签"></a>7.7 Sql标签</h3><ul><li>在我个人看来，sql标签 与 方法&#x2F;函数 的作用类似，都是将重复的代码进行封装，减少代码的冗余</li><li>比如:<ul><li>对某个表进行多次查询</li><li>多次查询，返回的列都相同的情况</li></ul></li><li><code>例子</code>:<ul><li>将 <code>7.2 where标签</code> 的例子复用</li><li>接口与测试代码不变，仅将 <code>where标签</code> 之前的语句修改为 &lt;include refid&#x3D;”baseSelect”&#x2F;&gt;</li></ul></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">"findEmpByCondition"</span> resultType<span class="token operator">=</span><span class="token string">"top.mikevane.pojo.Emp"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>include refid<span class="token operator">=</span><span class="token string">"baseSelect"</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token generics"><span class="token punctuation">&lt;</span>where<span class="token punctuation">></span></span>            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"empno != null"</span><span class="token operator">></span>                and empno <span class="token operator">=</span> #<span class="token punctuation">&#123;</span>empno<span class="token punctuation">&#125;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"ename != null"</span><span class="token operator">></span>                and ename <span class="token operator">=</span> #<span class="token punctuation">&#123;</span>ename<span class="token punctuation">&#125;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"job != null"</span><span class="token operator">></span>                and job <span class="token operator">=</span> #<span class="token punctuation">&#123;</span>job<span class="token punctuation">&#125;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"mgr != null"</span><span class="token operator">></span>                and mgr <span class="token operator">=</span> #<span class="token punctuation">&#123;</span>mgr<span class="token punctuation">&#125;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"hiredate != null"</span><span class="token operator">></span>                and hiredate <span class="token operator">=</span> #<span class="token punctuation">&#123;</span>hiredate<span class="token punctuation">&#125;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"sal != null"</span><span class="token operator">></span>                and sal <span class="token operator">=</span> #<span class="token punctuation">&#123;</span>sal<span class="token punctuation">&#125;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"comm != null"</span><span class="token operator">></span>                and comm <span class="token operator">=</span> #<span class="token punctuation">&#123;</span>comm<span class="token punctuation">&#125;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"deptno != null"</span><span class="token operator">></span>                and deptno <span class="token operator">=</span> #<span class="token punctuation">&#123;</span>deptno<span class="token punctuation">&#125;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>where<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="7-8-Foreach-标签"><a href="#7-8-Foreach-标签" class="headerlink" title="7.8 Foreach 标签"></a>7.8 Foreach 标签</h3><ul><li>对传入数组与集合进行操作</li><li><code>foreach 标签的属性</code><ul><li><code>collection=&quot;&quot;</code>：遍历的集合或者是数组<ul><li>参数是数组,collection中名字指定为array</li><li>参数是List集合,collection中名字指定为list</li></ul></li><li><code>separator=&quot;&quot;</code>：多个元素取出的时候 用什么文字分隔</li><li><code>open=&quot;&quot;</code>：以什么开头</li><li><code>close=&quot;&quot;</code>：以什么结尾</li><li><code>item=&quot;&quot;</code>：中间变量名</li></ul></li><li><code>mapper 接口</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 根据传入员工编号数组/列表进行查询 * @param empnos * @return */</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> <span class="token function">findByEmpnos1</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> empnos<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> <span class="token function">findByEmpnos2</span><span class="token punctuation">(</span><span class="token class-name">List</span> empno<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>xml 映射文件</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findByEmpnos1<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">refid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>baseSelect<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    where empno in    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>foreach</span> <span class="token attr-name">collection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>array<span class="token punctuation">"</span></span> <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>,<span class="token punctuation">"</span></span> <span class="token attr-name">open</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(<span class="token punctuation">"</span></span> <span class="token attr-name">close</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>)<span class="token punctuation">"</span></span> <span class="token attr-name">item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empno<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        #&#123;empno&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>foreach</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findByEmpnos2<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">refid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>baseSelect<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    where empno in    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>foreach</span> <span class="token attr-name">collection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span> <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>,<span class="token punctuation">"</span></span> <span class="token attr-name">open</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(<span class="token punctuation">"</span></span> <span class="token attr-name">close</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>)<span class="token punctuation">"</span></span> <span class="token attr-name">item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empno<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        #&#123;empno&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>foreach</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findByEmpnos1Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">EmpMapper2</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">7934</span><span class="token punctuation">,</span><span class="token number">7900</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> byEmpnos1 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">findByEmpnos1</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>    byEmpnos1<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findByEmpnos2Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">EmpMapper2</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span><span class="token number">7934</span><span class="token punctuation">,</span><span class="token number">7900</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> byEmpnos1 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">findByEmpnos2</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>    byEmpnos1<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试结果</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7900</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>JAMES<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7698</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Thu</span> <span class="token class-name">Dec</span> <span class="token number">03</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">950.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7934</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>MIKEVANE<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7782</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Sat</span> <span class="token class-name">Jan</span> <span class="token number">23</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1982</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">1234.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="8-实现多表查询"><a href="#8-实现多表查询" class="headerlink" title="8 实现多表查询"></a>8 实现多表查询</h2><ul><li>前面已经使用 <strong>MyBatis</strong> 完成了对Emp表的CRUD操作，不管是使用 <strong>SqlSession</strong> 直接操作，还是使用 <strong>Mapper</strong> 代理方式，都只是完成了对 <code>单个数据库表</code> 的操作。这肯定是远远不够的。</li><li>在实际开发中，经常会将来自 <code>多张表</code> 的数据在一个位置显示。比如查询并显示的员工信息中会有来自部门表、岗位表的数据，而 <code>后台一般是定义一个方法</code></li></ul><hr><h3 id="8-1-关联查询"><a href="#8-1-关联查询" class="headerlink" title="8.1 关联查询"></a>8.1 关联查询</h3><h4 id="8-1-1-手动处理映射关系-resultMap"><a href="#8-1-1-手动处理映射关系-resultMap" class="headerlink" title="8.1.1 手动处理映射关系 resultMap"></a>8.1.1 手动处理映射关系 resultMap</h4><ul><li><p>手动处理 <code>数据库查询字段和封装实体类属性</code> 之间的映射关系</p><ol><li><p>主键一般使用id属性</p></li><li><p>当属性名和查询出的数据表字段名相同 <code>可以不写映射关系</code></p></li></ol></li><li><p><code>mapper 接口</code></p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>xml 映射文件</code></li></ul><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/MyBatis/image-20220731225421662.png" alt="xml映射文件"></p><ul><li><code>测试代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findAllTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">EmpMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> all <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    all<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="8-1-2-各表关系"><a href="#8-1-2-各表关系" class="headerlink" title="8.1.2 各表关系"></a>8.1.2 各表关系</h4><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/MyBatis/image-20220731234106022.png" alt="表关系"></li></ul><hr><h4 id="8-1-3-一对一关联查询-association"><a href="#8-1-3-一对一关联查询-association" class="headerlink" title="8.1.3 一对一关联查询 association"></a>8.1.3 一对一关联查询 association</h4><ul><li><code>association</code> 封装一对一信息关系的标签<ul><li><code>property</code> 类的属性名</li><li><code>javaType</code> 用哪个类的对象给属性赋值</li></ul></li><li><code>需求:</code> 根据编号查询员工信息及所在的部门信息</li><li><code>mapper 接口</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 根据员工编号查询员工的所有信息并携带所在的部门信息 * @param empno 要查询的员工编号 * @return Emp对象,组合了Dept对象作为属性,对部门信息进行存储 */</span><span class="token class-name">Emp</span> <span class="token function">findEmpJoinDeptByEmpno</span><span class="token punctuation">(</span><span class="token keyword">int</span> empno<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>xml 映射文件</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empJoinDept<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--设置emp本身的八个属性的映射关系--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empno<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empno<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ename<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ename<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>job<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>job<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sal<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hiredate<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hiredate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mgr<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mgr<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comm<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--   封装一对一信息关系    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>association</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dept<span class="token punctuation">"</span></span> <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Dept<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loc<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dname<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>association</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findEmpJoinDeptByEmpno<span class="token punctuation">"</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empJoinDept<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select * from emp    left join dept        on emp.deptno = dept.deptno    where empno = #&#123;empno&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findEmpJoinDeptByEmpnoTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">EmpMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Emp</span> deptByEmpno <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">findEmpJoinDeptByEmpno</span><span class="token punctuation">(</span><span class="token number">7934</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>deptByEmpno<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试结果</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7934</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>MIKEVANE<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7782</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Sun</span> <span class="token class-name">Jan</span> <span class="token number">23</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">2000</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">6666.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token class-name">Dept</span><span class="token punctuation">(</span>deptno<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> dname<span class="token operator">=</span>ACCOUNTING<span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token class-name">NEW</span> YORK<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>由结果可知，查询到的 <code>dept</code> 数据存入到了 <code>emp</code> 对象中</li></ul><hr><h4 id="8-1-4-一对多关联查询-collection"><a href="#8-1-4-一对多关联查询-collection" class="headerlink" title="8.1.4 一对多关联查询 collection"></a>8.1.4 一对多关联查询 collection</h4><ul><li><code>collection</code> 封装一对多信息关系的标签<ul><li><code>ofType</code> <code>类路径</code>，用于接收 <code>连接</code> 后的数据</li></ul></li><li><code>需求</code>：根据部门编号查询部门信息及该部分的所有员工信息</li><li><code>mapper 接口</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/**     * 根据部门编号查询部门信息及该部分的所有员工信息     * @param deptno 要查询的部门编号     * @return Dept对象,内部组合了一个Emp的List属性用于封装部门的所有员工信息     */</span>    <span class="token class-name">Dept</span> <span class="token function">findDeptJoinEmpsByDeptno</span><span class="token punctuation">(</span><span class="token keyword">int</span> deptno<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>xml 映射文件</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptJoinEmps<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Dept<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dname<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dname<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loc<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loc<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collection</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empList<span class="token punctuation">"</span></span> <span class="token attr-name">ofType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empno<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empno<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ename<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ename<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>job<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>job<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sal<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sal<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hiredate<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hiredate<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mgr<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mgr<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comm<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comm<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>collection</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findDeptJoinEmpsByDeptno<span class="token punctuation">"</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptJoinEmps<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from dept d left join emp e on d.deptno = e.deptno        where d.deptno = #&#123;deptno&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findDeptJoinEmpsByDeptnoTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">DeptMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DeptMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Dept</span> empsByDeptno <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">findDeptJoinEmpsByDeptno</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>empsByDeptno<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"连接的数据->"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> empList <span class="token operator">=</span> empsByDeptno<span class="token punctuation">.</span><span class="token function">getEmpList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    empList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试结果</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Dept</span><span class="token punctuation">(</span>deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dname<span class="token operator">=</span>RESEARCH<span class="token punctuation">,</span> loc<span class="token operator">=</span>DALLAS<span class="token punctuation">,</span> empList<span class="token operator">=</span><span class="token punctuation">[</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7369</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>SMITH<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7902</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Wed</span> <span class="token class-name">Dec</span> <span class="token number">17</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1980</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">800.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7566</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>JONES<span class="token punctuation">,</span> job<span class="token operator">=</span>MANAGER<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7839</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Thu</span> <span class="token class-name">Apr</span> <span class="token number">02</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">2975.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7788</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>SCOTT<span class="token punctuation">,</span> job<span class="token operator">=</span>ANALYST<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7566</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Sun</span> <span class="token class-name">Apr</span> <span class="token number">19</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CDT</span> <span class="token number">1987</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">3000.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7876</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>ADAMS<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7788</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Sat</span> <span class="token class-name">May</span> <span class="token number">23</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CDT</span> <span class="token number">1987</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">1100.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7902</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>FORD<span class="token punctuation">,</span> job<span class="token operator">=</span>ANALYST<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7566</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Thu</span> <span class="token class-name">Dec</span> <span class="token number">03</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">3000.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>连接的数据<span class="token operator">-></span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7369</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>SMITH<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7902</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Wed</span> <span class="token class-name">Dec</span> <span class="token number">17</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1980</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">800.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7566</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>JONES<span class="token punctuation">,</span> job<span class="token operator">=</span>MANAGER<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7839</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Thu</span> <span class="token class-name">Apr</span> <span class="token number">02</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">2975.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7788</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>SCOTT<span class="token punctuation">,</span> job<span class="token operator">=</span>ANALYST<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7566</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Sun</span> <span class="token class-name">Apr</span> <span class="token number">19</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CDT</span> <span class="token number">1987</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">3000.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7876</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>ADAMS<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7788</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Sat</span> <span class="token class-name">May</span> <span class="token number">23</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CDT</span> <span class="token number">1987</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">1100.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7902</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>FORD<span class="token punctuation">,</span> job<span class="token operator">=</span>ANALYST<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7566</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Thu</span> <span class="token class-name">Dec</span> <span class="token number">03</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">3000.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="8-1-5-多对多关联查询"><a href="#8-1-5-多对多关联查询" class="headerlink" title="8.1.5 多对多关联查询"></a>8.1.5 多对多关联查询</h4><ul><li>运用前面的一对多与一对一的方法实现多对多</li><li><code>需求</code>：根据项目编号查询一个项目信息及参与该项目的所有员工信息<ul><li>项目的具体信息为一个表，项目与参与的员工信息为一个中间表，员工具体信息为一个表</li><li>利用项目号根据中间表找到对应的员工编号(一对多)，然后再根据员工编号找到具体员工信息(一对一)</li><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/MyBatis/image-20220805013522443.png" alt="项目信息 中间表 员工表"></li></ul></li><li><code> mapper 接口</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 根据项目编号查询一个项目信息及参与该项目的所有员工信息 * @param pid 项目编号 * @return 所有信息封装的Project对象 */</span><span class="token class-name">Project</span> <span class="token function">findProjectJoinEmpsByPid</span><span class="token punctuation">(</span><span class="token keyword">int</span> pid<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>xml 映射文件</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>projectJoinEmps<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Project<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pid<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pid<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pname<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pname<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>money<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>money<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collection</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>projectRecords<span class="token punctuation">"</span></span> <span class="token attr-name">ofType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.ProjectRecord<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empno<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empno<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pid<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pid<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>association</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp<span class="token punctuation">"</span></span> <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empno<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empno<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ename<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ename<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>job<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>job<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sal<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sal<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hiredate<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hiredate<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mgr<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mgr<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comm<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comm<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>association</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>collection</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findProjectJoinEmpsByPid<span class="token punctuation">"</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>projectJoinEmps<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select * from projects p    left join projectrecord pro    on p.pid = pro.pid    left join emp e    on pro.empno = e.empno    where p.pid = #&#123;pid&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findProjectJoinEmpsByPidTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">ProjectMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">ProjectMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Project</span> projectJoinEmpsByPid <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">findProjectJoinEmpsByPid</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>projectJoinEmpsByPid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProjectRecord</span><span class="token punctuation">></span></span> projectRecords <span class="token operator">=</span> projectJoinEmpsByPid<span class="token punctuation">.</span><span class="token function">getProjectRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    projectRecords<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试结果</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Project</span><span class="token punctuation">(</span>pid<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> pname<span class="token operator">=</span>学生选课系统<span class="token punctuation">,</span> money<span class="token operator">=</span><span class="token number">100000</span><span class="token punctuation">,</span> projectRecords<span class="token operator">=</span><span class="token punctuation">[</span><span class="token class-name">ProjectRecord</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7369</span><span class="token punctuation">,</span> pid<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> emp<span class="token operator">=</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7369</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>SMITH<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7902</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Wed</span> <span class="token class-name">Dec</span> <span class="token number">17</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1980</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">800.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ProjectRecord</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7499</span><span class="token punctuation">,</span> pid<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> emp<span class="token operator">=</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7499</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>ALLEN<span class="token punctuation">,</span> job<span class="token operator">=</span>SALESMAN<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7698</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Fri</span> <span class="token class-name">Feb</span> <span class="token number">20</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">1600.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token number">300.0</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ProjectRecord</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7521</span><span class="token punctuation">,</span> pid<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> emp<span class="token operator">=</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7521</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>WARD<span class="token punctuation">,</span> job<span class="token operator">=</span>SALESMAN<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7698</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Sun</span> <span class="token class-name">Feb</span> <span class="token number">22</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">1250.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token number">500.0</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token class-name">ProjectRecord</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7369</span><span class="token punctuation">,</span> pid<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> emp<span class="token operator">=</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7369</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>SMITH<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7902</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Wed</span> <span class="token class-name">Dec</span> <span class="token number">17</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1980</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">800.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token class-name">ProjectRecord</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7499</span><span class="token punctuation">,</span> pid<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> emp<span class="token operator">=</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7499</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>ALLEN<span class="token punctuation">,</span> job<span class="token operator">=</span>SALESMAN<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7698</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Fri</span> <span class="token class-name">Feb</span> <span class="token number">20</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">1600.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token number">300.0</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token class-name">ProjectRecord</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7521</span><span class="token punctuation">,</span> pid<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> emp<span class="token operator">=</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7521</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>WARD<span class="token punctuation">,</span> job<span class="token operator">=</span>SALESMAN<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7698</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Sun</span> <span class="token class-name">Feb</span> <span class="token number">22</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">1250.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token number">500.0</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="8-2-级联查询"><a href="#8-2-级联查询" class="headerlink" title="8.2 级联查询"></a>8.2 级联查询</h3><ul><li>级联查询，顾名思义，就是利于数据库表间的外键关联关系进行自动的级联查询操作。使用MyBatis实现级联查询，除了<code>实体类</code>增加关联属性外，还需要在<code>映射文件</code>中进行配置</li><li><code>个人理解</code>：将一个xml比喻为一个类，类中的 select 等标签为类的属性，所以级联查询更像是一个类去调用其他类中的方法，只不过多了映射等操作(映射这些操作也可以理解为类中添加属性)</li></ul><hr><h4 id="8-2-1-立即加载"><a href="#8-2-1-立即加载" class="headerlink" title="8.2.1 立即加载"></a>8.2.1 立即加载</h4><ul><li><code>需求</code>：根据部门编号查询员工信息</li><li><code>emp mapper 接口</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 根据部门编号查询所对应的员工编号 * @param deptno * @return */</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> <span class="token function">findEmpsByDeptno</span><span class="token punctuation">(</span><span class="token keyword">int</span> deptno<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>dept mapper 接口</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 根据部门编号查询员工信息 * @param deptno 部门编号 * @return  部门信息对象 */</span><span class="token class-name">Dept</span> <span class="token function">findDeptByDeptno</span><span class="token punctuation">(</span><span class="token keyword">int</span> deptno<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>emp xml 映射代码</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findEmpsByDeptno<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select * from emp where deptno = #&#123;deptno&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><code>dept xml 映射代码</code><ul><li><code>collection 属性</code>:</li><li><code>select=&quot;&quot;</code> 调用的另一个SQL语句</li><li><code>javaType=&quot;&quot;</code> 实体类的属性数据类型</li><li><code>column=&quot;&quot;</code> 给另一个SQL语句传入的参数列</li><li><code>jdbcType=&quot;&quot;</code> 参数对应JDBC的数据类型</li><li><code>fetchType=&quot;&quot;</code> 加载方式 eager 积极加载 lazy延迟加载</li></ul></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptJoinEmps<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dept<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dname<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dname<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loc<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loc<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collection</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empList<span class="token punctuation">"</span></span>                    <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.mapper.EmpMapper.findEmpsByDeptno<span class="token punctuation">"</span></span>                    <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptno<span class="token punctuation">"</span></span>                    <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span>                    <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span>                    <span class="token attr-name">fetchType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>eager<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>findDeptByDeptno<span class="token punctuation">"</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deptJoinEmps<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from dept where deptno = #&#123;deptno&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findDeptByDeptnoTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">DeptMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DeptMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Dept</span> deptByDeptno <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">findDeptByDeptno</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>deptByDeptno <span class="token operator">+</span> <span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Emp</span><span class="token punctuation">></span></span> empList <span class="token operator">=</span> deptByDeptno<span class="token punctuation">.</span><span class="token function">getEmpList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    empList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试结果</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Dept</span><span class="token punctuation">(</span>deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dname<span class="token operator">=</span>RESEARCH<span class="token punctuation">,</span> loc<span class="token operator">=</span>DALLAS<span class="token punctuation">,</span> empList<span class="token operator">=</span><span class="token punctuation">[</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7369</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>SMITH<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7902</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Wed</span> <span class="token class-name">Dec</span> <span class="token number">17</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1980</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">800.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7566</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>JONES<span class="token punctuation">,</span> job<span class="token operator">=</span>MANAGER<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7839</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Thu</span> <span class="token class-name">Apr</span> <span class="token number">02</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">2975.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7788</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>SCOTT<span class="token punctuation">,</span> job<span class="token operator">=</span>ANALYST<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7566</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Sun</span> <span class="token class-name">Apr</span> <span class="token number">19</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CDT</span> <span class="token number">1987</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">3000.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7876</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>ADAMS<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7788</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Sat</span> <span class="token class-name">May</span> <span class="token number">23</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CDT</span> <span class="token number">1987</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">1100.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7902</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>FORD<span class="token punctuation">,</span> job<span class="token operator">=</span>ANALYST<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7566</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Thu</span> <span class="token class-name">Dec</span> <span class="token number">03</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">3000.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7369</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>SMITH<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7902</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Wed</span> <span class="token class-name">Dec</span> <span class="token number">17</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1980</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">800.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7566</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>JONES<span class="token punctuation">,</span> job<span class="token operator">=</span>MANAGER<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7839</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Thu</span> <span class="token class-name">Apr</span> <span class="token number">02</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">2975.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7788</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>SCOTT<span class="token punctuation">,</span> job<span class="token operator">=</span>ANALYST<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7566</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Sun</span> <span class="token class-name">Apr</span> <span class="token number">19</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CDT</span> <span class="token number">1987</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">3000.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7876</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>ADAMS<span class="token punctuation">,</span> job<span class="token operator">=</span>CLERK<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7788</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Sat</span> <span class="token class-name">May</span> <span class="token number">23</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CDT</span> <span class="token number">1987</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">1100.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token class-name">Emp</span><span class="token punctuation">(</span>empno<span class="token operator">=</span><span class="token number">7902</span><span class="token punctuation">,</span> ename<span class="token operator">=</span>FORD<span class="token punctuation">,</span> job<span class="token operator">=</span>ANALYST<span class="token punctuation">,</span> mgr<span class="token operator">=</span><span class="token number">7566</span><span class="token punctuation">,</span> hiredate<span class="token operator">=</span><span class="token class-name">Thu</span> <span class="token class-name">Dec</span> <span class="token number">03</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span> <span class="token class-name">CST</span> <span class="token number">1981</span><span class="token punctuation">,</span> sal<span class="token operator">=</span><span class="token number">3000.0</span><span class="token punctuation">,</span> comm<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> deptno<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> dept<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="8-2-2-延迟加载"><a href="#8-2-2-延迟加载" class="headerlink" title="8.2.2 延迟加载"></a>8.2.2 延迟加载</h4><ul><li><strong>延迟加载，又称按需加载</strong>: 延迟加载的内容等到真正使用时才去进行加载（查询）。多用在关联对象或集合中</li><li><code>优点</code>:<ul><li>先单表查询、需要时再从关联表去关联查询，大大降低数据库在单位时间内的查询工作量,将工作在<code>时间上的分配更加均匀</code></li><li>单表要比关联查询多张表<code>速度要快</code></li></ul></li><li><code>设置延迟加载</code><ul><li><code>第一步</code>：<ul><li><p>打开 <code>全局开关</code>，在 <code>sqlMapConfig.xml</code> 中打开延迟加载的开关。配置完成后所有的 <code>association</code> 和 <code>collection</code> 元素都生效</p><ul><li>&#96;&#96;&#96;xml  <settings>      <setting name="lazyLoadingEnabled" value="true"/>      <setting name="aggressiveLazyLoading" value="true"/>  </settings>  <pre class="line-numbers language-none"><code class="language-none">        - &#96;lazyLoadingEnabled&#96;：是否开启延迟加载。是Mybatis是否启用懒加载的全局开关。当开启时，所有关联对象都会延迟加载。特定关联关系中可通过设置 &#96;fetchType&#96; 属性来覆盖该项的开关状态        - &#96;aggressiveLazyLoading&#96;：当开启时，任何方法的调用都会懒加载对象的所有属性。否则，每个属性会按需加载,- &#96;第二步&#96;：    - 分开关，指定的 &#96;association和collection&#96; 元素中配置 &#96;fetchType&#96; 属性        - &#96;&#96;&#96;xml            &lt;collection property&#x3D;&quot;empList&quot;                        select&#x3D;&quot;top.mikevane.mapper.EmpMapper.findEmpsByDeptno&quot;                        column&#x3D;&quot;deptno&quot;                        javaType&#x3D;&quot;list&quot;                        jdbcType&#x3D;&quot;INTEGER&quot;                        fetchType&#x3D;&quot;lazy&quot;                        &#x2F;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>eager：表示立刻加载；lazy：表示延迟加载。<code>将覆盖全局延迟设置</code></p></li></ul></li></ul></li></ul><hr><h3 id="8-3-多表查询总结与拓展"><a href="#8-3-多表查询总结与拓展" class="headerlink" title="8.3 多表查询总结与拓展"></a>8.3 多表查询总结与拓展</h3><ul><li><code>resultMap中的常见属性</code></li></ul><table><thead><tr><th><strong>属性</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><strong>property</strong></td><td>需要映射到JavaBean 的属性名称。</td></tr><tr><td><strong>javaType</strong></td><td>property的类型，一个完整的类名，或者是一个类型别名。如果你匹配的是一个JavaBean，那MyBatis 通常会自行检测到。</td></tr><tr><td><strong>column</strong></td><td>数据表的列名或者列别名。</td></tr><tr><td><strong>jdbcType</strong></td><td>column在数据库表中的类型。这个属性只在insert,update  或delete 的时候针对允许空的列有用。JDBC 需要这项，但MyBatis 不需要。</td></tr><tr><td><strong>typeHandler</strong></td><td>使用这个属性可以覆写类型处理器，实现javaType、jdbcType之间的相互转换。一般可以省略，会探测到使用的什么类型的typeHandler进行处理</td></tr><tr><td><strong>fetchType</strong></td><td>自动延迟加载</td></tr><tr><td><strong>select</strong></td><td>association、collection的属性，使用哪个查询查询属性的值，要求指定namespace+id的全名称</td></tr><tr><td><strong>ofType</strong></td><td>collection的属性，指明集合中元素的类型（即泛型类型）</td></tr></tbody></table><hr><ul><li><code>级联查询和多表查询的比较及其选择</code></li></ul><table><thead><tr><th></th><th><strong>级联查询</strong></th><th><strong>多表查询</strong></th></tr></thead><tbody><tr><td><strong>SQL语句数量</strong></td><td>多条</td><td>一条</td></tr><tr><td><strong>性能</strong></td><td>性能低</td><td>性能高</td></tr><tr><td><strong>延迟加载</strong></td><td>立即加载、延迟加载</td><td>只有立即加载</td></tr><tr><td><strong>灵活性</strong></td><td>更灵活</td><td>不灵活</td></tr><tr><td><strong>SQL****难易度</strong></td><td>简单</td><td>复杂</td></tr><tr><td><strong>选择依据</strong></td><td>简单、灵活</td><td>高性能</td></tr></tbody></table><hr><ul><li><code>ResultType和ResultMap使用场景</code><ol><li>如果你做的是单表的查询并且封装的实体和数据库的字段一一对应  resultType</li><li>如果实体封装的属性和数据库的字段不一致 resultMap</li><li>使用N+1级联查询的时候  resultMap</li><li>使用的是多表的连接查询 resultMap</li></ol></li></ul><hr><ul><li><code>一对一关联映射的实现</code><ol><li>实例：学生和学生证、雇员和工牌</li><li>数据库层次：主键关联或者外键关联（参看之前内容）</li><li>MyBatis层次：在映射文件的设置双方均使用association即可，用法相同</li></ol></li></ul><hr><ul><li><code>多对多映射的实现</code><ol><li>实例：学生和课程、用户和角色</li><li>数据库层次：引入一个中间表将一个多对多转为两个一对多</li><li>MyBatis层次<ul><li>方法1：在映射文件的设置双方均使用collection即可，不用引入中间类</li><li>方法2：引入中间类和中间类的映射文件，按照两个一对多处理</li></ul></li></ol></li></ul><hr><ul><li><code>自关联映射</code><ol><li>实例：Emp表中的员工和上级。一般是一对多关联</li><li>数据库层次：外键参考当前表的主键（比如mgr参考empno）</li><li>MyBatis层次：按照一对多处理，但是增加的属性都写到一个实体类中，增加的映射也都写到一个映射文件中</li></ol></li></ul><hr><h2 id="9-MyBatis-注解开发"><a href="#9-MyBatis-注解开发" class="headerlink" title="9 MyBatis 注解开发"></a>9 MyBatis 注解开发</h2><ul><li><code>使用场景</code><ul><li>使用Auto Mapping时使用注解非常简单，不需要频繁的在接口和mapper.xml两个文件之间进行切换</li><li>但是必须配置resultMap时使用注解将会变得很麻烦，这种情况下推荐使用mapper.xml进行配置</li><li>MyBatis支持纯注解方式，支持纯mapper.xml方式，也支持注解和mapper.xml混合形式。当只有接口没有mapper.xml时在mybatis.cfg.xml中可以通过&lt;mapper class&#x3D;””&gt;&lt;&#x2F;mapper&gt;加载接口类。如果是混合使用时，使用&lt;package name&#x3D;””&#x2F;&gt;。此方式一直是官方推荐方式。</li><li>如果某个功能同时使用两种方式进行配置，XML方式将覆盖注解方式</li></ul></li></ul><hr><h3 id="9-1-使用注解完成-CRUD"><a href="#9-1-使用注解完成-CRUD" class="headerlink" title="9.1 使用注解完成 CRUD"></a>9.1 使用注解完成 CRUD</h3><ul><li><code>mapper 接口</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * from dept where deptno =#&#123;deptno&#125;"</span><span class="token punctuation">)</span><span class="token class-name">Dept</span> <span class="token function">findByDeptno</span><span class="token punctuation">(</span><span class="token keyword">int</span> deptno<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Update</span><span class="token punctuation">(</span><span class="token string">"update dept set dname =#&#123;dname&#125;, loc =#&#123;loc&#125; where deptno =#&#123;deptno&#125;"</span><span class="token punctuation">)</span><span class="token keyword">int</span> <span class="token function">updateDept</span><span class="token punctuation">(</span><span class="token class-name">Dept</span> dept<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Insert</span><span class="token punctuation">(</span><span class="token string">"insert into dept values(DEFAULT,#&#123;dname&#125;,#&#123;loc&#125;)"</span><span class="token punctuation">)</span><span class="token keyword">int</span> <span class="token function">addDept</span><span class="token punctuation">(</span><span class="token class-name">Dept</span> dept<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Delete</span><span class="token punctuation">(</span><span class="token string">"delete from dept where deptno =#&#123;deptno&#125;"</span><span class="token punctuation">)</span><span class="token keyword">int</span> <span class="token function">removeDept</span><span class="token punctuation">(</span><span class="token keyword">int</span> deptno<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findByDeptnoTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token class-name">DeptMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DeptMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token class-name">Dept</span> dept <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">findByDeptno</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dept<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token annotation punctuation">@Test</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addDeptTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token class-name">DeptMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DeptMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     mapper<span class="token punctuation">.</span><span class="token function">addDept</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Dept</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">"北京"</span><span class="token punctuation">,</span><span class="token string">"天安门"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token annotation punctuation">@Test</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateDept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token class-name">DeptMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DeptMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     mapper<span class="token punctuation">.</span><span class="token function">updateDept</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Dept</span><span class="token punctuation">(</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token string">"重庆"</span><span class="token punctuation">,</span><span class="token string">"南岸"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token annotation punctuation">@Test</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeDept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token class-name">DeptMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DeptMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     mapper<span class="token punctuation">.</span><span class="token function">removeDept</span><span class="token punctuation">(</span><span class="token number">41</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="9-2-注解和XML的优缺点"><a href="#9-2-注解和XML的优缺点" class="headerlink" title="9.2 注解和XML的优缺点"></a>9.2 注解和XML的优缺点</h3><table><thead><tr><th></th><th><strong>XML</strong></th><th><strong>注解</strong></th></tr></thead><tbody><tr><td><strong>优点</strong></td><td>1.类和类之间的解耦  <br>2.利于修改。直接修改XML文件，无需到源代码中修改。<br>3.配置集中在XML中，对象间关系一目了然，利于快速了解项目和维护  4.容易和其他系统进行数据交交换</td><td>1.简化配置  <br>2.使用起来直观且容易，提升开发效率  <br/>3.类型安全，编译器进行校验，不用等到运行期才会发现错误。  <br/>4.注解的解析可以不依赖于第三方库，可以直接使用Java自带的反射</td></tr></tbody></table><hr><h2 id="10-缓存"><a href="#10-缓存" class="headerlink" title="10 缓存"></a>10 缓存</h2><ul><li><code>概念</code>：缓存是一种临时存储少量数据至内存或者是磁盘的一种技术.，它可以减少数据的加载次数,降低工作量,提高程序响应速度<ul><li>MyBatis允许使用缓存，缓存一般放置在高速读&#x2F;写的存储器上，比如服务器的内存，能够有效的提供系统性能</li><li>MyBatis分为 <code>一级缓存和二级缓存</code>，同时也可配置关于缓存设置</li></ul></li><li><code>一级缓存与二级缓存</code>：<ul><li>一级存储是SqlSession上的缓存</li><li>二级缓存是在SqlSessionFactory(namespace)上的缓存</li><li>默认情况下，MyBatis开启一级缓存，没有开启二级缓存。当数据量大的时候可以借助一些第三方缓存框架或Redis缓存来协助保存Mybatis的二级缓存数据</li></ul></li></ul><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/MyBatis/image-20220805164147205.png" alt="概念图"></p><hr><h3 id="10-1-一级缓存"><a href="#10-1-一级缓存" class="headerlink" title="10.1 一级缓存"></a>10.1 一级缓存</h3><ul><li>一级存储是SqlSession上的缓存，默认开启，是一种内存型缓存,不要求实体类对象实现Serializable接口<ul><li><code>缓存中的数据使用键值对形式存储数据namespace+sqlid+args+offset&gt;&gt;&gt; hash值作为键, 查询出的结果作为值</code></li></ul></li></ul><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/MyBatis/image-20220805164314138.png" alt="一级缓存原理图"></p><ul><li><code>注意</code>：当 <code>中间发生了增删改</code>或者<code>SqlSession</code> 调用了 <code>commit</code> ,会 <code>自动清空缓存</code></li></ul><hr><h4 id="10-1-1-证明一级缓存是SqlSession上的缓存"><a href="#10-1-1-证明一级缓存是SqlSession上的缓存" class="headerlink" title="10.1.1 证明一级缓存是SqlSession上的缓存"></a>10.1.1 证明一级缓存是SqlSession上的缓存</h4><ul><li>首先，设置一个简单的查询：根据员工编号查询员工信息</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * from emp where empno = #&#123;empno&#125;"</span><span class="token punctuation">)</span><span class="token class-name">Emp</span> <span class="token function">selectByEmpno</span><span class="token punctuation">(</span><span class="token keyword">int</span> empno<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>通过 <code>mapper</code> 执行两次查询操作，并判断两次查询得到的对象是否为同一对象</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectByEmpnoTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">EmpMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Emp</span> emp1 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectByEmpno</span><span class="token punctuation">(</span><span class="token number">7934</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Emp</span> emp2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectByEmpno</span><span class="token punctuation">(</span><span class="token number">7934</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>emp1 <span class="token operator">==</span> emp2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>输出结果为：<code>true</code>，说明两次查询到的对象为同一对象，但两次查询的操作都是<code>同一个 mapper</code> 调用，所以还需要证明不同 mapper 查询到的对象仍为同一对象</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectByEmpnoTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">EmpMapper</span> mapper1 <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">EmpMapper</span> mapper2 <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Emp</span> emp1 <span class="token operator">=</span> mapper1<span class="token punctuation">.</span><span class="token function">selectByEmpno</span><span class="token punctuation">(</span><span class="token number">7934</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Emp</span> emp2 <span class="token operator">=</span> mapper1<span class="token punctuation">.</span><span class="token function">selectByEmpno</span><span class="token punctuation">(</span><span class="token number">7934</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mapper1 <span class="token operator">==</span> mapper2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>emp1 <span class="token operator">==</span> emp2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>输出结果为：<code>false true</code>，证明了<code>不同 mapper 调用同一查询方法，获取到的对象是同一对象</code></li><li>现在只是证明了 <code>mapper</code> 与查询到的结果无关，不能说明一级缓存是SqlSession上的缓存，所以对 <code>SqlSession</code> 进行证明</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectByEmpnoTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">SqlSession</span> sqlSession1 <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">EmpMapper</span> mapper1 <span class="token operator">=</span> sqlSession1<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Emp</span> emp1 <span class="token operator">=</span> mapper1<span class="token punctuation">.</span><span class="token function">selectByEmpno</span><span class="token punctuation">(</span><span class="token number">7934</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">SqlSession</span> sqlSession2 <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">EmpMapper</span> mapper2 <span class="token operator">=</span> sqlSession2<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Emp</span> emp2 <span class="token operator">=</span> mapper2<span class="token punctuation">.</span><span class="token function">selectByEmpno</span><span class="token punctuation">(</span><span class="token number">7934</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mapper1 <span class="token operator">==</span> mapper2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>emp1 <span class="token operator">==</span> emp2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>输出结果为：<code>false false</code>，说明分别获取了 <code>SqlSession</code> 后再进行同样的操作后，获取到的 <code>emp对象是不同的</code>，这证明了 <code>一级缓存是SqlSession上的缓存</code></li></ul><hr><h3 id="10-2-二级缓存"><a href="#10-2-二级缓存" class="headerlink" title="10.2 二级缓存"></a>10.2 二级缓存</h3><ul><li><p>二级缓存是以 <code>namespace</code> 为标记的缓存，可以是由一个 <code>SqlSessionFactory</code> 创建的 <code>SqlSession</code> 之间共享缓存数据</p><ul><li><code>默认不开启</code></li><li>要求实体类必须实现 <code>序列化接口</code></li></ul></li><li><p><code>开启二级缓存</code></p></li></ul><ol><li><code>全局开关</code>：在 <code>sqlMapConfig.xml</code> 文件中的&lt;settings&gt;标签配置开启二级缓存</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cacheEnabled<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="2"><li><code>分开关</code>：在要开启二级缓存的mapper文件中开启缓存</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.msb.mapper.Emp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="3"><li><code>序列化对象</code>：二级缓存未必完全使用内存,有可能占用硬盘存储,缓存中存储的JavaBean对象必须实现序列化接口</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Emp</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意：在 <code>commit()或者close()</code> 的时候数据才会被放入到二级缓存</p></blockquote><hr><ul><li><code>示例</code>：使用二级缓存实现通过员工编号查询员工信息的功能</li><li><code>mapper 接口</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Emp</span> <span class="token function">selectByEmpno</span><span class="token punctuation">(</span><span class="token keyword">int</span> empno<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>xml 映射文件</code></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectByEmpno<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo.Emp<span class="token punctuation">"</span></span> <span class="token attr-name">useCache</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">flushCache</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select * from emp where empno = #&#123;empno&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><code>测试代码</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectByEmpnoTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">EmpMapper</span> mapper1 <span class="token operator">=</span> sqlSession1<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Emp</span> emp1 <span class="token operator">=</span> mapper1<span class="token punctuation">.</span><span class="token function">selectByEmpno</span><span class="token punctuation">(</span><span class="token number">7934</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>emp1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//提交sqlSession，将结果放入二级缓存</span>    sqlSession1<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">EmpMapper</span> mapper2 <span class="token operator">=</span> sqlSession2<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Emp</span> emp2 <span class="token operator">=</span> mapper2<span class="token punctuation">.</span><span class="token function">selectByEmpno</span><span class="token punctuation">(</span><span class="token number">7934</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>emp2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>测试结果</code><ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/MyBatis/image-20220805225221955.png" alt="运行结果"></li><li>可以发现，只查询了一次数据库，说明实现了二级缓存</li></ul></li></ul><hr><ul><li><p><code>注意</code>：</p><ol><li><p>MyBatis的二级缓存的缓存介质有多种多样，而并不一定是在内存中，所以需要对 <code>JavaBean对象实现序列化接口</code></p></li><li><p>二级缓存是以 <code>namespace 为单位</code> 的，不同 namespace 下的操作互不影响</p></li><li><p>加入Cache元素后，会对相应命名空间所有的 <code>select</code> 元素查询结果进行缓存，而其中的 <code>insert、update、delete 在操作是会清空整个namespace的缓存</code></p></li><li><p>cache 有一些可选的属性 type, eviction, flushInterval, size, readOnly, blocking</p><ul><li><table><thead><tr><th><strong>属性</strong></th><th>含义</th><th>默认值</th></tr></thead><tbody><tr><td><code>type</code></td><td>自定义缓存类，要求实现org.apache.ibatis.cache.Cache接口</td><td>null</td></tr><tr><td><code>readOnly</code></td><td>是否只读  <br/>true:给所有调用者返回缓存对象的相同实例。因此这些对象不能被修改。这提供了很重要的性能优势。  <br/>false:会返回缓存对象的拷贝(通过序列化) 。这会慢一些,但是安全</td><td>false</td></tr><tr><td><code>eviction</code></td><td><code>缓存策略  LRU（默认）</code> – 最近最少使用：移除最长时间不被使用的对象<br><code>FIFO</code> – 先进先出：按对象进入缓存的顺序来移除它们<br/><code>SOFT</code> – 软引用：基于垃圾回收器状态和软引用规则移除对象。  <br/><code>WEAK</code> – 弱引用：更积极地基于垃圾收集器状态和弱引用规则移除对象</td><td>LRU</td></tr><tr><td><code>flushInterval</code></td><td><code>刷新间隔，毫秒为单位</code><br>默认为null，也就是没有刷新间隔，只有执行update、insert、delete语句才会刷新</td><td>null</td></tr><tr><td><code>size</code></td><td>缓存对象个数</td><td>1024</td></tr><tr><td><code>blocking</code></td><td>是否使用 <code>阻塞性缓存BlockingCache</code>  <br/>true：在查询缓存时锁住对应的Key，如果缓存命中了则会释放对应的锁，否则会在查询数据库以后再释放锁，保证只有一个线程到数据库中查找指定key对应的数据  <br/>false：不使用阻塞性缓存，性能更好</td><td>false</td></tr></tbody></table></li></ul></li><li><p>如果在加入Cache元素的前提下让个别select 元素不使用缓存，可以使用useCache属性，设置为false</p><ul><li><code>useCache</code> 控制当前sql语句是否启用缓存</li><li><code>flushCache</code> 控制当前sql执行一次后是否刷新缓存</li></ul></li></ol></li></ul><hr><h3 id="10-3-三方缓存"><a href="#10-3-三方缓存" class="headerlink" title="10.3 三方缓存"></a>10.3 三方缓存</h3><ul><li><code>分布式缓存框架</code>：我们系统为了提高系统并发 和性能，一般对系统进行分布式部署（集群部署方式）不适用分布缓存， 缓存的数据在各个服务单独存储，不方便系统开发。所以要使用分布式缓存对缓存数据进行集中管理.ehcache,redis ,memcache缓存框架</li><li><code>Ehcache</code>：是一种广泛使用的开源java分布式缓存。主要面向通用缓存，javaEE 和 轻量级容器。它具有内存和磁盘存储功能。被用于大型复杂分布式web application的<ul><li>这里的三方缓存是作为二级缓存使用的</li></ul></li><li><code>配置步骤</code></li></ul><ol><li>导入依赖</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis.caches<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-ehcache<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>net.sf.ehcache<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>ehcache<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.10.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>在sql映射文件里,开启二级缓存,并把缓存类型指定为EhcacheCache</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.mybatis.caches.ehcache.EhcacheCache<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>在资源目录下放置一个缓存配置文件,文件名为: ehcache.xml 内容如下</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ehcache</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>noNamespaceSchemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ehcache.xsd<span class="token punctuation">"</span></span>         <span class="token attr-name">updateCheck</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">monitoring</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>autodetect<span class="token punctuation">"</span></span>         <span class="token attr-name">dynamicConfig</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>diskStore</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>D:\msb\ehcache<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>defaultCache</span>            <span class="token attr-name">maxElementsInMemory</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1000<span class="token punctuation">"</span></span>            <span class="token attr-name">maxElementsOnDisk</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10000000<span class="token punctuation">"</span></span>            <span class="token attr-name">eternal</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>            <span class="token attr-name">overflowToDisk</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>            <span class="token attr-name">timeToIdleSeconds</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span>            <span class="token attr-name">timeToLiveSeconds</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span>            <span class="token attr-name">diskExpiryThreadIntervalSeconds</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span>            <span class="token attr-name">memoryStoreEvictionPolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LRU<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>defaultCache</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ehcache</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>Cache配置</code><ul><li><code>name</code>：Cache的唯一标识</li><li><code>maxElementsInMemory</code>：内存中最大缓存对象数。</li><li><code>maxElementsOnDisk</code>：磁盘中最大缓存对象数，若是0表示无穷大。</li><li><code>eternal</code>：Element是否永久有效，一但设置了，timeout将不起作用。</li><li><code>overflowToDisk</code>：配置此属性，当内存中Element数量达到maxElementsInMemory时，Ehcache将会Element写到磁盘中。</li><li><code>timeToIdleSeconds</code>：设置Element在失效前的允许闲置时间。仅当element不是永久有效时使用，可选属性，默认值是0，也就是可闲置时间无穷大。</li><li><code>timeToLiveSeconds</code>：设置Element在失效前允许存活时间。最大时间介于创建时间和失效时间之间。仅当element不是永久有效时使用，默认是0.，也就是element存活时间无穷大。</li><li><code>diskExpiryThreadIntervalSeconds</code>：磁盘失效线程运行时间间隔，默认是120秒。</li><li><code>diskSpoolBufferSizeMB</code>：这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区。</li><li><code>memoryStoreEvictionPolicy</code>：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。默认策略是LRU（最近最少使用）。你可以设置为FIFO（先进先出）或是LFU（较少使用）</li></ul></li></ul><hr><h2 id="11-逆向工程"><a href="#11-逆向工程" class="headerlink" title="11 逆向工程"></a>11 逆向工程</h2><ul><li><code>逆向工程</code>：可以针对单表 <code>自动生成</code> MyBatis执行所需要的代码（包括mapper.xml，mapper.java，pojo）<ul><li>一般在开发中，常用的逆向工程方式是通过 <code>数据库的表生成代码</code></li></ul></li><li><code>开发步骤</code></li></ul><ol><li>创建maven项目 <code>导入逆向工程依赖</code></li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!-- mysql驱动包 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>8.0.16<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 日志包，方便查看执行信息--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>slf4j-log4j12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.6.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 代码生成工具jar --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis.generator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-generator-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.3.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><code>配置逆向工程配置文件</code>：在resources目录下放置一个名为generatorConfig.xml的配置文件,文件内容如下</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">generatorConfiguration</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>generatorConfiguration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>testTables<span class="token punctuation">"</span></span> <span class="token attr-name">targetRuntime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MyBatis3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>commentGenerator</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>suppressAllComments<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>commentGenerator</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--数据库连接的信息：驱动类、连接地址、用户名、密码 --></span>        <span class="token comment">&lt;!-- &lt;jdbcConnection driverClass="com.mysql.jdbc.Driver"           connectionURL="jdbc:mysql://localhost:3306/mybatis" userId="root"           password="123">        &lt;/jdbcConnection> --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdbcConnection</span> <span class="token attr-name">driverClass</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mysql.cj.jdbc.Driver<span class="token punctuation">"</span></span>                        <span class="token attr-name">connectionURL</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc:mysql://127.0.0.1:3306/mydb?useSSL=false<span class="token entity named-entity" title="&amp;">&amp;amp;</span>useUnicode=true<span class="token entity named-entity" title="&amp;">&amp;amp;</span>characterEncoding=UTF-8<span class="token entity named-entity" title="&amp;">&amp;amp;</span>serverTimezone=Asia/Shanghai<span class="token entity named-entity" title="&amp;">&amp;amp;</span>allowPublicKeyRetrieval=true<span class="token punctuation">"</span></span>                        <span class="token attr-name">userId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span>                        <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>123456<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdbcConnection</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和           NUMERIC 类型解析为java.math.BigDecimal --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaTypeResolver</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>forceBigDecimals<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>javaTypeResolver</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- targetProject:生成PO类的位置 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaModelGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.pojo<span class="token punctuation">"</span></span>                            <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.\src<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>enableSubPackages<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token comment">&lt;!-- 从数据库返回的值被清理前后的空格 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>trimStrings<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>javaModelGenerator</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- targetProject:mapper映射文件生成的位置 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sqlMapGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.mapper<span class="token punctuation">"</span></span>                         <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.\src<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>enableSubPackages<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sqlMapGenerator</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- targetPackage：mapper接口生成的位置 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaClientGenerator</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>XMLMAPPER<span class="token punctuation">"</span></span>                             <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.mikevane.mapper<span class="token punctuation">"</span></span>                             <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.\src<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>enableSubPackages<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>javaClientGenerator</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 指定数据库表 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">tableName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emp<span class="token punctuation">"</span></span> <span class="token attr-name">domainObjectName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Emp<span class="token punctuation">"</span></span>               <span class="token attr-name">enableCountByExample</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableUpdateByExample</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableDeleteByExample</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>               <span class="token attr-name">enableSelectByExample</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">selectByExampleQueryId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>columnOverride</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Integer<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>generatorConfiguration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>配置log4j（检查是否运行成功）</li><li>运行逆向工程代码</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>mikevane<span class="token punctuation">.</span>generator</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">MyBatisGenerator</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>config<span class="token punctuation">.</span>xml<span class="token punctuation">.</span></span><span class="token class-name">ConfigurationParser</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span><span class="token class-name">DefaultShellCallback</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token comment">/** * */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GeneratorSqlmap</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">&#123;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> warnings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> overwrite <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token class-name">File</span> configFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"D:\\Learning\\Coding\\java\\ssm\\mabatis\\target\\classes\\generatorConfig.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ConfigurationParser</span> cp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConfigurationParser</span><span class="token punctuation">(</span>warnings<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Configuration</span> config <span class="token operator">=</span> cp<span class="token punctuation">.</span><span class="token function">parseConfiguration</span><span class="token punctuation">(</span>configFile<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">DefaultShellCallback</span> callback <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultShellCallback</span><span class="token punctuation">(</span>overwrite<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">MyBatisGenerator</span> myBatisGenerator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyBatisGenerator</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span>                callback<span class="token punctuation">,</span> warnings<span class="token punctuation">)</span><span class="token punctuation">;</span>        myBatisGenerator<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">GeneratorSqlmap</span> generatorSqlmap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GeneratorSqlmap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            generatorSqlmap<span class="token punctuation">.</span><span class="token function">generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>生成文件后，根据需要使用<ul><li><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/ssm/MyBatis/image-20220806003437421.png" alt="生成的文件"></li></ul></li></ol><hr><h2 id="12-main目录下XML文件编译问题"><a href="#12-main目录下XML文件编译问题" class="headerlink" title="12 main目录下XML文件编译问题"></a>12 main目录下XML文件编译问题</h2><ul><li>有时候，可能会选择将 <code>配置文件或其他文件</code> 与 <code>java代码</code> 放置到 <code>同一个目录</code> 下，这时候maven不会编译 <code>src目录</code> 下非java的文件，需要配置相关属性才可以编译相应后缀的文件</li><li>在 <code>pom.xml</code> 中配置以下信息</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--告诉maven将项目源码中的xml文件也进行编译，并放到编译目录中--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>这样maven就可以编译 <code>src目录</code> 下的指定文件了</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算机网络】URL的基本格式以及常用URL</title>
      <link href="/2022/02/09/categories/wang-luo/ji-suan-ji-wang-luo-url-de-ji-ben-ge-shi-yi-ji-chang-yong-url/"/>
      <url>/2022/02/09/categories/wang-luo/ji-suan-ji-wang-luo-url-de-ji-ben-ge-shi-yi-ji-chang-yong-url/</url>
      
        <content type="html"><![CDATA[<ul><li>URL的基本格式：<strong>protocol:&#x2F;&#x2F;hostname&#x2F;path</strong></li></ul><table><thead><tr><th>协议</th><th>通用语法</th><th></th></tr></thead><tbody><tr><td>IP</td><td>&#x2F;&#x2F;<user>:<password>@<host>:<port>&#x2F;<url-path></td><td></td></tr><tr><td>FTP</td><td><cwd1>&#x2F;<cwd2>&#x2F;…&#x2F;<cwdN>&#x2F;<name>;type&#x3D;<typecode></td><td></td></tr><tr><td>HTTP</td><td>http:&#x2F;&#x2F;<host>:<port>&#x2F;<path>?<searchpart></td><td></td></tr><tr><td>Gopher</td><td>gopher:&#x2F;&#x2F;<host>:<port>&#x2F;<gopher-path></td><td></td></tr><tr><td>TELNET</td><td>telnet:&#x2F;&#x2F;<user>:<password>@<host>:<port>&#x2F;</td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算机网络】电路交换与分组交换的区别</title>
      <link href="/2022/01/17/categories/wang-luo/ji-suan-ji-wang-luo-dian-lu-jiao-huan-yu-fen-zu-jiao-huan-de-qu-bie/"/>
      <url>/2022/01/17/categories/wang-luo/ji-suan-ji-wang-luo-dian-lu-jiao-huan-yu-fen-zu-jiao-huan-de-qu-bie/</url>
      
        <content type="html"><![CDATA[<ul><li><h3 id="电路交换与分组交换的区别"><a href="#电路交换与分组交换的区别" class="headerlink" title="电路交换与分组交换的区别"></a>电路交换与分组交换的区别</h3><table><thead><tr><th></th><th>电路交换</th><th>分组交换</th></tr></thead><tbody><tr><td>数据传输过程</td><td>i) 连接建立。 ii) 数据传输。 iii) 连接释放</td><td>直接发生数据传输</td></tr><tr><td>地址</td><td>在电路交换中，每个数据单元都知道由源提供的<strong>整个</strong>路径地址</td><td>每个数据单元只知道最终目的地址<strong>中间</strong>路径，并且这个路径是由路由器决定的</td></tr><tr><td>数据处理</td><td>数据仅在源系统处理</td><td>数据在包括源系统在内的所有中间节点上进行处理</td></tr><tr><td>延迟</td><td>数据单元之间的延迟一致</td><td>数据单元之间的延迟不均匀</td></tr><tr><td>资源预留</td><td>资源预留，因为数据传输的路径是固定的</td><td>没有资源预留，因为带宽在用户之间共享</td></tr><tr><td>可靠性</td><td>更可靠</td><td>不太可靠</td></tr><tr><td>浪费程度</td><td>资源浪费较多</td><td>资源浪费更少</td></tr><tr><td>存储转发</td><td>没有存储和转发技术</td><td>存在存储和转发技术</td></tr><tr><td>数据传输是否由单一对象传出</td><td>数据的传输由源完成</td><td>数据的传输不仅由源完成，还由中间路由器完成</td></tr><tr><td>拥塞对应的阶段</td><td>在连接建立阶段可能会发生拥塞，因为可能存在对通道发出请求但通道已被占用的情况</td><td>数据传输阶段可能会发生拥塞，大量数据包很快就会到来</td></tr><tr><td>双向性</td><td>不便于处理双边流量</td><td>适用于处理双边流量</td></tr><tr><td>成本计算</td><td>费用取决于时间和距离，而不取决于网络中的流量</td><td>费用基于字节数和连接时间</td></tr><tr><td>分组记录</td><td>永远不可能记录分组</td><td>可以记录分组</td></tr><tr><td>物理连接</td><td>源和目标之间有一条物理路径</td><td>源和目标之间没有物理路径</td></tr></tbody></table></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算机网络】HTTP的常用请求方法</title>
      <link href="/2022/01/17/categories/wang-luo/ji-suan-ji-wang-luo-http-de-chang-yong-qing-qiu-fang-fa/"/>
      <url>/2022/01/17/categories/wang-luo/ji-suan-ji-wang-luo-http-de-chang-yong-qing-qiu-fang-fa/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>请求</th><th>描述</th></tr></thead><tbody><tr><td>OPTIONS</td><td>The OPTIONS method represents a request for information about the communication options available on the request&#x2F;response chain identified by the Request-URI.</td></tr><tr><td><strong>GET</strong></td><td>The GET method means retrieve whatever information (in the form of an entity) is identified by the Request-URI.</td></tr><tr><td><strong>HEAD</strong></td><td>The HEAD method is identical to GET except that the server MUST NOT return a message-body in the response.</td></tr><tr><td><strong>POST</strong></td><td>The POST method is used to request that the origin server accept the entity enclosed in the request as a new subordinate of the resource identified by the Request-URI in the Request-Line.</td></tr><tr><td><strong>PUT</strong></td><td>The PUT method requests that the enclosed entity be stored under the supplied Request-URI.</td></tr><tr><td>DELETE</td><td>The DELETE method requests that the origin server delete the resource identified by the Request-URI.</td></tr><tr><td>TRACE</td><td>The TRACE method is used to invoke a remote, application-layer loopback of the request message.</td></tr><tr><td>CONNECT</td><td>This specification reserves the method name CONNECT for use with a proxy that can dynamically switch to being a tunnel (e.g. SSL tunneling [44]).</td></tr></tbody></table><ol><li>GET: Request data(including body)</li><li>HEAD: This method is often used for testing hypertext links for validity, accessibility,and recent modification.</li><li>POST: POST is designed to allow a unified method to overwrite specified items</li><li>PUT: If the Request-URI refers to an already existing resource, the enclosed entity SHOULD be considered as a modified version of the one residing on the origin server.</li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> HTTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算机网络】FDMA TDMA CDMA</title>
      <link href="/2022/01/17/categories/wang-luo/ji-suan-ji-wang-luo-fdma-tdma-cdma/"/>
      <url>/2022/01/17/categories/wang-luo/ji-suan-ji-wang-luo-fdma-tdma-cdma/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>FDMA</th><th>TDMA</th><th>CDMA</th></tr></thead><tbody><tr><td>FDMA 代表频分多址。</td><td>TDMA 代表时分多址。</td><td>CDMA 代表码分多址。</td></tr><tr><td>不同站之间共享带宽</td><td>仅发生卫星转发器的时间共享</td><td>不同站之间发生共享，即带宽和时间</td></tr><tr><td>不需要任何码字</td><td>不需要任何码字(codewords)</td><td>码字是必须的</td></tr><tr><td>相邻信道之间的保护带（guard bands）是必要的</td><td>相邻时隙的保护时间是必要的</td><td>保护带和保护时间都是必要的</td></tr><tr><td>不需要同步</td><td>需要同步</td><td>不需要同步</td></tr><tr><td>数据率低</td><td>数据速率中等</td><td>数据率很高</td></tr><tr><td>数据传输方式为连续信号</td><td>数据传输方式是突发信号</td><td>数据传输方式为数字信号</td></tr><tr><td>灵活性低</td><td>灵活性适中</td><td>灵活性很高</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【数据结构】图的类型与实现</title>
      <link href="/2022/01/17/categories/shu-ju-jie-gou/shu-ju-jie-gou-tu-de-lei-xing-yu-shi-xian/"/>
      <url>/2022/01/17/categories/shu-ju-jie-gou/shu-ju-jie-gou-tu-de-lei-xing-yu-shi-xian/</url>
      
        <content type="html"><![CDATA[<h1 id="图"><a href="#图" class="headerlink" title="图"></a>图</h1><h2 id="为什么要学习图"><a href="#为什么要学习图" class="headerlink" title="为什么要学习图"></a>为什么要学习图</h2><ul><li>之前的 <code>数据结构</code> 都不存在多对多的关系<ul><li><strong>线性表</strong>局限于<strong>一对一</strong></li><li><strong>树</strong>局限于<strong>一对多</strong></li></ul></li></ul><h2 id="图的类型"><a href="#图的类型" class="headerlink" title="图的类型"></a>图的类型</h2><h3 id="无向图"><a href="#无向图" class="headerlink" title="无向图"></a>无向图</h3><ul><li><strong>顶点</strong>（vertex），<strong>边</strong>（edge）</li><li>顶点之间的连接<strong>没有方向</strong></li><li>路径：从任一顶点开始，由边或弧的邻接至关系构成的有限长顶点序列</li></ul><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207101256492.png" alt="无向图"></p><blockquote><p>比如：从D -&gt; C的路径有：</p><p> D -&gt; A -&gt; B -&gt; C</p><p> D -&gt; B-&gt; C</p></blockquote><h3 id="有向图"><a href="#有向图" class="headerlink" title="有向图"></a>有向图</h3><ul><li>顶点之间存在<strong>方向</strong></li><li>A只能通向B，而B不能通向A<br>  <img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207101256200.png" alt="有向图"></li></ul><h3 id="带权图"><a href="#带权图" class="headerlink" title="带权图"></a>带权图</h3><ul><li>边带权值的图（也称为<strong>网</strong>）</li></ul><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207101256335.png" alt="带权图"></p><h2 id="图的表达方式"><a href="#图的表达方式" class="headerlink" title="图的表达方式"></a>图的表达方式</h2><h3 id="二维数组表示（邻接矩阵）"><a href="#二维数组表示（邻接矩阵）" class="headerlink" title="二维数组表示（邻接矩阵）"></a>二维数组表示（邻接矩阵）</h3><blockquote><p>邻接矩阵：表示图形中顶点之间<strong>相邻关系</strong>的矩阵</p><p>对于 n 个顶点的图而言，矩阵的 row 和 col 表示的是 1…n 个点</p></blockquote><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207101256446.png" alt="邻接矩阵"></p><ul><li>0 表示不存在连接</li><li>1 表示存在连接</li></ul><h3 id="链表表示（邻接表）"><a href="#链表表示（邻接表）" class="headerlink" title="链表表示（邻接表）"></a>链表表示（邻接表）</h3><ul><li><strong>邻接矩阵</strong>需要给每个顶点都分配 n 个空间，但存在很多边其实没有被使用的情况，浪费空间，所以常常选择用<strong>邻接表</strong>来表示图</li><li><strong>邻接表</strong>的实现只存储<strong>存在的边</strong>，不会存储<strong>不存在的边</strong>，所以<strong>邻接表比邻接矩阵</strong>更加<strong>节约空间</strong></li></ul><h4 id="邻接表的组成"><a href="#邻接表的组成" class="headerlink" title="邻接表的组成"></a>邻接表的组成</h4><ul><li><p>数组 + 链表</p></li><li><p>每个顶点都对应一个链表，链表中存储的是相连的顶点</p><blockquote><p>比如在下图中</p><p> 以 0 为顶点作链表。由图可知，0与1 2 3 4 相连，所以将相连的几个顶点放置到链表中</p></blockquote></li></ul><p><img src="https://img-blog.csdnimg.cn/584e28d3a45b4112b45e383bed4fa644.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZVZhbmUtYmI=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h2 id="图的实现"><a href="#图的实现" class="headerlink" title="图的实现"></a>图的实现</h2><h3 id="实现要求"><a href="#实现要求" class="headerlink" title="实现要求"></a>实现要求</h3><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207101257186.png" alt="例子"></p><hr><h3 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h3><ol><li>存储顶点 <code>String</code><ul><li>使用集合<code>ArrayList</code></li></ul></li><li>保存矩阵<ul><li>使用<strong>二维数组</strong></li></ul></li></ol><hr><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Graph</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> vertexList<span class="token punctuation">;</span><span class="token comment">//存储顶点集合</span>    <span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> edges<span class="token punctuation">;</span><span class="token comment">//存储边的邻接矩阵</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> numOfEdges<span class="token punctuation">;</span><span class="token comment">//边的数目</span>    <span class="token comment">//构造器</span>    <span class="token keyword">public</span> <span class="token class-name">Graph</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//初始化</span>        vertexList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>        edges <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>        numOfEdges <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    * 图的常用方法    *   返回节点的个数    *   得到边的数目    *   返回节点i对应的值    *   返回v1与v2的权值    *   显示图对应的矩阵     */</span>    <span class="token comment">//显示图对应的矩阵</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showGraph</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> links <span class="token operator">:</span> edges<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>links<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//返回节点的个数</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getNumOfVertex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> vertexList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//得到边的数目</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getNumOfEdges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> numOfEdges<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//返回节点i对应的值</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> vertexList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//返回v1与v2的权值</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getWeight</span><span class="token punctuation">(</span><span class="token keyword">int</span> v1<span class="token punctuation">,</span> <span class="token keyword">int</span> v2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> edges<span class="token punctuation">[</span>v1<span class="token punctuation">]</span><span class="token punctuation">[</span>v2<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertVertex</span><span class="token punctuation">(</span><span class="token class-name">String</span> vertex<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        vertexList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>vertex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     *     * @param v1 第一个顶点的下标（即第几个顶点）     * @param v2 第二个顶点的下标（即第几个顶点）     * @param weight 表示边     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token keyword">int</span> v1<span class="token punctuation">,</span> <span class="token keyword">int</span> v2<span class="token punctuation">,</span> <span class="token keyword">int</span> weight<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        edges<span class="token punctuation">[</span>v1<span class="token punctuation">]</span><span class="token punctuation">[</span>v2<span class="token punctuation">]</span> <span class="token operator">=</span> weight<span class="token punctuation">;</span>        edges<span class="token punctuation">[</span>v2<span class="token punctuation">]</span><span class="token punctuation">[</span>v1<span class="token punctuation">]</span> <span class="token operator">=</span> weight<span class="token punctuation">;</span>        numOfEdges<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//测试</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> vertexs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"A"</span><span class="token punctuation">,</span><span class="token string">"B"</span><span class="token punctuation">,</span><span class="token string">"C"</span><span class="token punctuation">,</span><span class="token string">"D"</span><span class="token punctuation">,</span><span class="token string">"E"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">//初始化图</span>        <span class="token class-name">Graph</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Graph</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//添加顶点</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> vertex <span class="token operator">:</span> vertexs<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            graph<span class="token punctuation">.</span><span class="token function">insertVertex</span><span class="token punctuation">(</span>vertex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//添加边</span>        graph<span class="token punctuation">.</span><span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        graph<span class="token punctuation">.</span><span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        graph<span class="token punctuation">.</span><span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        graph<span class="token punctuation">.</span><span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        graph<span class="token punctuation">.</span><span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//显示邻接矩阵</span>        graph<span class="token punctuation">.</span><span class="token function">showGraph</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="图的遍历"><a href="#图的遍历" class="headerlink" title="图的遍历"></a>图的遍历</h2><h3 id="深度优先搜索（Depth-First-Search）"><a href="#深度优先搜索（Depth-First-Search）" class="headerlink" title="深度优先搜索（Depth First Search）"></a>深度优先搜索（Depth First Search）</h3><ul><li>深度优先搜索：从<strong>顶点v</strong>出发，访问v的所有<strong>未被访问</strong>的<strong>邻接顶点</strong>，再对该顶点进行<strong>深度优先遍历</strong>，直至v的<strong>所有邻接顶点</strong>被访问。</li><li>如果这个<strong>邻接顶点</strong>被<strong>访问</strong>或者<strong>无邻接顶点</strong>，则返回<strong>上一节点</strong>。若此时图中尚有<strong>顶点未被访问</strong>，则从一个<strong>未被访问</strong>的顶点出发，重新进行<strong>深度优先遍历</strong>，直到<strong>所有顶点均被访问</strong>过为止。</li></ul><blockquote><p>DFS的典型例子：</p><p> 走迷宫。沿着一条路走，走不通则返回，然后再走其他路。</p></blockquote><ul><li>这样的访问策略是<strong>优先纵向访问</strong>，而不是对<strong>一个顶点</strong>的<strong>所有邻接顶点</strong>进行<strong>横向访问</strong></li><li>深度优先搜索是一个<strong>递归</strong>的过程</li></ul><hr><h4 id="算法步骤"><a href="#算法步骤" class="headerlink" title="算法步骤"></a>算法步骤</h4><ol><li>访问<strong>初始结点 v</strong>，并标记结点 v 为<code>已访问</code></li><li><strong>查找</strong>结点 v 的<strong>第一个邻接结点w</strong></li><li>如果 w <strong>存在</strong>，则执行<strong>步骤4</strong>。如果<strong>不存在</strong>，则回到步骤1，然后从v的<strong>下一个结点</strong>继续查找</li><li>如果 w <strong>未被访问</strong>，则继续对 w 进行<strong>深度优先遍历</strong></li><li>如果 w <strong>已被访问</strong>，则返回到 v ，继续进行步骤3</li></ol><hr><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207101257878.jpeg" alt="步骤"></p><hr><h4 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Graph</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> vertexList<span class="token punctuation">;</span><span class="token comment">//存储顶点集合</span>    <span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> edges<span class="token punctuation">;</span><span class="token comment">//存储边的邻接矩阵</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> numOfEdges<span class="token punctuation">;</span><span class="token comment">//边的数目</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> isVisit<span class="token punctuation">;</span><span class="token comment">//记录某个结点是否被访问过</span>    <span class="token comment">//构造器</span>    <span class="token keyword">public</span> <span class="token class-name">Graph</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//初始化</span>        vertexList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>        edges <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>        numOfEdges <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        isVisit <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//得到第一个邻接结点的下标 w</span>    <span class="token comment">/**     *     * @param index     * @return 如果存在邻接结点，则返回对应的下标。如果不存在，则返回-1     */</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getFirstNeighbor</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vertexList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>edges<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> i<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//根据前一个邻接结点的下标获取下一个邻接结点</span>    <span class="token comment">/**     *     * @param v1 上一个结点     * @param v2 上一个结点的另外一个邻接结点     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getNextNeighbor</span><span class="token punctuation">(</span><span class="token keyword">int</span> v1<span class="token punctuation">,</span> <span class="token keyword">int</span> v2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> v2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vertexList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>edges<span class="token punctuation">[</span>v1<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> i<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//深度优先遍历算法</span>    p <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> isVisit<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//访问当前结点</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">getValueByIndex</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" -> "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//将当前结点设置为已访问</span>        isVisit<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token comment">//查找结点i的第一个邻接结点</span>        <span class="token keyword">int</span> w <span class="token operator">=</span> <span class="token function">getFirstNeighbor</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>w <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isVisit<span class="token punctuation">[</span>w<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token function">dfs</span><span class="token punctuation">(</span>isVisit<span class="token punctuation">,</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            w <span class="token operator">=</span> <span class="token function">getNextNeighbor</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//重载dfs，遍历所有结点并进行dfs</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">getNumOfVertex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isVisit<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token function">dfs</span><span class="token punctuation">(</span>isVisit<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    * 图的常用方法    *   返回节点的个数    *   得到边的数目    *   返回节点i对应的值    *   返回v1与v2的权值    *   显示图对应的矩阵     */</span>    <span class="token comment">//显示图对应的矩阵</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showGraph</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> links <span class="token operator">:</span> edges<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>links<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//返回节点的个数</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getNumOfVertex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> vertexList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//得到边的数目</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getNumOfEdges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> numOfEdges<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//返回节点i对应的值</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getValueByIndex</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> vertexList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//返回v1与v2的权值</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getWeight</span><span class="token punctuation">(</span><span class="token keyword">int</span> v1<span class="token punctuation">,</span> <span class="token keyword">int</span> v2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> edges<span class="token punctuation">[</span>v1<span class="token punctuation">]</span><span class="token punctuation">[</span>v2<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertVertex</span><span class="token punctuation">(</span><span class="token class-name">String</span> vertex<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        vertexList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>vertex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     *     * @param v1 第一个顶点的下标（即第几个顶点）     * @param v2 第二个顶点的下标（即第几个顶点）     * @param weight 表示边     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token keyword">int</span> v1<span class="token punctuation">,</span> <span class="token keyword">int</span> v2<span class="token punctuation">,</span> <span class="token keyword">int</span> weight<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        edges<span class="token punctuation">[</span>v1<span class="token punctuation">]</span><span class="token punctuation">[</span>v2<span class="token punctuation">]</span> <span class="token operator">=</span> weight<span class="token punctuation">;</span>        edges<span class="token punctuation">[</span>v2<span class="token punctuation">]</span><span class="token punctuation">[</span>v1<span class="token punctuation">]</span> <span class="token operator">=</span> weight<span class="token punctuation">;</span>        numOfEdges<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//测试</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> vertexs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"A"</span><span class="token punctuation">,</span><span class="token string">"B"</span><span class="token punctuation">,</span><span class="token string">"C"</span><span class="token punctuation">,</span><span class="token string">"D"</span><span class="token punctuation">,</span><span class="token string">"E"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">//初始化图</span>        <span class="token class-name">Graph</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Graph</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//添加顶点</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> vertex <span class="token operator">:</span> vertexs<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            graph<span class="token punctuation">.</span><span class="token function">insertVertex</span><span class="token punctuation">(</span>vertex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//添加边</span>        graph<span class="token punctuation">.</span><span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        graph<span class="token punctuation">.</span><span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        graph<span class="token punctuation">.</span><span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        graph<span class="token punctuation">.</span><span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        graph<span class="token punctuation">.</span><span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"深度优先遍历"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        graph<span class="token punctuation">.</span><span class="token function">dfs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//显示邻接矩阵</span>        graph<span class="token punctuation">.</span><span class="token function">showGraph</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h4><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207101258388.png" alt="结果"></p><ul><li>与理论分析结果相同</li></ul><hr><h3 id="广度优先遍历（Broad-First-Search）"><a href="#广度优先遍历（Broad-First-Search）" class="headerlink" title="广度优先遍历（Broad First Search）"></a>广度优先遍历（Broad First Search）</h3><ul><li>类似于<code>分层搜索</code></li><li>需要用<strong>队列</strong>来保持访问过的结点的顺序，以便以按照顺序来访问结点的<strong>邻接结点</strong></li></ul><hr><h4 id="算法步骤-1"><a href="#算法步骤-1" class="headerlink" title="算法步骤"></a>算法步骤</h4><ol><li>访问初始结点 <strong>v</strong> 并标记结点 <strong>v</strong> 为已访问</li><li>结点 <strong>v</strong> 入队列</li><li>当<strong>队列非空</strong>时，继续执行，否则算法结束</li><li>出队列，取得队头结点 <strong>u</strong></li><li>查找结点 <strong>u</strong> 的第一个邻接结点 <strong>w</strong></li><li>若结点u的邻接结点w不存在，则回到步骤3，否则循环执行下面的步骤<ul><li>若结点 <strong>w</strong> 没有被访问，则访问结点 <strong>w</strong> 并标记为已访问</li><li>结点 <strong>w</strong> 入队列</li><li>查找结点 <strong>u</strong> 的继 w 邻接结点后的下一个邻接结点 <strong>w</strong></li></ul></li></ol><h4 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h4><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207101258821.jpeg" alt="BFS步骤"></p><hr><h4 id="代码实现-2"><a href="#代码实现-2" class="headerlink" title="代码实现"></a>代码实现</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Graph</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> vertexList<span class="token punctuation">;</span><span class="token comment">//存储顶点集合</span>    <span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> edges<span class="token punctuation">;</span><span class="token comment">//存储边的邻接矩阵</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> numOfEdges<span class="token punctuation">;</span><span class="token comment">//边的数目</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> isVisit<span class="token punctuation">;</span><span class="token comment">//记录某个结点是否被访问过</span>    <span class="token comment">//构造器</span>    <span class="token keyword">public</span> <span class="token class-name">Graph</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//初始化</span>        vertexList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>        edges <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>        numOfEdges <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        isVisit <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//得到第一个邻接结点的下标 w</span>    <span class="token comment">/**     *     * @param index     * @return 如果存在邻接结点，则返回对应的下标。如果不存在，则返回-1     */</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getFirstNeighbor</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vertexList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>edges<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> i<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//根据前一个邻接结点的下标获取下一个邻接结点</span>    <span class="token comment">/**     *     * @param v1 上一个结点     * @param v2 上一个结点的另外一个邻接结点     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getNextNeighbor</span><span class="token punctuation">(</span><span class="token keyword">int</span> v1<span class="token punctuation">,</span> <span class="token keyword">int</span> v2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> v2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vertexList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>edges<span class="token punctuation">[</span>v1<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> i<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">resetIsVisit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        isVisit <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token function">getNumOfVertex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//广度优先遍历</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">bfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">resetIsVisit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> head<span class="token punctuation">;</span>        <span class="token keyword">int</span> neighbor<span class="token punctuation">;</span>        <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">getValueByIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"-> "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        isVisit<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            head <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            neighbor <span class="token operator">=</span> <span class="token function">getFirstNeighbor</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span><span class="token punctuation">(</span>neighbor <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isVisit<span class="token punctuation">[</span>neighbor<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">getValueByIndex</span><span class="token punctuation">(</span>neighbor<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"-> "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    isVisit<span class="token punctuation">[</span>neighbor<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>neighbor<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                neighbor <span class="token operator">=</span> <span class="token function">getNextNeighbor</span><span class="token punctuation">(</span>head<span class="token punctuation">,</span>neighbor<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    * 图的常用方法    *   返回节点的个数    *   得到边的数目    *   返回节点i对应的值    *   返回v1与v2的权值    *   显示图对应的矩阵     */</span>    <span class="token comment">//显示图对应的矩阵</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showGraph</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> links <span class="token operator">:</span> edges<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>links<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//返回节点的个数</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getNumOfVertex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> vertexList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//得到边的数目</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getNumOfEdges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> numOfEdges<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//返回节点i对应的值</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getValueByIndex</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> vertexList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//返回v1与v2的权值</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getWeight</span><span class="token punctuation">(</span><span class="token keyword">int</span> v1<span class="token punctuation">,</span> <span class="token keyword">int</span> v2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> edges<span class="token punctuation">[</span>v1<span class="token punctuation">]</span><span class="token punctuation">[</span>v2<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertVertex</span><span class="token punctuation">(</span><span class="token class-name">String</span> vertex<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        vertexList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>vertex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     *     * @param v1 第一个顶点的下标（即第几个顶点）     * @param v2 第二个顶点的下标（即第几个顶点）     * @param weight 表示边     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token keyword">int</span> v1<span class="token punctuation">,</span> <span class="token keyword">int</span> v2<span class="token punctuation">,</span> <span class="token keyword">int</span> weight<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        edges<span class="token punctuation">[</span>v1<span class="token punctuation">]</span><span class="token punctuation">[</span>v2<span class="token punctuation">]</span> <span class="token operator">=</span> weight<span class="token punctuation">;</span>        edges<span class="token punctuation">[</span>v2<span class="token punctuation">]</span><span class="token punctuation">[</span>v1<span class="token punctuation">]</span> <span class="token operator">=</span> weight<span class="token punctuation">;</span>        numOfEdges<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//测试</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> vertexs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"A"</span><span class="token punctuation">,</span><span class="token string">"B"</span><span class="token punctuation">,</span><span class="token string">"C"</span><span class="token punctuation">,</span><span class="token string">"D"</span><span class="token punctuation">,</span><span class="token string">"E"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">//初始化图</span>        <span class="token class-name">Graph</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Graph</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//添加顶点</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> vertex <span class="token operator">:</span> vertexs<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            graph<span class="token punctuation">.</span><span class="token function">insertVertex</span><span class="token punctuation">(</span>vertex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//添加边</span>        graph<span class="token punctuation">.</span><span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        graph<span class="token punctuation">.</span><span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        graph<span class="token punctuation">.</span><span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        graph<span class="token punctuation">.</span><span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        graph<span class="token punctuation">.</span><span class="token function">insertEdge</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"广度优先遍历"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        graph<span class="token punctuation">.</span><span class="token function">bfs</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//显示邻接矩阵</span>        graph<span class="token punctuation">.</span><span class="token function">showGraph</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="证明-1"><a href="#证明-1" class="headerlink" title="证明"></a>证明</h4><p><img src="https://img-blog.csdnimg.cn/b680690f3bb84378a11bdd13447c4d66.png#pic_center" alt="结果"></p><ul><li>与理论分析结果相同</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
            <tag> 图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eNSP-构建静态路由实验</title>
      <link href="/2021/12/02/categories/ensp/ensp-gou-jian-jing-tai-lu-you-shi-yan/"/>
      <url>/2021/12/02/categories/ensp/ensp-gou-jian-jing-tai-lu-you-shi-yan/</url>
      
        <content type="html"><![CDATA[<h2 id="构建静态路由"><a href="#构建静态路由" class="headerlink" title="构建静态路由"></a>构建静态路由</h2><ul><li>网络拓扑图如下：</li></ul><p><img src="https://img-blog.csdnimg.cn/d34456807d824fd5b3e6fb4ef549a829.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="网络拓扑"></p><h3 id="设置AR-1"><a href="#设置AR-1" class="headerlink" title="设置AR-1"></a>设置AR-1</h3><pre class="line-numbers language-none"><code class="language-none">sysundo info-cen ensys AR-1int g0&#x2F;0&#x2F;0ip addr 1.1.1.254 24quitint g0&#x2F;0&#x2F;1ip addr 3.1.1.1 24quitdis ip rout12345678910<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>查路由表可知设置成功<br>  <img src="https://img-blog.csdnimg.cn/4d5fdc5bcfe34f08b94c56cc69cf9ee0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="路由表"></li></ul><h3 id="设置AR-2"><a href="#设置AR-2" class="headerlink" title="设置AR-2"></a>设置AR-2</h3><pre class="line-numbers language-none"><code class="language-none">sysundo info-cen ensys AR-2int g0&#x2F;0&#x2F;0ip addr 3.1.1.2 24quitint g0&#x2F;0&#x2F;1ip addr 2.2.2.254 24quitdis ip rout12345678910<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>查路由表可知设置成功</li></ul><p><img src="https://img-blog.csdnimg.cn/cf816ac905844434ad7451fdc4c50a18.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="路由表"></p><h3 id="设置AR-1与AR-2的静态路由"><a href="#设置AR-1与AR-2的静态路由" class="headerlink" title="设置AR-1与AR-2的静态路由"></a>设置AR-1与AR-2的静态路由</h3><ul><li>AR-1</li></ul><pre class="line-numbers language-none"><code class="language-none">ip route-sta 2.2.2.2 24 3.1.1.2dis ip rout12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>检查路由表的下一跳与静态路由是否配置成功</li></ul><p><img src="https://img-blog.csdnimg.cn/0b1e71b27fd04a82862d6d2223414bfb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="路由表"></p><ul><li><p>设置成功</p></li><li><p>AR-2</p></li></ul><pre class="line-numbers language-none"><code class="language-none">ip route-sta 1.1.1.1 24 3.1.1.1dis ip rout12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>检查路由表的下一跳与静态路由是否配置成功</li></ul><p><img src="https://img-blog.csdnimg.cn/ea4caf4099c04258bad8a351c80f7bd5.png#pic_center" alt="设置成功"></p><ul><li>设置成功</li></ul><h3 id="测试主机是否能ping通"><a href="#测试主机是否能ping通" class="headerlink" title="测试主机是否能ping通"></a>测试主机是否能ping通</h3><p><img src="https://img-blog.csdnimg.cn/6f1e8e9b7770481cb57016996f4a4ab4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="ping"></p><ul><li>测试能ping通，最开始的<strong>Request timeout</strong>是<strong>ARP</strong>导致的</li></ul><h4 id="测试ARP"><a href="#测试ARP" class="headerlink" title="测试ARP"></a>测试ARP</h4><ul><li>对AR-1的GE0&#x2F;0&#x2F;0进行抓包，清空主机的ARP缓存</li><li>重新测试通信</li></ul><img src="https://img-blog.csdnimg.cn/b045dfc24d6e445bbcc6bcdfb1f462e2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述" style="zoom:150%;" /><ul><li>在存在ARP缓存的情况下继续通信，并继续抓包</li></ul><img src="https://img-blog.csdnimg.cn/331068b0981141929ad539dba8b9aa54.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述" style="zoom:150%;" /><ul><li>在没有ARP请求的情况下，主机通信没有出现超时</li><li>所以证得，(在网络设置正确的情况下) 主机通信出现超时的原因是因为ARP协议</li></ul>]]></content>
      
      
      <categories>
          
          <category> ensp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ensp </tag>
            
            <tag> 路由 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由基础-直连路由、静态路由与动态路由</title>
      <link href="/2021/12/02/categories/ensp/lu-you-ji-chu-zhi-lian-lu-you-jing-tai-lu-you-yu-dong-tai-lu-you/"/>
      <url>/2021/12/02/categories/ensp/lu-you-ji-chu-zhi-lian-lu-you-jing-tai-lu-you-yu-dong-tai-lu-you/</url>
      
        <content type="html"><![CDATA[<h2 id="路由的来源"><a href="#路由的来源" class="headerlink" title="路由的来源"></a>路由的来源</h2><table><thead><tr><th>路由来源</th><th>备注</th></tr></thead><tbody><tr><td>直连路由</td><td>路由器接口上的网络（接口配置了IP地址并且开启）</td></tr><tr><td>静态路由</td><td>管理员手工添加的网络</td></tr><tr><td>动态路由</td><td>路由器之间动态学习形成的网络</td></tr></tbody></table><h3 id="直连路由"><a href="#直连路由" class="headerlink" title="直连路由"></a>直连路由</h3><p><img src="https://img-blog.csdnimg.cn/51663a2667db48218e2726957eaa3f9b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_16,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><ul><li>上面这个路由的右边与下面的接口在<strong>配置IP地址</strong>后，并且在<strong>开启</strong>的状态下，形成了<strong>直连路由</strong></li></ul><p><img src="https://img-blog.csdnimg.cn/b379a782a1154415a7890251a9c03dea.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="路由表"></p><h3 id="静态路由"><a href="#静态路由" class="headerlink" title="静态路由"></a><a href="https://so.csdn.net/so/search?q=%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1&spm=1001.2101.3001.7020">静态路由</a></h3><p><img src="https://img-blog.csdnimg.cn/b8aebdfce35f4199baba450981b8c854.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><ul><li>为了使目标地址为PC2的数据包转发到相应目的地，设置AR1的下一跳为10.1.1.2</li></ul><p><img src="https://img-blog.csdnimg.cn/bc8bd6efab9a4aec8c0a63179b1d6c3d.png#pic_center" alt="静态路由"></p><h3 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h3><p><img src="https://img-blog.csdnimg.cn/1b85ca47f58a49e88319c532c7cc96d4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><ul><li>设置两路由器的动态路由OSPF</li></ul><p><img src="https://img-blog.csdnimg.cn/3c5c12723d3f41ad8ba39ce7b6db7a50.png#pic_center" alt="ospf"></p>]]></content>
      
      
      <categories>
          
          <category> ensp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ensp </tag>
            
            <tag> 路由 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由基础-分析路由表以及关于路由选路的问题</title>
      <link href="/2021/12/02/categories/ensp/lu-you-ji-chu-fen-xi-lu-you-biao-yi-ji-guan-yu-lu-you-xuan-lu-de-wen-ti/"/>
      <url>/2021/12/02/categories/ensp/lu-you-ji-chu-fen-xi-lu-you-biao-yi-ji-guan-yu-lu-you-xuan-lu-de-wen-ti/</url>
      
        <content type="html"><![CDATA[<h2 id="路由表解析"><a href="#路由表解析" class="headerlink" title="路由表解析"></a>路由表解析</h2><ul><li><blockquote><p>命令：display ip routing-table</p></blockquote></li></ul><p><img src="https://img-blog.csdnimg.cn/422fa1c843334c399a0c7b8551e606cf.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="路由表"></p><table><thead><tr><th>路由表字段</th><th>含义</th></tr></thead><tbody><tr><td>Destination</td><td>目标地址，用来标识IP包的<strong>目标地址或者目标网络</strong></td></tr><tr><td>Mask</td><td>网络前缀（或掩码），选择<strong>最佳路由</strong>的重要评断依据（最长匹配原则）</td></tr><tr><td>NextHop</td><td>下一跳地址，指明IP包所经由的<strong>下一个路由器的接口地址</strong></td></tr><tr><td>Interface</td><td>出接口，指明IP包将从该路由器的哪个接口转发出去</td></tr><tr><td>Protocol</td><td>协议，路由的来源，学习方式</td></tr><tr><td>Preference</td><td>优先级，比较<strong>不同路由来源</strong>到达相同目标网络的优先级，越低越优先</td></tr><tr><td>Cost</td><td>度量值，比较<strong>相同路由来源</strong>到达相同目标网络的不同路径的优先级，越低越优先</td></tr></tbody></table><h3 id="常用路由类型的默认优先级"><a href="#常用路由类型的默认优先级" class="headerlink" title="常用路由类型的默认优先级"></a>常用路由类型的默认<a href="https://so.csdn.net/so/search?q=%E4%BC%98%E5%85%88%E7%BA%A7&spm=1001.2101.3001.7020">优先级</a></h3><table><thead><tr><th>路由类型</th><th>优先级</th></tr></thead><tbody><tr><td>Direct</td><td>0</td></tr><tr><td>OSPF</td><td>10</td></tr><tr><td>Static</td><td>60</td></tr><tr><td>RIP</td><td>100</td></tr></tbody></table><h2 id="路由选路"><a href="#路由选路" class="headerlink" title="路由选路"></a>路由选路</h2><p><img src="https://img-blog.csdnimg.cn/88f33d2ac599472fa4aca505f0dc00d2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="网络拓扑"></p><ul><li>如果AR4要给AR7转发数据包，它会怎么选路呢？</li><li>假设路由协议选择不同（OSPF，RIP…）<ul><li>上述问题属于<strong>不同路由来源到达相同目标网络</strong>，所以比较优先级</li><li>所以路由器选择优先级较低的那条路进行转发数据包</li></ul></li><li>假设所有路由协议选择相同<ul><li>上述问题属于<strong>相同路由来源到达相同目标网络</strong>，所以比较Cost</li><li>根据Cost越小，越优先</li><li>所以路由器选择Cost较低的那条路进行转发数据包</li></ul></li></ul><h3 id="路由表的工作内容"><a href="#路由表的工作内容" class="headerlink" title="路由表的工作内容"></a>路由表的工作内容</h3><ul><li>收到数据包查看<strong>目标IP地址</strong></li><li>在路由表中选择<strong>最佳路径</strong></li><li><strong>维护</strong>路由表</li><li>注意：路由表所显示的信息已经是<strong>比较优先级</strong>之后的结果</li></ul>]]></content>
      
      
      <categories>
          
          <category> ensp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ensp </tag>
            
            <tag> 路由 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由基础-等价路由负载分担</title>
      <link href="/2021/12/02/categories/ensp/lu-you-ji-chu-deng-jie-lu-you-fu-zai-fen-dan/"/>
      <url>/2021/12/02/categories/ensp/lu-you-ji-chu-deng-jie-lu-you-fu-zai-fen-dan/</url>
      
        <content type="html"><![CDATA[<ul><li><h2 id="等价路由（ECMP，Equal-Cost-Multi-Path）"><a href="#等价路由（ECMP，Equal-Cost-Multi-Path）" class="headerlink" title="等价路由（ECMP，Equal Cost Multi-Path）"></a>等价路由（ECMP，Equal Cost Multi-Path）</h2><ul><li>对于<strong>同一个路由来源</strong>，当达到同一个目标网络有<strong>几条相同度量值</strong>的路由时，<strong>这些路由都会被加入到路由表</strong>中，数据包会在这几个链路上进行<strong>负载分担</strong></li><li><strong>负载分担</strong>不是将<strong>数据包对半分</strong>，而是有一套算法机制控制</li></ul><p>  <img src="https://img-blog.csdnimg.cn/b4a6d2ed03af4f7e81b512a4f8e5b228.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="路由表"></p><h2 id="最长匹配原则"><a href="#最长匹配原则" class="headerlink" title="最长匹配原则"></a>最长匹配原则</h2><ul><li>最长前缀匹配原则：如果路由表查表转发分组时发现有多条路由可选择时，则选择网络前缀最长的那条进行转发</li></ul><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><p>  <img src="https://img-blog.csdnimg.cn/0da7608e0f4a4a188c9b4839a0b85f28.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="路由表"></p><h4 id="路由表的匹配过程"><a href="#路由表的匹配过程" class="headerlink" title="路由表的匹配过程"></a>路由表的匹配过程</h4>  <pre class="line-numbers language-none"><code class="language-none">当有数据报文传来时，路由表会将报文的目的地址前n位与表中的路由前n位相与（n为路由中的掩码长度）。如果不一致则排除对应路由。如果一致，则选择匹配长度最长的路由进行转发例如：当有目的地址为 9.1.2.1 的报文传来时路由器会将 8.0.0.0&#x2F;8 的路由与 9.1.2.1的前八位相与00001000 00000000 00000000 00000000(8.0.0.0)00001001 00000001 00000010 00000001(9.1.2.1)很明显能够得出，两地址前八位相与不能得到原八位路由器将不能匹配的路由剔除后，会选择子网掩码最长的路由进行数据转发,这也就是最长匹配原则比如，将9.1.0.0&#x2F;16 9.0.0.0&#x2F;8 9.1.2.1进行相与00001001 00000001 00000010 00000001(9.1.2.1)00001001 00000000 00000000 00000000(9.0.0.0&#x2F;8)00001001 00000001 00000000 00000000(9.1.0.0&#x2F;16)很明显看出，9.0.0.0这条路由能匹配15位，9.1.0.0&#x2F;16这条路由能匹配22位，所以选择9.1.0.0&#x2F;16这条路由进行转发数据。因为在前n位匹配的情况下，子网掩码越长的，越优先选择。123456789101112131415<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> ensp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ensp </tag>
            
            <tag> 路由 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由基础-相关概念及正常路由的条件.md</title>
      <link href="/2021/12/01/categories/ensp/lu-you-ji-chu-xiang-guan-gai-nian-ji-zheng-chang-lu-you-de-tiao-jian/"/>
      <url>/2021/12/01/categories/ensp/lu-you-ji-chu-xiang-guan-gai-nian-ji-zheng-chang-lu-you-de-tiao-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="路由基础"><a href="#路由基础" class="headerlink" title="路由基础"></a>路由基础</h1><ul><li>路由技术是Internet得以持续运转的关键所在</li><li>不同的网络之间需要通信，这时就需要路由器来连接不同的网络，实现网络之间的数据转发</li></ul><table><thead><tr><th>术语</th><th>备注</th><th>类比</th></tr></thead><tbody><tr><td>路由（Routing）</td><td>从源头到目标的路径 不同网络间的转发过程</td><td>火车</td></tr><tr><td>路由表（Routing Table）</td><td>路由信息的集合 路由的依据</td><td>时刻表</td></tr><tr><td>路由器（Router）</td><td>具有路由功能的设备</td><td>火车站</td></tr><tr><td>默认网关（Default Gateway）</td><td>通常是路由设备的接口Ip地址</td><td>火车站的地址</td></tr></tbody></table><h2 id="路由过程"><a href="#路由过程" class="headerlink" title="路由过程"></a>路由过程</h2><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207101237509.png" alt="网络拓扑图"></p><ul><li>下一跳与出接口一一对应</li><li>下一跳：<strong>下一个路由的接口地址</strong>（可以理解为跳到下一个网关）</li></ul><table><thead><tr><th>路由器</th><th>目标网络</th><th>下一跳</th><th>出接口</th><th>路由器</th><th>目标网络</th><th>下一跳</th><th>出接口</th></tr></thead><tbody><tr><td>RA</td><td>10.1.2.0</td><td>10.1.2.1</td><td>E0</td><td>RB</td><td>10.1.2.0</td><td>10.1.2.2</td><td>E0</td></tr><tr><td></td><td>10.3.1.0</td><td>10.3.1.1</td><td>E1</td><td></td><td>10.3.1.0</td><td>10.1.2.1</td><td>E0</td></tr><tr><td></td><td>10.4.1.0</td><td>10.1.2.2</td><td>E0</td><td></td><td>10.4.1.0</td><td>10.4.1.1</td><td>E1</td></tr></tbody></table><blockquote><p>当<a href="https://so.csdn.net/so/search?q=%E8%B7%AF%E7%94%B1%E5%99%A8&spm=1001.2101.3001.7020">路由器</a>（或其他三层设备）收到一个IP数据包时，会查看数据包的IP头部中的<strong>目的IP地址</strong>，并在<a href="https://so.csdn.net/so/search?q=%E8%B7%AF%E7%94%B1%E8%A1%A8&spm=1001.2101.3001.7020">路由表</a>中进行查找，在匹配到<strong>最优的路由</strong>后，将数据包扔给该路由所指的<strong>出接口或下一跳</strong></p></blockquote><ul><li>特别：路由器必须要知道<strong>下一跳与出接口</strong>才会正常转发数据</li></ul><h3 id="求证路由器是否需要知道下一跳与出接口"><a href="#求证路由器是否需要知道下一跳与出接口" class="headerlink" title="求证路由器是否需要知道下一跳与出接口"></a>求证路由器是否需要知道下一跳与出接口</h3><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207101237373.png" alt="网络拓扑图"></p><ul><li>如果在R1处设置静态路由（目的地址确定但是出接口不确定）</li></ul><p><img src="https://img-blog.csdnimg.cn/8405b12255cf455dac68a7979bb549d5.png#pic_center" alt="设置静态路由"></p><ul><li>查路由表无法找到对应表</li></ul><p><img src="https://img-blog.csdnimg.cn/5159886ab3304f07a5899d1235985b79.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="路由表"></p><ul><li>查静态路由配置能查到刚才设置的路由</li><li>并且通过配置中的<strong>Inactive</strong>可知，这条路由是处于未活跃状态</li><li>原因是下一跳的接口不确定</li></ul><p><img src="https://img-blog.csdnimg.cn/68dd59f8a6db4bf78f8b53d9c82122df.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="接口状态"></p><ul><li>重新设置对应的静态路由</li></ul><p><img src="https://img-blog.csdnimg.cn/6e95b83627cc46abb1aa0a77325617d2.png#pic_center" alt="设置静态路由"></p><ul><li>再次查表能查到相应的静态路由</li></ul><p><img src="https://img-blog.csdnimg.cn/66174e8f7de24ecd9688bb06da9a6cf9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="静态路由信息"></p><ul><li>测试主机之间是否能ping通</li></ul><p><img src="https://img-blog.csdnimg.cn/6123af6d743a4610b4b5e2e34427e63d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="测试ping"></p><ul><li>所以路由器必须要知道<strong>下一跳与出接口</strong>才会正常转发数据</li></ul>]]></content>
      
      
      <categories>
          
          <category> ensp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ensp </tag>
            
            <tag> 路由 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IP地址的组成</title>
      <link href="/2021/11/28/categories/wang-luo/ji-suan-ji-wang-luo-ip-di-zhi-de-zu-cheng/"/>
      <url>/2021/11/28/categories/wang-luo/ji-suan-ji-wang-luo-ip-di-zhi-de-zu-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h1><ul><li>在IP网络通信中，通信节点需要有<strong>IP地址</strong>才能相互通信</li></ul><h2 id="IP的组成"><a href="#IP的组成" class="headerlink" title="IP的组成"></a>IP的组成</h2><ul><li>以<strong>点分十进制</strong>表示，由<strong>32位二进制</strong>组成<br>  <img src="https://img-blog.csdnimg.cn/79126ffdb1994b42964f4b6e1d3b00b2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="IP"></li><li>分为<strong>网络位</strong>和<strong>主机位</strong>两部分<ul><li>网络位，代表IP地址所属的网段</li><li>主机位，代表网段上的某个节点</li><li>由子网掩码决定分界点<br>  <img src="https://img-blog.csdnimg.cn/a85f2bcc46d84ec78f5f05a21235c47a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="IP header"></li></ul></li></ul><h2 id="熟记常用二进制与十进制的转化"><a href="#熟记常用二进制与十进制的转化" class="headerlink" title="熟记常用二进制与十进制的转化"></a>熟记常用<a href="https://so.csdn.net/so/search?q=%E4%BA%8C%E8%BF%9B%E5%88%B6&spm=1001.2101.3001.7020">二进制</a>与十进制的转化</h2><p><img src="https://img-blog.csdnimg.cn/4b75efa038d243678d91489e42edcc5a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="二进制与十进制"></p><p>资料参考：<a href="https://www.bilibili.com/video/BV1Dg4y187bZ">https://www.bilibili.com/video/BV1Dg4y187bZ</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> IP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>子网掩码以及网络地址、主机地址、广播地址</title>
      <link href="/2021/11/28/categories/wang-luo/ji-suan-ji-wang-luo-fen-lei-bian-zhi-de-ipv4-di-zhi-yi-ji-hua-fen-zi-wang-de-li-ti/"/>
      <url>/2021/11/28/categories/wang-luo/ji-suan-ji-wang-luo-fen-lei-bian-zhi-de-ipv4-di-zhi-yi-ji-hua-fen-zi-wang-de-li-ti/</url>
      
        <content type="html"><![CDATA[<ul><li><h1 id="子网掩码-Subnet-Mask"><a href="#子网掩码-Subnet-Mask" class="headerlink" title="子网掩码(Subnet Mask)"></a>子网掩码(Subnet Mask)</h1><ul><li>用于区分网络位与主机位</li><li>1表示网络位，0表示主机位（连续的1和0）</li></ul><h2 id="默认子网掩码"><a href="#默认子网掩码" class="headerlink" title="默认子网掩码"></a>默认子网掩码</h2><p>  <img src="https://img-blog.csdnimg.cn/24e7efbaf68341b4bc44cc656a6b0766.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="默认子网掩码"></p><h1 id="网络地址、主机地址、广播地址"><a href="#网络地址、主机地址、广播地址" class="headerlink" title="网络地址、主机地址、广播地址"></a>网络地址、主机地址、<a href="https://so.csdn.net/so/search?q=%E5%B9%BF%E6%92%AD%E5%9C%B0%E5%9D%80&spm=1001.2101.3001.7020">广播地址</a></h1><table><thead><tr><th>名称</th><th>定义</th></tr></thead><tbody><tr><td>网络地址</td><td>主机位<strong>全为0</strong> 代表一个网段（头）</td></tr><tr><td>主机地址</td><td>主机位<strong>不全为0也不全为1</strong> 代表一个网段的一个节点（身体）</td></tr><tr><td>广播地址</td><td>主机位<strong>全为1</strong> 代表一个网段内的所有节点（尾）</td></tr></tbody></table><p>  <img src="https://img-blog.csdnimg.cn/0e3376889964410db16218ce59ee8bfd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="各部分对应位置"></p><h2 id="各类IP地址可分配的网路地址与IP地址"><a href="#各类IP地址可分配的网路地址与IP地址" class="headerlink" title="各类IP地址可分配的网路地址与IP地址"></a>各类IP地址可分配的网路地址与IP地址</h2><table><thead><tr><th>类别</th><th>可分配网络数量</th><th>可分配IP地址数量</th></tr></thead><tbody><tr><td>A类</td><td>2^(8-1) - 2 &#x3D; 126 (减2的原因是除去最小网络号0 与最大网络号127)</td><td>2^24 - 2 （除去网络地址 与广播地址）</td></tr><tr><td>B类</td><td>2^(16-2) &#x3D; 16384</td><td>2^16 - 2 &#x3D; 65534</td></tr><tr><td>C类</td><td>2^(24-3) &#x3D; 2097152</td><td>2^8 - 2 &#x3D; 254</td></tr></tbody></table></li></ul><p>​<br>​    资料参考：<a href="https://www.bilibili.com/video/BV1Dg4y187bZ">https://www.bilibili.com/video/BV1Dg4y187bZ</a> <a href="https://www.bilibili.com/video/BV1c4411d7jb">https://www.bilibili.com/video/BV1c4411d7jb</a></p><ul><li><p>&#96;&#96;&#96;</p>  <pre class="line-numbers language-none"><code class="language-none">- &#96;&#96;&#96;    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> IP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算机网络】子网掩码以及各类地址</title>
      <link href="/2021/11/28/categories/wang-luo/ji-suan-ji-wang-luo-zi-wang-yan-ma-yi-ji-ge-lei-di-zhi/"/>
      <url>/2021/11/28/categories/wang-luo/ji-suan-ji-wang-luo-zi-wang-yan-ma-yi-ji-ge-lei-di-zhi/</url>
      
        <content type="html"><![CDATA[<ul><li><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h2 id="分类编址的IPv4地址"><a href="#分类编址的IPv4地址" class="headerlink" title="分类编址的IPv4地址"></a>分类编址的IPv4地址</h2><p>  <img src="https://img-blog.csdnimg.cn/de0ef8a32919414b8ef37168bfd13d07.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="分类ip"></p><h2 id="划分子网"><a href="#划分子网" class="headerlink" title="划分子网"></a>划分<a href="https://so.csdn.net/so/search?q=%E5%AD%90%E7%BD%91&spm=1001.2101.3001.7020">子网</a></h2><p>  <img src="https://img-blog.csdnimg.cn/22bab5a13a234b98a744ace4718a5920.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="划分子网"></p><p>  <img src="https://img-blog.csdnimg.cn/228b1a5431a145d19a02b559a9cc25b6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="划分子网"><br>  资料参考：<a href="https://www.bilibili.com/video/BV1Dg4y187bZ">https://www.bilibili.com/video/BV1Dg4y187bZ</a><br>  <a href="https://www.bilibili.com/video/BV1c4411d7jb">https://www.bilibili.com/video/BV1c4411d7jb</a></p>  <pre class="line-numbers language-none"><code class="language-none">    <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> IP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由基础-路由聚合(汇总)以及最长匹配原则</title>
      <link href="/2021/11/28/categories/ensp/lu-you-ji-chu-lu-you-ju-he-hui-zong-yi-ji-zui-chang-pi-pei-yuan-ze/"/>
      <url>/2021/11/28/categories/ensp/lu-you-ji-chu-lu-you-ju-he-hui-zong-yi-ji-zui-chang-pi-pei-yuan-ze/</url>
      
        <content type="html"><![CDATA[<h1 id="路由聚合-构造超网"><a href="#路由聚合-构造超网" class="headerlink" title="路由聚合(构造超网)"></a>路由聚合(构造超网)</h1><ul><li>如果有多个网段连接在一个路由器上，可以通过路由聚合将五条路由信息聚合成一个路由信息</li><li>几个网段中<strong>共同的网络前缀</strong>组成<strong>聚合地址块</strong>，聚合地址块是路由聚合之后存储的路由信息</li></ul><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p><img src="https://img-blog.csdnimg.cn/46a3b4a0171343eaa740044b90ea5410.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h2 id="最长前缀匹配原则"><a href="#最长前缀匹配原则" class="headerlink" title="最长前缀匹配原则"></a>最长前缀匹配原则</h2><blockquote><p>最长前缀匹配原则：如果路由表查表转发分组时发现有多条路由可选择时，则选择网络前缀最长的那条进行转发</p><p>原因：这样的路由更加具体</p></blockquote><ul><li>相关证明见 <a href="https://blog.csdn.net/Mikevane/article/details/121668709">路由基础-等价路由负载分担以及最长匹配原则的解析</a>      资料参考：<a href="https://www.bilibili.com/video/BV1c4411d7jb">https://www.bilibili.com/video/BV1c4411d7jb</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> ensp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ensp </tag>
            
            <tag> 路由 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算机网络】无分类编址的IPv4地址</title>
      <link href="/2021/11/28/categories/wang-luo/ji-suan-ji-wang-luo-wu-fen-lei-bian-zhi-de-ipv4-di-zhi/"/>
      <url>/2021/11/28/categories/wang-luo/ji-suan-ji-wang-luo-wu-fen-lei-bian-zhi-de-ipv4-di-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="无分类编址的IPv4地址"><a href="#无分类编址的IPv4地址" class="headerlink" title="无分类编址的IPv4地址"></a>无分类编址的IPv4地址</h2><blockquote><p>无分类域间路由选择（Classless Inter-Domain routing 可读作<strong>sider</strong>）</p></blockquote><ul><li>CIDR消除了传统的A类、B类和C类地址，以及划分子网的概念</li><li>CIDR可以更加有效地分配IPv4的地址空间</li></ul><h4 id="CIDR的作用"><a href="#CIDR的作用" class="headerlink" title="CIDR的作用"></a>CIDR的作用</h4><blockquote><p>CIDR使用“斜线记法”，或称CIDR记法。即在IPv4地址的后面加上<strong>斜线 “&#x2F;”</strong> ，在斜线后面写上<strong>网络前缀所占的比特数量</strong></p></blockquote><ul><li>CIDR实际上是将网络前缀都相同的连续的IP地址组成一个“CIDR地址块”</li><li>我们只需要知道CIDR地址块中的任何一个地址，就可以知道该地址块的全部细节：<ul><li>地址块的最小地址</li><li>地址块的最大地址</li><li>地址块的地址数量</li><li>地址块聚合某类网络（A，B，C类）的数量</li><li>地址掩码（也可继续称为子网掩码）</li></ul></li></ul><p><img src="https://mikevane.oss-cn-chengdu.aliyuncs.com/img/blog/page/202207101240832.png" alt="地址块细节"><br>资料参考：<a href="https://www.bilibili.com/video/BV1c4411d7jb">https://www.bilibili.com/video/BV1c4411d7jb</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> IP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eNSP-常用命令</title>
      <link href="/2021/11/16/categories/ensp/ensp-chang-yong-ming-ling/"/>
      <url>/2021/11/16/categories/ensp/ensp-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<h2 id="各种视窗"><a href="#各种视窗" class="headerlink" title="各种视窗"></a>各种视窗</h2><h3 id="用户视窗"><a href="#用户视窗" class="headerlink" title="用户视窗"></a>用户视窗</h3><ul><li>刚进入交换机时的界面</li></ul><blockquote><p>交换机名字外面为“&lt; &gt;”</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/e41ddc4ebd04925cd0488fbfe159db3e.png" alt="img"></p><h3 id="系统视窗"><a href="#系统视窗" class="headerlink" title="系统视窗"></a>系统视窗</h3><blockquote><p>交换机名字外面为“[ ]”<br>命令：system-view</p></blockquote><p><img src="https://img-blog.csdnimg.cn/5d972b045dee4e28bc2989e50ab087ed.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="接口视窗"><a href="#接口视窗" class="headerlink" title="接口视窗"></a>接口视窗</h3><blockquote><p>交换机+接口名称<br>命令：interface+接口</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/97ef4ab921b2c6df895781c694660828.png" alt="img"></p><h3 id="Loopback-接口视图"><a href="#Loopback-接口视图" class="headerlink" title="Loopback 接口视图"></a>Loopback 接口视图</h3><blockquote><p>设备名-Loopback</p></blockquote><p><img src="https://img-blog.csdnimg.cn/f72a469c6cb1405fa2a85e942e0b7454.png#pic_center" alt="在这里插入图片描述"></p><h3 id="用户界面视图"><a href="#用户界面视图" class="headerlink" title="用户界面视图"></a>用户界面视图</h3><p><img src="https://img-blog.csdnimg.cn/22a2caebc1ec42f98b39407cb2d73b2e.png#pic_center" alt="在这里插入图片描述"></p><h3 id="RIP-协议视图"><a href="#RIP-协议视图" class="headerlink" title="RIP 协议视图"></a>RIP 协议视图</h3><p><img src="https://img-blog.csdnimg.cn/d5d8a7c1f116453a96e7755a477035e5.png#pic_center" alt="在这里插入图片描述"></p><h3 id="OSPF-协议视图"><a href="#OSPF-协议视图" class="headerlink" title="OSPF 协议视图"></a>OSPF 协议视图</h3><p><img src="https://img-blog.csdnimg.cn/3ddde2bd81bd475483871b99ae70a806.png#pic_center" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> ensp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ensp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eNSP-常见视窗</title>
      <link href="/2021/11/16/categories/ensp/ensp-chang-jian-shi-chuang/"/>
      <url>/2021/11/16/categories/ensp/ensp-chang-jian-shi-chuang/</url>
      
        <content type="html"><![CDATA[<h2 id="各种视窗"><a href="#各种视窗" class="headerlink" title="各种视窗"></a>各种视窗</h2><h3 id="用户视窗"><a href="#用户视窗" class="headerlink" title="用户视窗"></a>用户视窗</h3><ul><li>刚进入交换机时的界面</li></ul><blockquote><p>交换机名字外面为“&lt; &gt;”</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/e41ddc4ebd04925cd0488fbfe159db3e.png" alt="用户视窗"></p><h3 id="系统视窗"><a href="#系统视窗" class="headerlink" title="系统视窗"></a>系统视窗</h3><blockquote><p>交换机名字外面为“[ ]”<br>命令：system-view</p></blockquote><p><img src="https://img-blog.csdnimg.cn/5d972b045dee4e28bc2989e50ab087ed.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBATWlrZXZhbmU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="系统视窗"></p><h3 id="接口视窗"><a href="#接口视窗" class="headerlink" title="接口视窗"></a>接口视窗</h3><blockquote><p>交换机+接口名称<br>命令：interface+接口</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/97ef4ab921b2c6df895781c694660828.png" alt="接口视窗"></p><h3 id="Loopback-接口视图"><a href="#Loopback-接口视图" class="headerlink" title="Loopback 接口视图"></a>Loopback 接口视图</h3><blockquote><p>设备名-Loopback</p></blockquote><p><img src="https://img-blog.csdnimg.cn/f72a469c6cb1405fa2a85e942e0b7454.png#pic_center" alt="接口视图"></p><h3 id="用户界面视图"><a href="#用户界面视图" class="headerlink" title="用户界面视图"></a>用户界面视图</h3><p><img src="https://img-blog.csdnimg.cn/22a2caebc1ec42f98b39407cb2d73b2e.png#pic_center" alt="用户界面视图"></p><h3 id="RIP-协议视图"><a href="#RIP-协议视图" class="headerlink" title="RIP 协议视图"></a>RIP 协议视图</h3><p><img src="https://img-blog.csdnimg.cn/d5d8a7c1f116453a96e7755a477035e5.png#pic_center" alt="RIP视图"></p><h3 id="OSPF-协议视图"><a href="#OSPF-协议视图" class="headerlink" title="OSPF 协议视图"></a>OSPF 协议视图</h3><p><img src="https://img-blog.csdnimg.cn/3ddde2bd81bd475483871b99ae70a806.png#pic_center" alt="OSPF视图"></p>]]></content>
      
      
      <categories>
          
          <category> ensp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ensp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>交换机三种端口模式的特点</title>
      <link href="/2021/11/16/categories/ensp/jiao-huan-ji-san-chong-duan-kou-mo-shi-de-te-dian/"/>
      <url>/2021/11/16/categories/ensp/jiao-huan-ji-san-chong-duan-kou-mo-shi-de-te-dian/</url>
      
        <content type="html"><![CDATA[<h2 id="交换机三种端口模式的特点"><a href="#交换机三种端口模式的特点" class="headerlink" title="交换机三种端口模式的特点"></a>交换机三种端口模式的特点</h2><table><thead><tr><th>接口</th><th>属于多端口</th><th>(通常)连接设备</th><th>PVID</th><th>接受</th><th>发送</th></tr></thead><tbody><tr><td>Access</td><td>❌</td><td>计算机</td><td>PVID &#x3D; VLAN ID</td><td>一般接受<strong>untagged</strong>数据帧，部分产品接受<strong>tagged</strong>数据帧 • 当接收<strong>untagged</strong>数据帧时，根据端口<strong>PVID</strong>值为数据帧加上tag和缺省优先级，再进 行交换转发； • 当收到<strong>tagged</strong>数据帧时，不同厂家设备可能处理不一样的！（忽略此特殊情况）</td><td><strong>去除标签并进行转发:</strong> • 对于数据帧中的<strong>VID</strong>与端口<strong>PVID</strong>一致的，去除标签并进行转发！ • 对于数据帧中的VID与端口PVID不一致的，不进行转发！</td></tr><tr><td>Trunk</td><td>✔</td><td>交换机之间或交换机与路由器</td><td>默认为1</td><td>• 能够接收<strong>VID&#x3D;PVID</strong>和<strong>VID≠PVID</strong>的<strong>tagged frame</strong>，不改变Tag； • 对于<strong>untagged frame</strong>则加上端口的<strong>PVID</strong>和<strong>default priority</strong>再进行交换转发；</td><td>• 对于VID&#x3D;PVID的<strong>Tag</strong>包则去掉<strong>VID Tag</strong>再进行转发。 • 对于<strong>VID ≠ PVID</strong>的<strong>Tag</strong>包则转发不修改<strong>Tag</strong>。 • 对于<strong>Untagged</strong>包则无此情况。</td></tr><tr><td>Hybrid</td><td>✔</td><td>Access + Trunk</td><td>默认为1</td><td>• 能够接收<strong>VID&#x3D;PVID</strong>和<strong>VID≠PVID</strong>的<strong>tagged frame</strong>，不改变TAG； • 对于<strong>untagged frame</strong>则加上端口的<strong>PVID</strong>和<strong>default priority</strong>再进行交换转发；</td><td>• 判断该VLAN在本端口的属性（即查看到该端口对哪些VLAN是<strong>untagged</strong>， 哪些 VLAN是 <strong>tag</strong>）。 • 如果要求输出为<strong>untagged</strong>包则在输出端口剥离VLAN信息，再发送；如果是要求输出 <strong>tag</strong>，则直接发送。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> ensp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ensp </tag>
            
            <tag> 网络 </tag>
            
            <tag> 交换机 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
